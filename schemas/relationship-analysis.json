{
  "metadata": {
    "timestamp": "2025-09-23T14:41:46.593Z",
    "total_schemas_analyzed": 1045,
    "relationships_found": 1076
  },
  "relationships": {
    "fieldDependencies": {
      "USERSDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHEffectEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHLockoutPolicy": {
        "required_fields": [
          "active",
          "blocking_period",
          "max_attempts"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHLockoutPolicyRequest": {
        "required_fields": [
          "active",
          "blocking_period",
          "max_attempts"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHLoginRequest": {
        "required_fields": [
          "email",
          "password"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ]
        }
      },
      "AUTHLoginResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHMFAToken": {
        "required_fields": [
          "access_token",
          "has_active_device",
          "two_factor_required",
          "two_factor_type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPaginatedPolicyList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPaginatedTOTPDeviceListList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPatchedPolicyRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPolicy": {
        "required_fields": [
          "active",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "rules"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "AUTHPolicyRequest": {
        "required_fields": [
          "active",
          "name",
          "rules"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPolicyRule": {
        "required_fields": [
          "actions",
          "effect",
          "name",
          "resource"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "effect": [
            {
              "type": "schema_reference",
              "references": "AUTHEffectEnum",
              "description": "effect references AUTHEffectEnum schema"
            }
          ],
          "condition": [
            {
              "type": "schema_reference",
              "references": "AUTHPolicyRuleCondition",
              "description": "condition references AUTHPolicyRuleCondition schema"
            }
          ]
        }
      },
      "AUTHPolicyRuleCondition": {
        "required_fields": [
          "ip_address"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPolicyRuleConditionRequest": {
        "required_fields": [
          "ip_address"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHPolicyRuleRequest": {
        "required_fields": [
          "actions",
          "effect",
          "name",
          "resource"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "effect": [
            {
              "type": "schema_reference",
              "references": "AUTHEffectEnum",
              "description": "effect references AUTHEffectEnum schema"
            }
          ],
          "condition": [
            {
              "type": "schema_reference",
              "references": "AUTHPolicyRuleConditionRequest",
              "description": "condition references AUTHPolicyRuleConditionRequest schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncDeletePolicy": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHResponseAsyncDeleteTOTPDeviceCreate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHResponseAsyncLockoutPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHLockoutPolicy",
              "description": "data references AUTHLockoutPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncLogin": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHLoginResponse",
              "description": "data references AUTHLoginResponse schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHPolicy",
              "description": "data references AUTHPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncSessionTimeoutPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHSessionTimeoutPolicy",
              "description": "data references AUTHSessionTimeoutPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncTOTPDeviceCreate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHTOTPDeviceCreate",
              "description": "data references AUTHTOTPDeviceCreate schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncToken": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHToken",
              "description": "data references AUTHToken schema"
            }
          ]
        }
      },
      "AUTHResponseAsyncTokenPair": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHTokenPair",
              "description": "data references AUTHTokenPair schema"
            }
          ]
        }
      },
      "AUTHResponseBadRequestPolicy": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHResponseDeletePolicy": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHResponseDeleteTOTPDeviceCreate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHResponseLockoutPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHLockoutPolicy",
              "description": "data references AUTHLockoutPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseLogin": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHLoginResponse",
              "description": "data references AUTHLoginResponse schema"
            }
          ]
        }
      },
      "AUTHResponsePolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHPolicy",
              "description": "data references AUTHPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseRetrieveLockoutPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHLockoutPolicy",
              "description": "data references AUTHLockoutPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseRetrievePolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHPolicy",
              "description": "data references AUTHPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseRetrieveSessionTimeoutPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHSessionTimeoutPolicy",
              "description": "data references AUTHSessionTimeoutPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseSessionTimeoutPolicy": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHSessionTimeoutPolicy",
              "description": "data references AUTHSessionTimeoutPolicy schema"
            }
          ]
        }
      },
      "AUTHResponseTOTPDeviceCreate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHTOTPDeviceCreate",
              "description": "data references AUTHTOTPDeviceCreate schema"
            }
          ]
        }
      },
      "AUTHResponseToken": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHToken",
              "description": "data references AUTHToken schema"
            }
          ]
        }
      },
      "AUTHResponseTokenPair": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "AUTHTokenPair",
              "description": "data references AUTHTokenPair schema"
            }
          ]
        }
      },
      "AUTHSessionTimeoutPolicy": {
        "required_fields": [
          "max_idle_time",
          "max_session_time"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHSessionTimeoutPolicyRequest": {
        "required_fields": [
          "max_idle_time",
          "max_session_time"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHStateExecutedResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHStatePendingResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHTOTPDeviceCreate": {
        "required_fields": [
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHTOTPDeviceList": {
        "required_fields": [
          "id",
          "name",
          "user_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHTOTPVerificationRequest": {
        "required_fields": [
          "code"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHToken": {
        "required_fields": [
          "access_token"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHTokenPair": {
        "required_fields": [
          "access_token",
          "refresh_token"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHTokenRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "AUTHuser_login_method_response": {
        "required_fields": [
          "method",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "EDGEAWS4HMAC": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEAWS4HMACTypeEnum",
              "description": "type references EDGEAWS4HMACTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEAWS4HMACAttributes",
              "description": "attributes references EDGEAWS4HMACAttributes schema"
            }
          ]
        }
      },
      "EDGEAWS4HMACAttributes": {
        "required_fields": [
          "access_key",
          "region",
          "secret_key"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEAWS4HMACAttributesRequest": {
        "required_fields": [
          "access_key",
          "region",
          "secret_key"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEAWS4HMACRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEAWS4HMACTypeEnum",
              "description": "type references EDGEAWS4HMACTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEAWS4HMACAttributesRequest",
              "description": "attributes references EDGEAWS4HMACAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEAWS4HMACTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEAddress": {
        "required_fields": [
          "address"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEAddressLoadBalancerModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEAddressLoadBalancerModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEAddressModules": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "load_balancer": [
            {
              "type": "schema_reference",
              "references": "EDGEAddressLoadBalancerModule",
              "description": "load_balancer references EDGEAddressLoadBalancerModule schema"
            }
          ]
        }
      },
      "EDGEAddressModulesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "load_balancer": [
            {
              "type": "schema_reference",
              "references": "EDGEAddressLoadBalancerModuleRequest",
              "description": "load_balancer references EDGEAddressLoadBalancerModuleRequest schema"
            }
          ]
        }
      },
      "EDGEAddressRequest": {
        "required_fields": [
          "address"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplication": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationModules",
              "description": "modules references EDGEApplicationModules schema"
            }
          ]
        }
      },
      "EDGEApplicationAcceleratorModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationAcceleratorModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationDeviceGroups": {
        "required_fields": [
          "id",
          "name",
          "user_agent"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationDeviceGroupsRequest": {
        "required_fields": [
          "name",
          "user_agent"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationFunctionInstance": {
        "required_fields": [
          "function",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEApplicationFunctionInstanceRequest": {
        "required_fields": [
          "function",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationModules": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationModulesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationModulesRequest",
              "description": "modules references EDGEApplicationModulesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRequestPhaseRuleEngine": {
        "required_fields": [
          "behaviors",
          "criteria",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEApplicationRequestPhaseRuleEngineOrderRequest": {
        "required_fields": [
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRequestPhaseRuleEngineRequest": {
        "required_fields": [
          "behaviors",
          "criteria",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationResponsePhaseRuleEngine": {
        "required_fields": [
          "behaviors",
          "criteria",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEApplicationResponsePhaseRuleEngineOrderRequest": {
        "required_fields": [
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationResponsePhaseRuleEngineRequest": {
        "required_fields": [
          "behaviors",
          "criteria",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddHeader": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineAddHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddHeaderAttributes",
              "description": "attributes references EDGEApplicationRuleEngineAddHeaderAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineAddHeaderAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddHeaderRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineAddHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddHeaderAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineAddHeaderAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineAddHeaderTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddRequestCookie": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddRequestCookieTypeEnum",
              "description": "type references EDGEApplicationRuleEngineAddRequestCookieTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddRequestCookieAttributes",
              "description": "attributes references EDGEApplicationRuleEngineAddRequestCookieAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddRequestCookieRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddRequestCookieTypeEnum",
              "description": "type references EDGEApplicationRuleEngineAddRequestCookieTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineAddRequestCookieAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddResponseHeader": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineAddResponseHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddResponseHeaderAttributes",
              "description": "attributes references EDGEApplicationRuleEngineAddResponseHeaderAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineAddResponseHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineCaptureMatchGroups": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum",
              "description": "type references EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes",
              "description": "attributes references EDGEApplicationRuleEngineCaptureMatchGroupsAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {
        "required_fields": [
          "captured_array",
          "regex",
          "subject"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {
        "required_fields": [
          "captured_array",
          "regex",
          "subject"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum",
              "description": "type references EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterHeader": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineFilterHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterHeaderAttributes",
              "description": "attributes references EDGEApplicationRuleEngineFilterHeaderAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterHeaderRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineFilterHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterHeaderAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineFilterHeaderAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterRequestCookie": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum",
              "description": "type references EDGEApplicationRuleEngineFilterRequestCookieTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterRequestCookieAttributes",
              "description": "attributes references EDGEApplicationRuleEngineFilterRequestCookieAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum",
              "description": "type references EDGEApplicationRuleEngineFilterRequestCookieTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterResponseHeader": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterResponseHeaderAttributes",
              "description": "attributes references EDGEApplicationRuleEngineFilterResponseHeaderAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum",
              "description": "type references EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineNoArgs": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineNoArgsTypeEnum",
              "description": "type references EDGEApplicationRuleEngineNoArgsTypeEnum schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineNoArgsRequest": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineNoArgsTypeEnum",
              "description": "type references EDGEApplicationRuleEngineNoArgsTypeEnum schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineNoArgsTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviors": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsShared": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponseNoArgs": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineResponseNoArgsTypeEnum",
              "description": "type references EDGEApplicationRuleEngineResponseNoArgsTypeEnum schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineResponseNoArgsRequest": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineResponseNoArgsTypeEnum",
              "description": "type references EDGEApplicationRuleEngineResponseNoArgsTypeEnum schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviors": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsShared": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponseString": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineResponseStringTypeEnum",
              "description": "type references EDGEApplicationRuleEngineResponseStringTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineResponseStringAttributes",
              "description": "attributes references EDGEApplicationRuleEngineResponseStringAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineResponseStringAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponseStringAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineResponseStringRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineResponseStringTypeEnum",
              "description": "type references EDGEApplicationRuleEngineResponseStringTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineResponseStringAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineResponseStringAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineResponseStringTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRewriteRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGETypeF11Enum",
              "description": "type references EDGETypeF11Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineRewriteRequestAttributes",
              "description": "attributes references EDGEApplicationRuleEngineRewriteRequestAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRewriteRequestRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGETypeF11Enum",
              "description": "type references EDGETypeF11Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineRewriteRequestAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineRewriteRequestAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineRunFunction": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType689Enum",
              "description": "type references EDGEType689Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineRunFunctionAttributes",
              "description": "attributes references EDGEApplicationRuleEngineRunFunctionAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineRunFunctionAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRunFunctionRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType689Enum",
              "description": "type references EDGEType689Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineRunFunctionAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineRunFunctionAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineRunFunctionResponse": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType689Enum",
              "description": "type references EDGEType689Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineRunFunctionResponseAttributes",
              "description": "attributes references EDGEApplicationRuleEngineRunFunctionResponseAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType689Enum",
              "description": "type references EDGEType689Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetCachePolicy": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCachePolicyTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetCachePolicyTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCachePolicyAttributes",
              "description": "attributes references EDGEApplicationRuleEngineSetCachePolicyAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetCachePolicyRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCachePolicyTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetCachePolicyTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineSetCachePolicyAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetConnector": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetConnectorTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetConnectorTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetConnectorAttributes",
              "description": "attributes references EDGEApplicationRuleEngineSetConnectorAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetConnectorAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetConnectorRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetConnectorTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetConnectorTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetConnectorAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineSetConnectorAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetConnectorTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetCookie": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCookieTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetCookieTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCookieAttributes",
              "description": "attributes references EDGEApplicationRuleEngineSetCookieAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetCookieAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetCookieAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetCookieRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCookieTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetCookieTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetCookieAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineSetCookieAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetCookieTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetOrigin": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetOriginTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetOriginTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetOriginAttributes",
              "description": "attributes references EDGEApplicationRuleEngineSetOriginAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetOriginAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetOriginAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineSetOriginRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetOriginTypeEnum",
              "description": "type references EDGEApplicationRuleEngineSetOriginTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineSetOriginAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineSetOriginAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineSetOriginTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineString": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineStringTypeEnum",
              "description": "type references EDGEApplicationRuleEngineStringTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineStringAttributes",
              "description": "attributes references EDGEApplicationRuleEngineStringAttributes schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineStringAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineStringAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEApplicationRuleEngineStringRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineStringTypeEnum",
              "description": "type references EDGEApplicationRuleEngineStringTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRuleEngineStringAttributesRequest",
              "description": "attributes references EDGEApplicationRuleEngineStringAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEApplicationRuleEngineStringTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEBehaviorA69Enum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEBlankEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEBrowserCacheModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEBrowserCacheModuleBehaviorEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEBrowserCacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheSetting": {
        "required_fields": [
          "id",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEBrowserCacheModule",
              "description": "browser_cache references EDGEBrowserCacheModule schema"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsModules",
              "description": "modules references EDGECacheSettingsModules schema"
            }
          ]
        }
      },
      "EDGECacheSettingRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEBrowserCacheModuleRequest",
              "description": "browser_cache references EDGEBrowserCacheModuleRequest schema"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsModulesRequest",
              "description": "modules references EDGECacheSettingsModulesRequest schema"
            }
          ]
        }
      },
      "EDGECacheSettingsApplicationAcceleratorModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "cache_vary_by_querystring": [
            {
              "type": "schema_reference",
              "references": "EDGECacheVaryByQuerystringModule",
              "description": "cache_vary_by_querystring references EDGECacheVaryByQuerystringModule schema"
            }
          ],
          "cache_vary_by_cookies": [
            {
              "type": "schema_reference",
              "references": "EDGECacheVaryByCookiesModule",
              "description": "cache_vary_by_cookies references EDGECacheVaryByCookiesModule schema"
            }
          ],
          "cache_vary_by_devices": [
            {
              "type": "schema_reference",
              "references": "EDGECacheVaryByDevicesModule",
              "description": "cache_vary_by_devices references EDGECacheVaryByDevicesModule schema"
            }
          ]
        }
      },
      "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "cache_vary_by_querystring": [
            {
              "type": "schema_reference",
              "references": "EDGECacheVaryByQuerystringModuleRequest",
              "description": "cache_vary_by_querystring references EDGECacheVaryByQuerystringModuleRequest schema"
            }
          ],
          "cache_vary_by_cookies": [
            {
              "type": "schema_reference",
              "references": "EDGECacheVaryByCookiesModuleRequest",
              "description": "cache_vary_by_cookies references EDGECacheVaryByCookiesModuleRequest schema"
            }
          ],
          "cache_vary_by_devices": [
            {
              "type": "schema_reference",
              "references": "EDGECacheVaryByDevicesModuleRequest",
              "description": "cache_vary_by_devices references EDGECacheVaryByDevicesModuleRequest schema"
            }
          ]
        }
      },
      "EDGECacheSettingsEdgeCacheModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "stale_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEStateCacheModule",
              "description": "stale_cache references EDGEStateCacheModule schema"
            }
          ],
          "large_file_cache": [
            {
              "type": "schema_reference",
              "references": "EDGELargeFileCacheModule",
              "description": "large_file_cache references EDGELargeFileCacheModule schema"
            }
          ]
        }
      },
      "EDGECacheSettingsEdgeCacheModuleBehaviorEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheSettingsEdgeCacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "stale_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEStateCacheModuleRequest",
              "description": "stale_cache references EDGEStateCacheModuleRequest schema"
            }
          ],
          "large_file_cache": [
            {
              "type": "schema_reference",
              "references": "EDGELargeFileCacheModuleRequest",
              "description": "large_file_cache references EDGELargeFileCacheModuleRequest schema"
            }
          ]
        }
      },
      "EDGECacheSettingsModules": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_cache": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsEdgeCacheModule",
              "description": "edge_cache references EDGECacheSettingsEdgeCacheModule schema"
            }
          ],
          "application_accelerator": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsApplicationAcceleratorModule",
              "description": "application_accelerator references EDGECacheSettingsApplicationAcceleratorModule schema"
            }
          ]
        }
      },
      "EDGECacheSettingsModulesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_cache": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsEdgeCacheModuleRequest",
              "description": "edge_cache references EDGECacheSettingsEdgeCacheModuleRequest schema"
            }
          ],
          "application_accelerator": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsApplicationAcceleratorModuleRequest",
              "description": "application_accelerator references EDGECacheSettingsApplicationAcceleratorModuleRequest schema"
            }
          ]
        }
      },
      "EDGECacheSettingsTieredCacheModule": {
        "required_fields": [
          "behavior",
          "max_age"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "topology": [
            {
              "type": "schema_reference",
              "references": "EDGETopologyEnum",
              "description": "topology references EDGETopologyEnum schema"
            }
          ]
        }
      },
      "EDGECacheSettingsTieredCacheModuleBehaviorEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheSettingsTieredCacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "topology": [
            {
              "type": "schema_reference",
              "references": "EDGETopologyEnum",
              "description": "topology references EDGETopologyEnum schema"
            }
          ]
        }
      },
      "EDGECacheVaryByCookiesModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByCookiesModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByDevicesModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByDevicesModuleBehaviorEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByDevicesModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByMethodEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByQuerystringModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECacheVaryByQuerystringModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECiphersEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECloneApplicationRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECloneFirewallRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECloneWAFRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGECodeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConditionalEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorHTTP": {
        "required_fields": [
          "attributes",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorHTTPAttributes",
              "description": "attributes references EDGEConnectorHTTPAttributes schema"
            }
          ]
        }
      },
      "EDGEConnectorHTTPAttributes": {
        "required_fields": [
          "addresses"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorHTTPAttributesRequest": {
        "required_fields": [
          "addresses"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorHTTPRequest": {
        "required_fields": [
          "attributes",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorHTTPAttributesRequest",
              "description": "attributes references EDGEConnectorHTTPAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEConnectorLiveIngest": {
        "required_fields": [
          "attributes",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorLiveIngestAttributes",
              "description": "attributes references EDGEConnectorLiveIngestAttributes schema"
            }
          ]
        }
      },
      "EDGEConnectorLiveIngestAttributes": {
        "required_fields": [
          "region"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "region": [
            {
              "type": "schema_reference",
              "references": "EDGERegionEnum",
              "description": "region references EDGERegionEnum schema"
            }
          ]
        }
      },
      "EDGEConnectorLiveIngestAttributesRequest": {
        "required_fields": [
          "region"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "region": [
            {
              "type": "schema_reference",
              "references": "EDGERegionEnum",
              "description": "region references EDGERegionEnum schema"
            }
          ]
        }
      },
      "EDGEConnectorLiveIngestRequest": {
        "required_fields": [
          "attributes",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorLiveIngestAttributesRequest",
              "description": "attributes references EDGEConnectorLiveIngestAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEConnectorPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorPolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorStorage": {
        "required_fields": [
          "attributes",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorStorageAttributes",
              "description": "attributes references EDGEConnectorStorageAttributes schema"
            }
          ]
        }
      },
      "EDGEConnectorStorageAttributes": {
        "required_fields": [
          "bucket"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorStorageAttributesRequest": {
        "required_fields": [
          "bucket"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEConnectorStorageRequest": {
        "required_fields": [
          "attributes",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorStorageAttributesRequest",
              "description": "attributes references EDGEConnectorStorageAttributesRequest schema"
            }
          ]
        }
      },
      "EDGECustomPage": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "pages",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGECustomPageRequest": {
        "required_fields": [
          "name",
          "pages"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDefaultDeploymentStrategy": {
        "required_fields": [
          "attributes"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEDefaultDeploymentStrategyAttrs",
              "description": "attributes references EDGEDefaultDeploymentStrategyAttrs schema"
            }
          ]
        }
      },
      "EDGEDefaultDeploymentStrategyAttrs": {
        "required_fields": [
          "application"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDefaultDeploymentStrategyAttrsRequest": {
        "required_fields": [
          "application"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDefaultDeploymentStrategyRequest": {
        "required_fields": [
          "attributes"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEDefaultDeploymentStrategyAttrsRequest",
              "description": "attributes references EDGEDefaultDeploymentStrategyAttrsRequest schema"
            }
          ]
        }
      },
      "EDGEDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDeploymentStrategy": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategy": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategyRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDeploymentStrategyRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDeploymentStrategyShared": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEDnsResolutionEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeApplicationCriterionField": {
        "required_fields": [
          "conditional",
          "operator",
          "variable"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "conditional": [
            {
              "type": "schema_reference",
              "references": "EDGEConditionalEnum",
              "description": "conditional references EDGEConditionalEnum schema"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeApplicationCriterionFieldVariableEnum",
              "description": "variable references EDGEEdgeApplicationCriterionFieldVariableEnum schema"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "references": "EDGEOperator565Enum",
              "description": "operator references EDGEOperator565Enum schema"
            }
          ]
        }
      },
      "EDGEEdgeApplicationCriterionFieldRequest": {
        "required_fields": [
          "conditional",
          "operator",
          "variable"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "conditional": [
            {
              "type": "schema_reference",
              "references": "EDGEConditionalEnum",
              "description": "conditional references EDGEConditionalEnum schema"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeApplicationCriterionFieldVariableEnum",
              "description": "variable references EDGEEdgeApplicationCriterionFieldVariableEnum schema"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "references": "EDGEOperator565Enum",
              "description": "operator references EDGEOperator565Enum schema"
            }
          ]
        }
      },
      "EDGEEdgeApplicationCriterionFieldVariableEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgument": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgumentRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeFirewallCriterionField": {
        "required_fields": [
          "conditional",
          "operator",
          "variable"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "conditional": [
            {
              "type": "schema_reference",
              "references": "EDGEConditionalEnum",
              "description": "conditional references EDGEConditionalEnum schema"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeFirewallCriterionFieldVariableEnum",
              "description": "variable references EDGEEdgeFirewallCriterionFieldVariableEnum schema"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "references": "EDGEOperator565Enum",
              "description": "operator references EDGEOperator565Enum schema"
            }
          ]
        }
      },
      "EDGEEdgeFirewallCriterionFieldRequest": {
        "required_fields": [
          "conditional",
          "operator",
          "variable"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "conditional": [
            {
              "type": "schema_reference",
              "references": "EDGEConditionalEnum",
              "description": "conditional references EDGEConditionalEnum schema"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeFirewallCriterionFieldVariableEnum",
              "description": "variable references EDGEEdgeFirewallCriterionFieldVariableEnum schema"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "references": "EDGEOperator565Enum",
              "description": "operator references EDGEOperator565Enum schema"
            }
          ]
        }
      },
      "EDGEEdgeFirewallCriterionFieldVariableEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgument": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgumentRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeFunctionModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeFunctionModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEdgeFunctions": {
        "required_fields": [
          "code",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "reference_count",
          "vendor",
          "version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEEdgeFunctionsRequest": {
        "required_fields": [
          "code",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEEngineVersionEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEExecutionEnvironmentEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewall": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallModules",
              "description": "modules references EDGEFirewallModules schema"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorNoArguments": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorNoArgumentsTypeEnum",
              "description": "type references EDGEFirewallBehaviorNoArgumentsTypeEnum schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorNoArgumentsRequest": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorNoArgumentsTypeEnum",
              "description": "type references EDGEFirewallBehaviorNoArgumentsTypeEnum schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorNoArgumentsTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorRunFunction": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType689Enum",
              "description": "type references EDGEType689Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorRunFunctionAttributes",
              "description": "attributes references EDGEFirewallBehaviorRunFunctionAttributes schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorRunFunctionAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorRunFunctionAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorRunFunctionRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType689Enum",
              "description": "type references EDGEType689Enum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorRunFunctionAttributesRequest",
              "description": "attributes references EDGEFirewallBehaviorRunFunctionAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetCustomResponse": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetCustomResponseTypeEnum",
              "description": "type references EDGEFirewallBehaviorSetCustomResponseTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetCustomResponseAttributes",
              "description": "attributes references EDGEFirewallBehaviorSetCustomResponseAttributes schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributes": {
        "required_fields": [
          "status_code"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {
        "required_fields": [
          "status_code"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorSetCustomResponseRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetCustomResponseTypeEnum",
              "description": "type references EDGEFirewallBehaviorSetCustomResponseTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetCustomResponseAttributesRequest",
              "description": "attributes references EDGEFirewallBehaviorSetCustomResponseAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorSetRateLimit": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetRateLimitTypeEnum",
              "description": "type references EDGEFirewallBehaviorSetRateLimitTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetRateLimitAttributes",
              "description": "attributes references EDGEFirewallBehaviorSetRateLimitAttributes schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetRateLimitAttributes": {
        "required_fields": [
          "average_rate_limit",
          "limit_by"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "limit_by": [
            {
              "type": "schema_reference",
              "references": "EDGELimitByEnum",
              "description": "limit_by references EDGELimitByEnum schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
        "required_fields": [
          "average_rate_limit",
          "limit_by"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "limit_by": [
            {
              "type": "schema_reference",
              "references": "EDGELimitByEnum",
              "description": "limit_by references EDGELimitByEnum schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorSetRateLimitRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetRateLimitTypeEnum",
              "description": "type references EDGEFirewallBehaviorSetRateLimitTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetRateLimitAttributesRequest",
              "description": "attributes references EDGEFirewallBehaviorSetRateLimitAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetRateLimitTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorSetWaf": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetWafTypeEnum",
              "description": "type references EDGEFirewallBehaviorSetWafTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetWafAttributes",
              "description": "attributes references EDGEFirewallBehaviorSetWafAttributes schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetWafAttributes": {
        "required_fields": [
          "mode",
          "waf_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "mode": [
            {
              "type": "schema_reference",
              "references": "EDGEModeEnum",
              "description": "mode references EDGEModeEnum schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetWafAttributesRequest": {
        "required_fields": [
          "mode",
          "waf_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "mode": [
            {
              "type": "schema_reference",
              "references": "EDGEModeEnum",
              "description": "mode references EDGEModeEnum schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetWafRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetWafTypeEnum",
              "description": "type references EDGEFirewallBehaviorSetWafTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorSetWafAttributesRequest",
              "description": "attributes references EDGEFirewallBehaviorSetWafAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorSetWafTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorTagEvent": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorTagEventTypeEnum",
              "description": "type references EDGEFirewallBehaviorTagEventTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorTagEventAttributes",
              "description": "attributes references EDGEFirewallBehaviorTagEventAttributes schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorTagEventAttributes": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorTagEventAttributesRequest": {
        "required_fields": [
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorTagEventRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorTagEventTypeEnum",
              "description": "type references EDGEFirewallBehaviorTagEventTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallBehaviorTagEventAttributesRequest",
              "description": "attributes references EDGEFirewallBehaviorTagEventAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEFirewallBehaviorTagEventTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviors": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArguments": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunction": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWaf": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEvent": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallBehaviorsShared": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallFunctionInstance": {
        "required_fields": [
          "function",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEFirewallFunctionInstanceRequest": {
        "required_fields": [
          "function",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallModules": {
        "required_fields": [
          "ddos_protection"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallModulesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallModulesRequest",
              "description": "modules references EDGEFirewallModulesRequest schema"
            }
          ]
        }
      },
      "EDGEFirewallRuleEngine": {
        "required_fields": [
          "behaviors",
          "criteria",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEFirewallRuleEngineOrderRequest": {
        "required_fields": [
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEFirewallRuleEngineRequest": {
        "required_fields": [
          "behaviors",
          "criteria",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHMAC": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHMACPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHMACPolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHMACRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHTTPConnectionOptions": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHTTPConnectionOptionsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHTTPModules": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHTTPModulesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHttpProtocol": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHttpProtocolRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEHttpVersionPolicyEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEImageProcessorModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEImageProcessorModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEInfrastructureEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELargeFileCacheModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELargeFileCacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELayerEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELimitByEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELoadBalancerModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELoadBalancerModuleConfig": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELoadBalancerModuleConfigRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGELoadBalancerModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEMTLS": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEMTLSRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEMethodEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEMinimumVersionEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEModeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGENetworkList": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType528Enum",
              "description": "type references EDGEType528Enum schema"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGENetworkListDetail": {
        "required_fields": [
          "id",
          "items",
          "last_editor",
          "last_modified",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType528Enum",
              "description": "type references EDGEType528Enum schema"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGENetworkListDetailRequest": {
        "required_fields": [
          "items",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType528Enum",
              "description": "type references EDGEType528Enum schema"
            }
          ]
        }
      },
      "EDGENullEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEOperator565Enum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEOriginIPACL": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEOriginIPACLRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEOriginShieldConfig": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "origin_ip_acl": [
            {
              "type": "schema_reference",
              "references": "EDGEOriginIPACL",
              "description": "origin_ip_acl references EDGEOriginIPACL schema"
            }
          ],
          "hmac": [
            {
              "type": "schema_reference",
              "references": "EDGEHMAC",
              "description": "hmac references EDGEHMAC schema"
            }
          ]
        }
      },
      "EDGEOriginShieldConfigRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "origin_ip_acl": [
            {
              "type": "schema_reference",
              "references": "EDGEOriginIPACLRequest",
              "description": "origin_ip_acl references EDGEOriginIPACLRequest schema"
            }
          ],
          "hmac": [
            {
              "type": "schema_reference",
              "references": "EDGEHMACRequest",
              "description": "hmac references EDGEHMACRequest schema"
            }
          ]
        }
      },
      "EDGEOriginShieldModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEOriginShieldModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPage": {
        "required_fields": [
          "code",
          "page"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "code": [
            {
              "type": "schema_reference",
              "references": "EDGECodeEnum",
              "description": "code references EDGECodeEnum schema"
            }
          ],
          "page": [
            {
              "type": "schema_reference",
              "references": "EDGEPagePolymorphic",
              "description": "page references EDGEPagePolymorphic schema"
            }
          ]
        }
      },
      "EDGEPageConnector": {
        "required_fields": [
          "attributes"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEPageConnectorAttributes",
              "description": "attributes references EDGEPageConnectorAttributes schema"
            }
          ]
        }
      },
      "EDGEPageConnectorAttributes": {
        "required_fields": [
          "connector"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPageConnectorAttributesRequest": {
        "required_fields": [
          "connector"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPageConnectorRequest": {
        "required_fields": [
          "attributes"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEPageConnectorAttributesRequest",
              "description": "attributes references EDGEPageConnectorAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEPagePolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPagePolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPageRequest": {
        "required_fields": [
          "code",
          "page"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "code": [
            {
              "type": "schema_reference",
              "references": "EDGECodeEnum",
              "description": "code references EDGECodeEnum schema"
            }
          ],
          "page": [
            {
              "type": "schema_reference",
              "references": "EDGEPagePolymorphicRequest",
              "description": "page references EDGEPagePolymorphicRequest schema"
            }
          ]
        }
      },
      "EDGEPaginatedApplicationDeviceGroupsList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedApplicationFunctionInstanceList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedApplicationList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedApplicationRequestPhaseRuleEngineList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedApplicationResponsePhaseRuleEngineList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedConnectorPolymorphicList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedCustomPageList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedEdgeFunctionsList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedFirewallFunctionInstanceList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedFirewallList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedFirewallRuleEngineList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedNetworkListList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedResponseListCacheSettingList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedWAFList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedWAFRuleList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedWorkloadDeploymentList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPaginatedWorkloadList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedApplicationDeviceGroupsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedApplicationFunctionInstanceRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedApplicationRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationModulesRequest",
              "description": "modules references EDGEApplicationModulesRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedApplicationRequestPhaseRuleEngineRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedApplicationResponsePhaseRuleEngineRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedCacheSettingRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEBrowserCacheModuleRequest",
              "description": "browser_cache references EDGEBrowserCacheModuleRequest schema"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsModulesRequest",
              "description": "modules references EDGECacheSettingsModulesRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedConnectorHTTPRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorHTTPAttributesRequest",
              "description": "attributes references EDGEConnectorHTTPAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedConnectorLiveIngestRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorLiveIngestAttributesRequest",
              "description": "attributes references EDGEConnectorLiveIngestAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedConnectorPolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedConnectorStorageRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorStorageAttributesRequest",
              "description": "attributes references EDGEConnectorStorageAttributesRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedCustomPageRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedEdgeFunctionsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedFirewallFunctionInstanceRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedFirewallRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallModulesRequest",
              "description": "modules references EDGEFirewallModulesRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedFirewallRuleEngineRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedNetworkListDetailRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "EDGEType528Enum",
              "description": "type references EDGEType528Enum schema"
            }
          ]
        }
      },
      "EDGEPatchedWAFRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "engine_settings": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFEngineSettingsFieldRequest",
              "description": "engine_settings references EDGEWAFEngineSettingsFieldRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedWAFRuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPatchedWorkloadDeploymentRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "strategy": [
            {
              "type": "schema_reference",
              "references": "EDGEDeploymentStrategyRequest",
              "description": "strategy references EDGEDeploymentStrategyRequest schema"
            }
          ]
        }
      },
      "EDGEPatchedWorkloadRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "mtls": [
            {
              "type": "schema_reference",
              "references": "EDGEMTLSRequest",
              "description": "mtls references EDGEMTLSRequest schema"
            }
          ]
        }
      },
      "EDGEProtocols": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEProtocolsRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPurgeInput": {
        "required_fields": [
          "items"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEPurgeInputRequest": {
        "required_fields": [
          "items"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGERegionEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseApplication": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplication",
              "description": "data references EDGEApplication schema"
            }
          ]
        }
      },
      "EDGEResponseApplicationDeviceGroups": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationDeviceGroups",
              "description": "data references EDGEApplicationDeviceGroups schema"
            }
          ]
        }
      },
      "EDGEResponseApplicationFunctionInstance": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationFunctionInstance",
              "description": "data references EDGEApplicationFunctionInstance schema"
            }
          ]
        }
      },
      "EDGEResponseApplicationRequestPhaseRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRequestPhaseRuleEngine",
              "description": "data references EDGEApplicationRequestPhaseRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseApplicationResponsePhaseRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationResponsePhaseRuleEngine",
              "description": "data references EDGEApplicationResponsePhaseRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncApplication": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplication",
              "description": "data references EDGEApplication schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncApplicationDeviceGroups": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationDeviceGroups",
              "description": "data references EDGEApplicationDeviceGroups schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncApplicationFunctionInstance": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationFunctionInstance",
              "description": "data references EDGEApplicationFunctionInstance schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRequestPhaseRuleEngine",
              "description": "data references EDGEApplicationRequestPhaseRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationResponsePhaseRuleEngine",
              "description": "data references EDGEApplicationResponsePhaseRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncCacheSetting": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSetting",
              "description": "data references EDGECacheSetting schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncConnectorPolymorphic": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorPolymorphic",
              "description": "data references EDGEConnectorPolymorphic schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncCustomPage": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGECustomPage",
              "description": "data references EDGECustomPage schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncDeleteApplication": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteApplicationDeviceGroups": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteApplicationFunctionInstance": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteApplicationRequestPhaseRuleEngine": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteApplicationResponsePhaseRuleEngine": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteCacheSetting": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteConnectorPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteCustomPage": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteFirewall": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteFirewallFunctionInstance": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteFirewallRuleEngine": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteFunctionsDoc": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteNetworkListDetail": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteWAF": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteWAFRule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteWorkload": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncDeleteWorkloadDeployment": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseAsyncFirewall": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewall",
              "description": "data references EDGEFirewall schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncFirewallFunctionInstance": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallFunctionInstance",
              "description": "data references EDGEFirewallFunctionInstance schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncFirewallRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallRuleEngine",
              "description": "data references EDGEFirewallRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncFunctionsDoc": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeFunctions",
              "description": "data references EDGEEdgeFunctions schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncNetworkListDetail": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGENetworkListDetail",
              "description": "data references EDGENetworkListDetail schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncPurgeInput": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEPurgeInput",
              "description": "data references EDGEPurgeInput schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncWAF": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWAF",
              "description": "data references EDGEWAF schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncWAFRule": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFRule",
              "description": "data references EDGEWAFRule schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncWorkload": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWorkload",
              "description": "data references EDGEWorkload schema"
            }
          ]
        }
      },
      "EDGEResponseAsyncWorkloadDeployment": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWorkloadDeployment",
              "description": "data references EDGEWorkloadDeployment schema"
            }
          ]
        }
      },
      "EDGEResponseBadRequestApplication": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestSerializerMetaclassModulesField",
              "description": "modules references EDGEResponseBadRequestSerializerMetaclassModulesField schema"
            }
          ]
        }
      },
      "EDGEResponseBadRequestCacheSetting": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField",
              "description": "browser_cache references EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField schema"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestSerializerMetaclassModulesField",
              "description": "modules references EDGEResponseBadRequestSerializerMetaclassModulesField schema"
            }
          ]
        }
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "cache_vary_by_querystring": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField",
              "description": "cache_vary_by_querystring references EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField schema"
            }
          ],
          "cache_vary_by_cookies": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField",
              "description": "cache_vary_by_cookies references EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField schema"
            }
          ],
          "cache_vary_by_devices": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField",
              "description": "cache_vary_by_devices references EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField schema"
            }
          ]
        }
      },
      "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "stale_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField",
              "description": "stale_cache references EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField schema"
            }
          ],
          "large_file_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField",
              "description": "large_file_cache references EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField schema"
            }
          ]
        }
      },
      "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestSerializerMetaclassModulesField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField",
              "description": "edge_cache references EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField schema"
            }
          ],
          "tiered_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField",
              "description": "tiered_cache references EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField schema"
            }
          ],
          "application_accelerator": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField",
              "description": "application_accelerator references EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField schema"
            }
          ]
        }
      },
      "EDGEResponseBadRequestSerializerMetaclassStrategyField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseBadRequestWorkloadDeployment": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "strategy": [
            {
              "type": "schema_reference",
              "references": "EDGEResponseBadRequestSerializerMetaclassStrategyField",
              "description": "strategy references EDGEResponseBadRequestSerializerMetaclassStrategyField schema"
            }
          ]
        }
      },
      "EDGEResponseConnectorPolymorphic": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorPolymorphic",
              "description": "data references EDGEConnectorPolymorphic schema"
            }
          ]
        }
      },
      "EDGEResponseCustomPage": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGECustomPage",
              "description": "data references EDGECustomPage schema"
            }
          ]
        }
      },
      "EDGEResponseDeleteApplication": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteApplicationFunctionInstance": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteApplicationRequestPhaseRuleEngine": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteApplicationResponsePhaseRuleEngine": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteConnectorPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteCustomPage": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteFirewall": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteFirewallFunctionInstance": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteFirewallRuleEngine": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteFunctionsDoc": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteNetworkListDetail": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteWAF": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseDeleteWAFRule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEResponseFirewall": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewall",
              "description": "data references EDGEFirewall schema"
            }
          ]
        }
      },
      "EDGEResponseFirewallFunctionInstance": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallFunctionInstance",
              "description": "data references EDGEFirewallFunctionInstance schema"
            }
          ]
        }
      },
      "EDGEResponseFirewallRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallRuleEngine",
              "description": "data references EDGEFirewallRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseFunctionsDoc": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeFunctions",
              "description": "data references EDGEEdgeFunctions schema"
            }
          ]
        }
      },
      "EDGEResponseListCacheSetting": {
        "required_fields": [
          "id",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "references": "EDGEBrowserCacheModule",
              "description": "browser_cache references EDGEBrowserCacheModule schema"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSettingsModules",
              "description": "modules references EDGECacheSettingsModules schema"
            }
          ]
        }
      },
      "EDGEResponseNetworkListDetail": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGENetworkListDetail",
              "description": "data references EDGENetworkListDetail schema"
            }
          ]
        }
      },
      "EDGEResponsePurgeInput": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEPurgeInput",
              "description": "data references EDGEPurgeInput schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveApplication": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplication",
              "description": "data references EDGEApplication schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveApplicationDeviceGroups": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationDeviceGroups",
              "description": "data references EDGEApplicationDeviceGroups schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveApplicationFunctionInstance": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationFunctionInstance",
              "description": "data references EDGEApplicationFunctionInstance schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEApplicationRequestPhaseRuleEngine",
              "description": "data references EDGEApplicationRequestPhaseRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveCacheSetting": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGECacheSetting",
              "description": "data references EDGECacheSetting schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveConnectorPolymorphic": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEConnectorPolymorphic",
              "description": "data references EDGEConnectorPolymorphic schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveCustomPage": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGECustomPage",
              "description": "data references EDGECustomPage schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveFirewall": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewall",
              "description": "data references EDGEFirewall schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveFirewallFunctionInstance": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallFunctionInstance",
              "description": "data references EDGEFirewallFunctionInstance schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveFirewallRuleEngine": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEFirewallRuleEngine",
              "description": "data references EDGEFirewallRuleEngine schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveFunctionsDoc": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEEdgeFunctions",
              "description": "data references EDGEEdgeFunctions schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveNetworkListDetail": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGENetworkListDetail",
              "description": "data references EDGENetworkListDetail schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveWAF": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWAF",
              "description": "data references EDGEWAF schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveWAFRule": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFRule",
              "description": "data references EDGEWAFRule schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveWorkload": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWorkload",
              "description": "data references EDGEWorkload schema"
            }
          ]
        }
      },
      "EDGEResponseRetrieveWorkloadDeployment": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWorkloadDeployment",
              "description": "data references EDGEWorkloadDeployment schema"
            }
          ]
        }
      },
      "EDGEResponseWAF": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWAF",
              "description": "data references EDGEWAF schema"
            }
          ]
        }
      },
      "EDGEResponseWAFRule": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFRule",
              "description": "data references EDGEWAFRule schema"
            }
          ]
        }
      },
      "EDGEResponseWorkload": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWorkload",
              "description": "data references EDGEWorkload schema"
            }
          ]
        }
      },
      "EDGEResponseWorkloadDeployment": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGEWorkloadDeployment",
              "description": "data references EDGEWorkloadDeployment schema"
            }
          ]
        }
      },
      "EDGERuleIdEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGERulesetsEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGERuntimeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESensitivityEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEServerRoleEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEStateCacheModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEStateCacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGETLSWorkload": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGETLSWorkloadRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEThreatEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEThresholdsConfigField": {
        "required_fields": [
          "threat"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "threat": [
            {
              "type": "schema_reference",
              "references": "EDGEThreatEnum",
              "description": "threat references EDGEThreatEnum schema"
            }
          ]
        }
      },
      "EDGEThresholdsConfigFieldRequest": {
        "required_fields": [
          "threat"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "threat": [
            {
              "type": "schema_reference",
              "references": "EDGEThreatEnum",
              "description": "threat references EDGEThreatEnum schema"
            }
          ]
        }
      },
      "EDGETieredCacheModule": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGETieredCacheModuleRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGETopologyEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGETransportPolicyEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEType15cEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEType528Enum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEType689Enum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGETypeF11Enum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEVerificationEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAF": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "engine_settings": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFEngineSettingsField",
              "description": "engine_settings references EDGEWAFEngineSettingsField schema"
            }
          ]
        }
      },
      "EDGEWAFEngineSettingsAttributesField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFEngineSettingsAttributesFieldRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFEngineSettingsField": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFEngineSettingsAttributesField",
              "description": "attributes references EDGEWAFEngineSettingsAttributesField schema"
            }
          ]
        }
      },
      "EDGEWAFEngineSettingsFieldRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "attributes": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFEngineSettingsAttributesFieldRequest",
              "description": "attributes references EDGEWAFEngineSettingsAttributesFieldRequest schema"
            }
          ]
        }
      },
      "EDGEWAFEngineSettingsFieldTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFExceptionGenericCondition": {
        "required_fields": [
          "match"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "match": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFExceptionGenericConditionMatchEnum",
              "description": "match references EDGEWAFExceptionGenericConditionMatchEnum schema"
            }
          ]
        }
      },
      "EDGEWAFExceptionGenericConditionMatchEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFExceptionGenericConditionRequest": {
        "required_fields": [
          "match"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "match": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFExceptionGenericConditionMatchEnum",
              "description": "match references EDGEWAFExceptionGenericConditionMatchEnum schema"
            }
          ]
        }
      },
      "EDGEWAFExceptionPolymorphicCondition": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFExceptionPolymorphicConditionRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFExceptionSpecificConditionOnName": {
        "required_fields": [
          "match",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "match": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFExceptionSpecificConditionOnNameMatchEnum",
              "description": "match references EDGEWAFExceptionSpecificConditionOnNameMatchEnum schema"
            }
          ]
        }
      },
      "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFExceptionSpecificConditionOnNameRequest": {
        "required_fields": [
          "match",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "match": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFExceptionSpecificConditionOnNameMatchEnum",
              "description": "match references EDGEWAFExceptionSpecificConditionOnNameMatchEnum schema"
            }
          ]
        }
      },
      "EDGEWAFExceptionSpecificConditionOnValue": {
        "required_fields": [
          "match",
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "match": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFExceptionSpecificConditionOnValueMatchEnum",
              "description": "match references EDGEWAFExceptionSpecificConditionOnValueMatchEnum schema"
            }
          ]
        }
      },
      "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFExceptionSpecificConditionOnValueRequest": {
        "required_fields": [
          "match",
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "match": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFExceptionSpecificConditionOnValueMatchEnum",
              "description": "match references EDGEWAFExceptionSpecificConditionOnValueMatchEnum schema"
            }
          ]
        }
      },
      "EDGEWAFRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "engine_settings": [
            {
              "type": "schema_reference",
              "references": "EDGEWAFEngineSettingsFieldRequest",
              "description": "engine_settings references EDGEWAFEngineSettingsFieldRequest schema"
            }
          ]
        }
      },
      "EDGEWAFRule": {
        "required_fields": [
          "conditions",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEWAFRuleOperatorEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWAFRuleRequest": {
        "required_fields": [
          "conditions",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGEWorkload": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "workload_domain"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "mtls": [
            {
              "type": "schema_reference",
              "references": "EDGEMTLS",
              "description": "mtls references EDGEMTLS schema"
            }
          ]
        }
      },
      "EDGEWorkloadDeployment": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "strategy"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "strategy": [
            {
              "type": "schema_reference",
              "references": "EDGEDeploymentStrategy",
              "description": "strategy references EDGEDeploymentStrategy schema"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGEWorkloadDeploymentRequest": {
        "required_fields": [
          "name",
          "strategy"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "strategy": [
            {
              "type": "schema_reference",
              "references": "EDGEDeploymentStrategyRequest",
              "description": "strategy references EDGEDeploymentStrategyRequest schema"
            }
          ]
        }
      },
      "EDGEWorkloadRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "mtls": [
            {
              "type": "schema_reference",
              "references": "EDGEMTLSRequest",
              "description": "mtls references EDGEMTLSRequest schema"
            }
          ]
        }
      },
      "METRICSAggregatedField": {
        "required_fields": [
          "aggregation",
          "variable"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSAggregatedFieldRequest": {
        "required_fields": [
          "aggregation",
          "variable"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSAggregationTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSBaseQuery": {
        "required_fields": [
          "dataset",
          "id",
          "limit",
          "order_direction"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "order_direction": [
            {
              "type": "schema_reference",
              "references": "METRICSOrderDirectionEnum",
              "description": "order_direction references METRICSOrderDirectionEnum schema"
            }
          ]
        }
      },
      "METRICSBaseQueryRequest": {
        "required_fields": [
          "dataset",
          "limit",
          "order_direction"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "order_direction": [
            {
              "type": "schema_reference",
              "references": "METRICSOrderDirectionEnum",
              "description": "order_direction references METRICSOrderDirectionEnum schema"
            }
          ]
        }
      },
      "METRICSComparisonTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSDashboard": {
        "required_fields": [
          "folder_id",
          "id",
          "name",
          "scope"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSDashboardRequest": {
        "required_fields": [
          "name",
          "scope"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSDataUnitEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSFolder": {
        "required_fields": [
          "id",
          "name",
          "scope"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSFolderRequest": {
        "required_fields": [
          "name",
          "scope"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSLibraryReportRequest": {
        "required_fields": [
          "aggregation_type",
          "data_unit",
          "description",
          "name",
          "queries",
          "scope",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "METRICSTypeEnum",
              "description": "type references METRICSTypeEnum schema"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "references": "METRICSAggregationTypeEnum",
              "description": "aggregation_type references METRICSAggregationTypeEnum schema"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "references": "METRICSDataUnitEnum",
              "description": "data_unit references METRICSDataUnitEnum schema"
            }
          ],
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "references": "METRICSComparisonTypeEnum",
              "description": "comparison_type references METRICSComparisonTypeEnum schema"
            }
          ]
        }
      },
      "METRICSOrder": {
        "required_fields": [
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSOrderDirectionEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSOrderRequest": {
        "required_fields": [
          "order"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSPaginatedResponseListDashboardList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSPaginatedResponseListFolderList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSPaginatedResponseListReportList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSPaginatedResponseListRowList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSPatchedDashboardRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSPatchedFolderRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSRecommendationRequest": {
        "required_fields": [
          "dashboard_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSReport": {
        "required_fields": [
          "aggregation_type",
          "data_unit",
          "description",
          "id",
          "name",
          "order",
          "queries",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "METRICSTypeEnum",
              "description": "type references METRICSTypeEnum schema"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "references": "METRICSAggregationTypeEnum",
              "description": "aggregation_type references METRICSAggregationTypeEnum schema"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "references": "METRICSDataUnitEnum",
              "description": "data_unit references METRICSDataUnitEnum schema"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "references": "METRICSComparisonTypeEnum",
              "description": "comparison_type references METRICSComparisonTypeEnum schema"
            }
          ]
        }
      },
      "METRICSReportRequest": {
        "required_fields": [
          "aggregation_type",
          "columns",
          "data_unit",
          "description",
          "name",
          "queries",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "METRICSTypeEnum",
              "description": "type references METRICSTypeEnum schema"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "references": "METRICSAggregationTypeEnum",
              "description": "aggregation_type references METRICSAggregationTypeEnum schema"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "references": "METRICSDataUnitEnum",
              "description": "data_unit references METRICSDataUnitEnum schema"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "references": "METRICSComparisonTypeEnum",
              "description": "comparison_type references METRICSComparisonTypeEnum schema"
            }
          ]
        }
      },
      "METRICSResponseAsyncDashboard": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSDashboard",
              "description": "data references METRICSDashboard schema"
            }
          ]
        }
      },
      "METRICSResponseAsyncDeleteDashboard": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseAsyncDeleteFolder": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseAsyncDeleteReport": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseAsyncDeleteRow": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseAsyncFolder": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSFolder",
              "description": "data references METRICSFolder schema"
            }
          ]
        }
      },
      "METRICSResponseAsyncOrder": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSOrder",
              "description": "data references METRICSOrder schema"
            }
          ]
        }
      },
      "METRICSResponseAsyncReport": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSReport",
              "description": "data references METRICSReport schema"
            }
          ]
        }
      },
      "METRICSResponseAsyncRow": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSRow",
              "description": "data references METRICSRow schema"
            }
          ]
        }
      },
      "METRICSResponseDashboard": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSDashboard",
              "description": "data references METRICSDashboard schema"
            }
          ]
        }
      },
      "METRICSResponseDeleteDashboard": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseDeleteFolder": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseDeleteReport": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseDeleteRow": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseFolder": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSFolder",
              "description": "data references METRICSFolder schema"
            }
          ]
        }
      },
      "METRICSResponseListDashboard": {
        "required_fields": [
          "folder_id",
          "id",
          "name",
          "scope"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSResponseListFolder": {
        "required_fields": [
          "id",
          "name",
          "scope"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "scope": [
            {
              "type": "schema_reference",
              "references": "METRICSScopeEnum",
              "description": "scope references METRICSScopeEnum schema"
            }
          ]
        }
      },
      "METRICSResponseListReport": {
        "required_fields": [
          "aggregation_type",
          "data_unit",
          "description",
          "id",
          "name",
          "order",
          "queries",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "METRICSTypeEnum",
              "description": "type references METRICSTypeEnum schema"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "references": "METRICSAggregationTypeEnum",
              "description": "aggregation_type references METRICSAggregationTypeEnum schema"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "references": "METRICSDataUnitEnum",
              "description": "data_unit references METRICSDataUnitEnum schema"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "references": "METRICSComparisonTypeEnum",
              "description": "comparison_type references METRICSComparisonTypeEnum schema"
            }
          ]
        }
      },
      "METRICSResponseListRow": {
        "required_fields": [
          "id",
          "order",
          "title"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSResponseOrder": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSOrder",
              "description": "data references METRICSOrder schema"
            }
          ]
        }
      },
      "METRICSResponseReport": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSReport",
              "description": "data references METRICSReport schema"
            }
          ]
        }
      },
      "METRICSResponseRetrieveDashboard": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSDashboard",
              "description": "data references METRICSDashboard schema"
            }
          ]
        }
      },
      "METRICSResponseRetrieveFolder": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSFolder",
              "description": "data references METRICSFolder schema"
            }
          ]
        }
      },
      "METRICSResponseRetrieveReport": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSReport",
              "description": "data references METRICSReport schema"
            }
          ]
        }
      },
      "METRICSResponseRetrieveRow": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSRow",
              "description": "data references METRICSRow schema"
            }
          ]
        }
      },
      "METRICSResponseRow": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "METRICSRow",
              "description": "data references METRICSRow schema"
            }
          ]
        }
      },
      "METRICSRow": {
        "required_fields": [
          "id",
          "order",
          "title"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSRowRequest": {
        "required_fields": [
          "title"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSScopeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "METRICSTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLDatabaseRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLOpenAPISchema": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "status"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "EDGESQLPaginatedOpenAPISchemaList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLResponseAsyncDeleteOpenAPISchema": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLResponseAsyncOpenAPISchema": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGESQLOpenAPISchema",
              "description": "data references EDGESQLOpenAPISchema schema"
            }
          ]
        }
      },
      "EDGESQLResponseAsyncSQLResult": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGESQLSQLResult",
              "description": "data references EDGESQLSQLResult schema"
            }
          ]
        }
      },
      "EDGESQLResponseDeleteOpenAPISchema": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLResponseOpenAPISchema": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGESQLOpenAPISchema",
              "description": "data references EDGESQLOpenAPISchema schema"
            }
          ]
        }
      },
      "EDGESQLResponseRetrieveOpenAPISchema": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGESQLOpenAPISchema",
              "description": "data references EDGESQLOpenAPISchema schema"
            }
          ]
        }
      },
      "EDGESQLResponseSQLResult": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "EDGESQLSQLResult",
              "description": "data references EDGESQLSQLResult schema"
            }
          ]
        }
      },
      "EDGESQLSQLResult": {
        "required_fields": [
          "columns",
          "rows"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLSQLStatementsRequest": {
        "required_fields": [
          "statements"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "EDGESQLStatusEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSCredit": {
        "required_fields": [
          "amount",
          "client_id",
          "created",
          "currency",
          "customer_stripe_id",
          "description",
          "entry_type",
          "expiration_date"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSCreditRequest": {
        "required_fields": [
          "amount"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSPaginatedPaymentHistoryList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSPaginatedResponsePaymentMethodList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSPatchedPartialUpdateRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSPaymentHistory": {
        "required_fields": [
          "amount_with_currency",
          "card_brand",
          "invoice_number",
          "invoice_url",
          "payment_due",
          "payment_method_details",
          "status"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSPaymentMethod": {
        "required_fields": [
          "card_address_zip",
          "card_brand",
          "card_country",
          "card_expiration_month",
          "card_expiration_year",
          "card_holder",
          "card_id",
          "card_last_4_digits",
          "id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSPaymentMethodRequest": {
        "required_fields": [
          "card_address_zip",
          "card_brand",
          "card_country",
          "card_expiration_month",
          "card_expiration_year",
          "card_holder",
          "card_id",
          "card_last_4_digits",
          "stripe_token"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSResponseAsyncCredit": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "PAYMENTSCredit",
              "description": "data references PAYMENTSCredit schema"
            }
          ]
        }
      },
      "PAYMENTSResponseAsyncDeletePaymentMethod": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSResponseAsyncPaymentMethod": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "PAYMENTSPaymentMethod",
              "description": "data references PAYMENTSPaymentMethod schema"
            }
          ]
        }
      },
      "PAYMENTSResponseCredit": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "PAYMENTSCredit",
              "description": "data references PAYMENTSCredit schema"
            }
          ]
        }
      },
      "PAYMENTSResponseDeletePaymentMethod": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "PAYMENTSResponsePaymentMethod": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "PAYMENTSPaymentMethod",
              "description": "data references PAYMENTSPaymentMethod schema"
            }
          ]
        }
      },
      "ACCOUNTSAccount": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSAccountInfo": {
        "required_fields": [
          "info"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSAccountRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSBrand": {
        "required_fields": [
          "active",
          "created",
          "id",
          "info",
          "last_editor",
          "last_modified",
          "name",
          "parent_id",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSBrandRequest": {
        "required_fields": [
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSCreateAccountRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSCreateBrandRequest": {
        "required_fields": [
          "name",
          "parent_id",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSCreateOrganizationRequest": {
        "required_fields": [
          "name",
          "parent_id",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSCreateResellerRequest": {
        "required_fields": [
          "currency_iso_code",
          "name",
          "parent_id",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSCurrencyIsoCodeEnum",
              "description": "currency_iso_code references ACCOUNTSCurrencyIsoCodeEnum schema"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSCreateWorkspaceRequest": {
        "required_fields": [
          "name",
          "parent_id",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSCurrencyIsoCodeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSOrganization": {
        "required_fields": [
          "active",
          "created",
          "id",
          "info",
          "last_editor",
          "last_modified",
          "name",
          "parent_id",
          "reason",
          "status",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSOrganizationRequest": {
        "required_fields": [
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSPaginatedResponseListAccountList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSPatchedAccountRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSPatchedBrandRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSPatchedOrganizationRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSPatchedResellerRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSCurrencyIsoCodeEnum",
              "description": "currency_iso_code references ACCOUNTSCurrencyIsoCodeEnum schema"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSPatchedWorkspaceRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSReasonEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSReseller": {
        "required_fields": [
          "active",
          "created",
          "currency_iso_code",
          "id",
          "info",
          "last_editor",
          "last_modified",
          "name",
          "parent_id",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSCurrencyIsoCodeEnum",
              "description": "currency_iso_code references ACCOUNTSCurrencyIsoCodeEnum schema"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSResellerRequest": {
        "required_fields": [
          "currency_iso_code",
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSCurrencyIsoCodeEnum",
              "description": "currency_iso_code references ACCOUNTSCurrencyIsoCodeEnum schema"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSResponseAccount": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSAccount",
              "description": "data references ACCOUNTSAccount schema"
            }
          ]
        }
      },
      "ACCOUNTSResponseAccountInfo": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSAccountInfo",
              "description": "data references ACCOUNTSAccountInfo schema"
            }
          ]
        }
      },
      "ACCOUNTSResponseAsyncAccount": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSAccount",
              "description": "data references ACCOUNTSAccount schema"
            }
          ]
        }
      },
      "ACCOUNTSResponseAsyncAccountInfo": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSAccountInfo",
              "description": "data references ACCOUNTSAccountInfo schema"
            }
          ]
        }
      },
      "ACCOUNTSResponseListAccount": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSResponseRetrieveAccount": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSAccount",
              "description": "data references ACCOUNTSAccount schema"
            }
          ]
        }
      },
      "ACCOUNTSResponseRetrieveAccountInfo": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSAccountInfo",
              "description": "data references ACCOUNTSAccountInfo schema"
            }
          ]
        }
      },
      "ACCOUNTSStatusEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ACCOUNTSWorkspace": {
        "required_fields": [
          "active",
          "created",
          "id",
          "info",
          "last_editor",
          "last_modified",
          "name",
          "parent_id",
          "type",
          "workspace_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "ACCOUNTSWorkspaceRequest": {
        "required_fields": [
          "name",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "ACCOUNTSTypeEnum",
              "description": "type references ACCOUNTSTypeEnum schema"
            }
          ]
        }
      },
      "STORAGEBucket": {
        "required_fields": [
          "edge_access",
          "last_editor",
          "last_modified",
          "name",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_access": [
            {
              "type": "schema_reference",
              "references": "STORAGEEdgeAccessEnum",
              "description": "edge_access references STORAGEEdgeAccessEnum schema"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "STORAGEBucketCreate": {
        "required_fields": [
          "edge_access",
          "last_editor",
          "last_modified",
          "name",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_access": [
            {
              "type": "schema_reference",
              "references": "STORAGEEdgeAccessEnum",
              "description": "edge_access references STORAGEEdgeAccessEnum schema"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "STORAGEBucketCreateRequest": {
        "required_fields": [
          "edge_access",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_access": [
            {
              "type": "schema_reference",
              "references": "STORAGEEdgeAccessEnum",
              "description": "edge_access references STORAGEEdgeAccessEnum schema"
            }
          ]
        }
      },
      "STORAGEBucketObject": {
        "required_fields": [
          "is_folder",
          "key",
          "last_modified",
          "size"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "STORAGECapabilitiesEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGECredential": {
        "required_fields": [
          "access_key",
          "capabilities",
          "last_editor",
          "last_modified",
          "name",
          "secret_key"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expiration_date": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expiration_date format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "STORAGECredentialCreateRequest": {
        "required_fields": [
          "capabilities",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expiration_date": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expiration_date format date-time may require related fields"
            }
          ]
        }
      },
      "STORAGEDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEEdgeAccessEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEObjectResponseAsyncData": {
        "required_fields": [
          "object_key"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEObjectResponseData": {
        "required_fields": [
          "object_key"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEPaginatedBucketList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEPaginatedResponseListCredentialList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEPatchedBucketRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "edge_access": [
            {
              "type": "schema_reference",
              "references": "STORAGEEdgeAccessEnum",
              "description": "edge_access references STORAGEEdgeAccessEnum schema"
            }
          ]
        }
      },
      "STORAGEResponseAsyncBucketCreate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGEBucketCreate",
              "description": "data references STORAGEBucketCreate schema"
            }
          ]
        }
      },
      "STORAGEResponseAsyncCredential": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGECredential",
              "description": "data references STORAGECredential schema"
            }
          ]
        }
      },
      "STORAGEResponseAsyncDeleteBucketCreate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseAsyncDeleteBucketObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseAsyncDeleteCredential": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseBadRequestBucket": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseBadRequestCredential": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseBucketCreate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGEBucketCreate",
              "description": "data references STORAGEBucketCreate schema"
            }
          ]
        }
      },
      "STORAGEResponseBucketObject": {
        "required_fields": [
          "continuation_token",
          "results"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseCredential": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGECredential",
              "description": "data references STORAGECredential schema"
            }
          ]
        }
      },
      "STORAGEResponseDeleteBucketCreate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseDeleteBucketObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "STORAGEResponseListCredential": {
        "required_fields": [
          "access_key",
          "capabilities",
          "last_editor",
          "last_modified",
          "name",
          "secret_key"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expiration_date": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expiration_date format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "STORAGEResponseRetrieveBucket": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGEBucket",
              "description": "data references STORAGEBucket schema"
            }
          ]
        }
      },
      "STORAGEResponseRetrieveCredential": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGECredential",
              "description": "data references STORAGECredential schema"
            }
          ]
        }
      },
      "STORAGESuccessObjectOperation": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGEObjectResponseData",
              "description": "data references STORAGEObjectResponseData schema"
            }
          ]
        }
      },
      "STORAGESuccessObjectOperationAsync": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "STORAGEObjectResponseAsyncData",
              "description": "data references STORAGEObjectResponseAsyncData schema"
            }
          ]
        }
      },
      "DATAAWSKinesisFirehoseEndpoint": {
        "required_fields": [
          "access_key",
          "region",
          "secret_key",
          "stream_name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAAWSKinesisFirehoseEndpointRequest": {
        "required_fields": [
          "access_key",
          "region",
          "secret_key",
          "stream_name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAAzureBlobStorageEndpoint": {
        "required_fields": [
          "blob_sas_token",
          "container_name",
          "storage_account"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAAzureBlobStorageEndpointRequest": {
        "required_fields": [
          "blob_sas_token",
          "container_name",
          "storage_account"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAAzureMonitorEndpoint": {
        "required_fields": [
          "log_type",
          "shared_key",
          "workspace_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAAzureMonitorEndpointRequest": {
        "required_fields": [
          "log_type",
          "shared_key",
          "workspace_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATABigQueryEndpoint": {
        "required_fields": [
          "dataset_id",
          "project_id",
          "service_account_key",
          "table_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATABigQueryEndpointRequest": {
        "required_fields": [
          "dataset_id",
          "project_id",
          "service_account_key",
          "table_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAContentTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATADataSourceEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATADataStream": {
        "required_fields": [
          "id",
          "inputs",
          "last_editor",
          "last_modified",
          "name",
          "outputs",
          "product_version",
          "transform"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "DATADataStreamRequest": {
        "required_fields": [
          "inputs",
          "name",
          "outputs",
          "transform"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATADatadogEndpoint": {
        "required_fields": [
          "api_key",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATADatadogEndpointRequest": {
        "required_fields": [
          "api_key",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAElasticsearchEndpoint": {
        "required_fields": [
          "api_key",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAElasticsearchEndpointRequest": {
        "required_fields": [
          "api_key",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAHttpPostEndpoint": {
        "required_fields": [
          "headers",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAHttpPostEndpointRequest": {
        "required_fields": [
          "headers",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAInputDataSource": {
        "required_fields": [
          "data_source"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data_source": [
            {
              "type": "schema_reference",
              "references": "DATADataSourceEnum",
              "description": "data_source references DATADataSourceEnum schema"
            }
          ]
        }
      },
      "DATAInputDataSourceAttributes": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATAInputDataSourceAttributesTypeEnum",
              "description": "type references DATAInputDataSourceAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATAInputDataSource",
              "description": "attributes references DATAInputDataSource schema"
            }
          ]
        }
      },
      "DATAInputDataSourceAttributesRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATAInputDataSourceAttributesTypeEnum",
              "description": "type references DATAInputDataSourceAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATAInputDataSourceRequest",
              "description": "attributes references DATAInputDataSourceRequest schema"
            }
          ]
        }
      },
      "DATAInputDataSourceAttributesTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAInputDataSourceRequest": {
        "required_fields": [
          "data_source"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data_source": [
            {
              "type": "schema_reference",
              "references": "DATADataSourceEnum",
              "description": "data_source references DATADataSourceEnum schema"
            }
          ]
        }
      },
      "DATAInputPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAInputPolymorphicInputDataSourceAttributes": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAInputPolymorphicInputDataSourceAttributesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAInputPolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAInputPolymorphicShared": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAKafkaEndpoint": {
        "required_fields": [
          "bootstrap_servers",
          "kafka_topic",
          "use_tls"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAKafkaEndpointRequest": {
        "required_fields": [
          "bootstrap_servers",
          "kafka_topic",
          "use_tls"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAOutput": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATAOutputTypeEnum",
              "description": "type references DATAOutputTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATAOutputPolymorphic",
              "description": "attributes references DATAOutputPolymorphic schema"
            }
          ]
        }
      },
      "DATAOutputPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAOutputPolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAOutputRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATAOutputTypeEnum",
              "description": "type references DATAOutputTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATAOutputPolymorphicRequest",
              "description": "attributes references DATAOutputPolymorphicRequest schema"
            }
          ]
        }
      },
      "DATAOutputTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAPaginatedResponseListDataSourceList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAPaginatedResponseListDataStreamList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAPaginatedResponseListTemplateList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAPatchedDataStreamRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAPatchedTemplateRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAQRadarEndpoint": {
        "required_fields": [
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAQRadarEndpointRequest": {
        "required_fields": [
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATAResponseAsyncDataStream": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DATADataStream",
              "description": "data references DATADataStream schema"
            }
          ]
        }
      },
      "DATAResponseAsyncDeleteDataStream": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAResponseAsyncDeleteTemplate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAResponseAsyncTemplate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DATATemplate",
              "description": "data references DATATemplate schema"
            }
          ]
        }
      },
      "DATAResponseDataStream": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DATADataStream",
              "description": "data references DATADataStream schema"
            }
          ]
        }
      },
      "DATAResponseDeleteDataStream": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAResponseDeleteTemplate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAResponseListDataSource": {
        "required_fields": [
          "active",
          "name",
          "slug"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAResponseListDataStream": {
        "required_fields": [
          "id",
          "inputs",
          "last_editor",
          "last_modified",
          "name",
          "outputs",
          "product_version",
          "transform"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "DATAResponseListTemplate": {
        "required_fields": [
          "custom",
          "data_set",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "DATAResponseRetrieveDataStream": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DATADataStream",
              "description": "data references DATADataStream schema"
            }
          ]
        }
      },
      "DATAResponseRetrieveTemplate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DATATemplate",
              "description": "data references DATATemplate schema"
            }
          ]
        }
      },
      "DATAResponseTemplate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DATATemplate",
              "description": "data references DATATemplate schema"
            }
          ]
        }
      },
      "DATAS3Endpoint": {
        "required_fields": [
          "access_key",
          "bucket_name",
          "content_type",
          "host_url",
          "region"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "content_type": [
            {
              "type": "schema_reference",
              "references": "DATAContentTypeEnum",
              "description": "content_type references DATAContentTypeEnum schema"
            }
          ],
          "host_url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "host_url format uri may require related fields"
            }
          ]
        }
      },
      "DATAS3EndpointRequest": {
        "required_fields": [
          "access_key",
          "bucket_name",
          "content_type",
          "host_url",
          "region"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "content_type": [
            {
              "type": "schema_reference",
              "references": "DATAContentTypeEnum",
              "description": "content_type references DATAContentTypeEnum schema"
            }
          ],
          "host_url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "host_url format uri may require related fields"
            }
          ]
        }
      },
      "DATASplunkEndpoint": {
        "required_fields": [
          "api_key",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATASplunkEndpointRequest": {
        "required_fields": [
          "api_key",
          "url"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "DATATemplate": {
        "required_fields": [
          "custom",
          "data_set",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "DATATemplateRequest": {
        "required_fields": [
          "data_set",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformFilterWorkloads": {
        "required_fields": [
          "workloads"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformFilterWorkloadsAttributes": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATATransformFilterWorkloadsAttributesTypeEnum",
              "description": "type references DATATransformFilterWorkloadsAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATATransformFilterWorkloads",
              "description": "attributes references DATATransformFilterWorkloads schema"
            }
          ]
        }
      },
      "DATATransformFilterWorkloadsAttributesRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATATransformFilterWorkloadsAttributesTypeEnum",
              "description": "type references DATATransformFilterWorkloadsAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATATransformFilterWorkloadsRequest",
              "description": "attributes references DATATransformFilterWorkloadsRequest schema"
            }
          ]
        }
      },
      "DATATransformFilterWorkloadsAttributesTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformFilterWorkloadsRequest": {
        "required_fields": [
          "workloads"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphic": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicShared": {
        "required_fields": [
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributes": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributes": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicTransformSamplingAttributes": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformPolymorphicTransformSamplingAttributesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformRenderTemplate": {
        "required_fields": [
          "template"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformRenderTemplateAttributes": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATATransformRenderTemplateAttributesTypeEnum",
              "description": "type references DATATransformRenderTemplateAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATATransformRenderTemplate",
              "description": "attributes references DATATransformRenderTemplate schema"
            }
          ]
        }
      },
      "DATATransformRenderTemplateAttributesRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATATransformRenderTemplateAttributesTypeEnum",
              "description": "type references DATATransformRenderTemplateAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATATransformRenderTemplateRequest",
              "description": "attributes references DATATransformRenderTemplateRequest schema"
            }
          ]
        }
      },
      "DATATransformRenderTemplateAttributesTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformRenderTemplateRequest": {
        "required_fields": [
          "template"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformSampling": {
        "required_fields": [
          "rate"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformSamplingAttributes": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATATransformSamplingAttributesTypeEnum",
              "description": "type references DATATransformSamplingAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATATransformSampling",
              "description": "attributes references DATATransformSampling schema"
            }
          ]
        }
      },
      "DATATransformSamplingAttributesRequest": {
        "required_fields": [
          "attributes",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DATATransformSamplingAttributesTypeEnum",
              "description": "type references DATATransformSamplingAttributesTypeEnum schema"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "references": "DATATransformSamplingRequest",
              "description": "attributes references DATATransformSamplingRequest schema"
            }
          ]
        }
      },
      "DATATransformSamplingAttributesTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATATransformSamplingRequest": {
        "required_fields": [
          "rate"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DATAType4f5Enum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORBlankEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORContent": {
        "required_fields": [
          "content_hash",
          "content_type",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORContentRequest": {
        "required_fields": [
          "content_hash",
          "content_type",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeGroups": {
        "required_fields": [
          "id",
          "name",
          "ref_count"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeGroupsById": {
        "required_fields": [
          "id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeGroupsByIdRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeGroupsRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeServiceBind": {
        "required_fields": [
          "active",
          "id",
          "last_editor",
          "last_modified",
          "service_id",
          "service_name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeServices": {
        "required_fields": [
          "last_editor",
          "last_modified",
          "service_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodeServicesRequest": {
        "required_fields": [
          "service_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORNodes": {
        "required_fields": [
          "active",
          "hash_id",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "status"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "status": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStatusEnum",
              "description": "status references ORCHESTRATORStatusEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORNodesRequest": {
        "required_fields": [
          "name",
          "status"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "status": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStatusEnum",
              "description": "status references ORCHESTRATORStatusEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORPaginatedNodeGroupsList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORPaginatedResponseListNodeGroupsByIdList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORPaginatedResponseListNodeServicesList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORPaginatedResponseListNodesList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORPaginatedResponseListServicesList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORPaginatedServiceResourceList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORPatchedNodesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "status": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStatusEnum",
              "description": "status references ORCHESTRATORStatusEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORPatchedServicesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseBadRequestNodeGroupsById": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseBadRequestNodeServiceBind": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseBadRequestNodeServices": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseBadRequestNodes": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseBadRequestServices": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseDeleteNodeServiceBind": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseDeleteNodes": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseDeleteServices": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseListNodeGroupsById": {
        "required_fields": [
          "id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseListNodeServices": {
        "required_fields": [
          "last_editor",
          "last_modified",
          "service_id"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseListNodes": {
        "required_fields": [
          "active",
          "hash_id",
          "id",
          "last_editor",
          "last_modified",
          "name",
          "product_version",
          "status"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "status": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStatusEnum",
              "description": "status references ORCHESTRATORStatusEnum schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseListServices": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "product_version",
          "ref_count"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORResponseNodeGroupsById": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORNodeGroupsById",
              "description": "data references ORCHESTRATORNodeGroupsById schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseNodeServices": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORNodeServices",
              "description": "data references ORCHESTRATORNodeServices schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseNodes": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORNodes",
              "description": "data references ORCHESTRATORNodes schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseRetrieveNodeServiceBind": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORNodeServiceBind",
              "description": "data references ORCHESTRATORNodeServiceBind schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseRetrieveNodes": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORNodes",
              "description": "data references ORCHESTRATORNodes schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseRetrieveServices": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORServices",
              "description": "data references ORCHESTRATORServices schema"
            }
          ]
        }
      },
      "ORCHESTRATORResponseServices": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORStateEnum",
              "description": "state references ORCHESTRATORStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "ORCHESTRATORServices",
              "description": "data references ORCHESTRATORServices schema"
            }
          ]
        }
      },
      "ORCHESTRATORServiceResource": {
        "required_fields": [
          "active",
          "content_hash",
          "content_type",
          "file_group",
          "file_mode",
          "file_owner",
          "id",
          "is_template",
          "last_editor",
          "last_modified",
          "name",
          "ref_count"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORServiceResourceId": {
        "required_fields": [
          "active",
          "content_hash",
          "file_group",
          "file_mode",
          "file_owner",
          "id",
          "is_template",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORServiceResourceIdRequest": {
        "required_fields": [
          "file_group",
          "file_mode",
          "file_owner",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORServiceResourceRequest": {
        "required_fields": [
          "content_type",
          "file_group",
          "file_mode",
          "file_owner",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORServices": {
        "required_fields": [
          "id",
          "last_editor",
          "last_modified",
          "product_version",
          "ref_count"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORServicesRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORStateEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORStatusEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "ORCHESTRATORTriggerEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSBuildContextField": {
        "required_fields": [
          "field",
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSBuildContextFieldRequest": {
        "required_fields": [
          "field",
          "value"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSContinuousDeployment": {
        "required_fields": [
          "branch",
          "build_context",
          "created",
          "execution_script",
          "id",
          "integration",
          "last_editor",
          "last_modified",
          "name",
          "repository"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "VCSContinuousDeploymentRequest": {
        "required_fields": [
          "branch",
          "build_context",
          "execution_script_id",
          "integration_id",
          "name",
          "repository"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSExecution": {
        "required_fields": [
          "created_at",
          "id",
          "updated_at"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "created_at": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created_at format date-time may require related fields"
            }
          ],
          "updated_at": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "updated_at format date-time may require related fields"
            }
          ]
        }
      },
      "VCSExecutionScript": {
        "required_fields": [
          "id",
          "name",
          "template_uuid"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSExecutionScriptRequest": {
        "required_fields": [
          "name",
          "template_uuid"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSExecutor": {
        "required_fields": [
          "email",
          "id",
          "is_active",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSIntegration": {
        "required_fields": [
          "id",
          "provider",
          "scope",
          "scope_type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "provider": [
            {
              "type": "schema_reference",
              "references": "VCSPlatform",
              "description": "provider references VCSPlatform schema"
            }
          ]
        }
      },
      "VCSJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPaginatedResponseListContinuousDeploymentList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPaginatedResponseListExecutionList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPaginatedResponseListExecutionScriptList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPaginatedResponseListIntegrationList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPaginatedResponseListPlatformList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPaginatedResponseListRepositoryList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPatchedContinuousDeploymentRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSPlatform": {
        "required_fields": [
          "callback_url",
          "id",
          "installation_url",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseAsyncContinuousDeployment": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSContinuousDeployment",
              "description": "data references VCSContinuousDeployment schema"
            }
          ]
        }
      },
      "VCSResponseAsyncDeleteContinuousDeployment": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseAsyncDeleteIntegration": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseAsyncExecution": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSExecution",
              "description": "data references VCSExecution schema"
            }
          ]
        }
      },
      "VCSResponseAsyncExecutor": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSExecutor",
              "description": "data references VCSExecutor schema"
            }
          ]
        }
      },
      "VCSResponseContinuousDeployment": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSContinuousDeployment",
              "description": "data references VCSContinuousDeployment schema"
            }
          ]
        }
      },
      "VCSResponseDeleteContinuousDeployment": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseDeleteIntegration": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseExecution": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSExecution",
              "description": "data references VCSExecution schema"
            }
          ]
        }
      },
      "VCSResponseExecutor": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSExecutor",
              "description": "data references VCSExecutor schema"
            }
          ]
        }
      },
      "VCSResponseListContinuousDeployment": {
        "required_fields": [
          "branch",
          "build_context",
          "created",
          "execution_script",
          "id",
          "integration",
          "last_editor",
          "last_modified",
          "name",
          "repository"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "VCSResponseListExecution": {
        "required_fields": [
          "created_at",
          "id",
          "updated_at"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "created_at": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created_at format date-time may require related fields"
            }
          ],
          "updated_at": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "updated_at format date-time may require related fields"
            }
          ]
        }
      },
      "VCSResponseListExecutionScript": {
        "required_fields": [
          "id",
          "name",
          "template_uuid"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseListIntegration": {
        "required_fields": [
          "id",
          "provider",
          "scope",
          "scope_type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "provider": [
            {
              "type": "schema_reference",
              "references": "VCSPlatform",
              "description": "provider references VCSPlatform schema"
            }
          ]
        }
      },
      "VCSResponseListPlatform": {
        "required_fields": [
          "callback_url",
          "id",
          "installation_url",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "VCSResponseListRepository": {
        "required_fields": [
          "id",
          "name",
          "url",
          "visibility"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "url": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "url format uri may require related fields"
            }
          ]
        }
      },
      "VCSResponseRetrieveContinuousDeployment": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSContinuousDeployment",
              "description": "data references VCSContinuousDeployment schema"
            }
          ]
        }
      },
      "VCSResponseRetrieveExecutionScript": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSExecutionScript",
              "description": "data references VCSExecutionScript schema"
            }
          ]
        }
      },
      "VCSResponseRetrieveExecutor": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSExecutor",
              "description": "data references VCSExecutor schema"
            }
          ]
        }
      },
      "VCSResponseRetrieveIntegration": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "VCSIntegration",
              "description": "data references VCSIntegration schema"
            }
          ]
        }
      },
      "DNSAlgType": {
        "required_fields": [
          "id",
          "slug"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSAlgTypeRequest": {
        "required_fields": [
          "id",
          "slug"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSDNSSEC": {
        "required_fields": [
          "delegation_signer",
          "enabled",
          "status"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSDNSSECRequest": {
        "required_fields": [
          "enabled"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSDelegationSigner": {
        "required_fields": [
          "algorithm_type",
          "digest",
          "digest_type",
          "key_tag"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "algorithm_type": [
            {
              "type": "schema_reference",
              "references": "DNSAlgType",
              "description": "algorithm_type references DNSAlgType schema"
            }
          ],
          "digest_type": [
            {
              "type": "schema_reference",
              "references": "DNSAlgType",
              "description": "digest_type references DNSAlgType schema"
            }
          ]
        }
      },
      "DNSDelegationSignerRequest": {
        "required_fields": [
          "algorithm_type",
          "digest",
          "digest_type",
          "key_tag"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "algorithm_type": [
            {
              "type": "schema_reference",
              "references": "DNSAlgTypeRequest",
              "description": "algorithm_type references DNSAlgTypeRequest schema"
            }
          ],
          "digest_type": [
            {
              "type": "schema_reference",
              "references": "DNSAlgTypeRequest",
              "description": "digest_type references DNSAlgTypeRequest schema"
            }
          ]
        }
      },
      "DNSJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSPaginatedRecordList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSPaginatedZoneList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSPatchedDNSSECRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSPatchedRecordRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DNSTypeEnum",
              "description": "type references DNSTypeEnum schema"
            }
          ]
        }
      },
      "DNSPatchedUpdateZoneRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSPolicyEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSRecord": {
        "required_fields": [
          "id",
          "name",
          "rdata",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DNSTypeEnum",
              "description": "type references DNSTypeEnum schema"
            }
          ]
        }
      },
      "DNSRecordRequest": {
        "required_fields": [
          "name",
          "rdata",
          "type"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "type": [
            {
              "type": "schema_reference",
              "references": "DNSTypeEnum",
              "description": "type references DNSTypeEnum schema"
            }
          ]
        }
      },
      "DNSResponseAsyncDNSSEC": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSDNSSEC",
              "description": "data references DNSDNSSEC schema"
            }
          ]
        }
      },
      "DNSResponseAsyncDeleteRecord": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSResponseAsyncDeleteZone": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSResponseAsyncRecord": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSRecord",
              "description": "data references DNSRecord schema"
            }
          ]
        }
      },
      "DNSResponseAsyncZone": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSZone",
              "description": "data references DNSZone schema"
            }
          ]
        }
      },
      "DNSResponseDNSSEC": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSDNSSEC",
              "description": "data references DNSDNSSEC schema"
            }
          ]
        }
      },
      "DNSResponseDeleteRecord": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSResponseDeleteZone": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSResponseRecord": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSRecord",
              "description": "data references DNSRecord schema"
            }
          ]
        }
      },
      "DNSResponseRetrieveDNSSEC": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSDNSSEC",
              "description": "data references DNSDNSSEC schema"
            }
          ]
        }
      },
      "DNSResponseRetrieveRecord": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSRecord",
              "description": "data references DNSRecord schema"
            }
          ]
        }
      },
      "DNSResponseRetrieveZone": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSZone",
              "description": "data references DNSZone schema"
            }
          ]
        }
      },
      "DNSResponseZone": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "DNSZone",
              "description": "data references DNSZone schema"
            }
          ]
        }
      },
      "DNSStatusEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSUpdateZoneRequest": {
        "required_fields": [
          "active",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSZone": {
        "required_fields": [
          "active",
          "domain",
          "id",
          "name",
          "nameservers",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "DNSZoneRequest": {
        "required_fields": [
          "active",
          "domain",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "BILLINGJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "BILLINGJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "BILLINGJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSAuthorityEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSCertificate": {
        "required_fields": [
          "authority",
          "challenge",
          "csr",
          "id",
          "issuer",
          "key_algorithm",
          "last_editor",
          "last_modified",
          "managed",
          "name",
          "product_version",
          "renewed_at",
          "status",
          "status_detail",
          "subject_name",
          "validity"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "renewed_at": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "renewed_at format date-time may require related fields"
            }
          ]
        }
      },
      "TLSCertificateRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSCertificateRequestRequest": {
        "required_fields": [
          "authority",
          "challenge",
          "common_name",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "challenge": [
            {
              "type": "schema_reference",
              "references": "TLSChallengeEnum",
              "description": "challenge references TLSChallengeEnum schema"
            }
          ],
          "authority": [
            {
              "type": "schema_reference",
              "references": "TLSAuthorityEnum",
              "description": "authority references TLSAuthorityEnum schema"
            }
          ]
        }
      },
      "TLSCertificateRevocationList": {
        "required_fields": [
          "crl",
          "id",
          "issuer",
          "last_editor",
          "last_modified",
          "last_update",
          "name",
          "next_update",
          "product_version"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "last_update": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_update format date-time may require related fields"
            }
          ],
          "next_update": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "next_update format date-time may require related fields"
            }
          ]
        }
      },
      "TLSCertificateRevocationListRequest": {
        "required_fields": [
          "crl",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSCertificateSigningRequestRequest": {
        "required_fields": [
          "common_name",
          "country",
          "email",
          "locality",
          "name",
          "organization",
          "organization_unity",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ]
        }
      },
      "TLSChallengeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSJSONAPIErrorObject": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSJSONAPIErrorResponse": {
        "required_fields": [
          "errors"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSJSONAPIErrorSource": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSKeyAlgorithmEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSNullEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSPaginatedCertificateList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSPaginatedCertificateRevocationListList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSPatchedCertificateRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSPatchedCertificateRevocationListRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSResponseAsyncCertificate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "TLSCertificate",
              "description": "data references TLSCertificate schema"
            }
          ]
        }
      },
      "TLSResponseAsyncCertificateRevocationList": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "TLSCertificateRevocationList",
              "description": "data references TLSCertificateRevocationList schema"
            }
          ]
        }
      },
      "TLSResponseAsyncDeleteCertificate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSResponseAsyncDeleteCertificateRevocationList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSResponseBadRequestCertificate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSResponseCertificate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "TLSCertificate",
              "description": "data references TLSCertificate schema"
            }
          ]
        }
      },
      "TLSResponseCertificateRevocationList": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "TLSCertificateRevocationList",
              "description": "data references TLSCertificateRevocationList schema"
            }
          ]
        }
      },
      "TLSResponseDeleteCertificate": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSResponseDeleteCertificateRevocationList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSResponseRetrieveCertificate": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "TLSCertificate",
              "description": "data references TLSCertificate schema"
            }
          ]
        }
      },
      "TLSResponseRetrieveCertificateRevocationList": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "TLSCertificateRevocationList",
              "description": "data references TLSCertificateRevocationList schema"
            }
          ]
        }
      },
      "TLSStatusEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "TLSTypeEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "MARKETPLACEDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "MARKETPLACEPublisher": {
        "required_fields": [
          "created",
          "icon",
          "id",
          "last_editor",
          "last_modified",
          "organization_id",
          "vendor"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "icon": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "icon format uri may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "MARKETPLACEPublisherRequest": {
        "required_fields": [
          "icon"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "icon": [
            {
              "type": "format_dependency",
              "format": "uri",
              "related_concepts": [
                "protocol",
                "host",
                "path"
              ],
              "description": "icon format uri may require related fields"
            }
          ]
        }
      },
      "MARKETPLACEResponseBadRequestPublisher": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "MARKETPLACEResponsePublisher": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "MARKETPLACEStateEnum",
              "description": "state references MARKETPLACEStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "MARKETPLACEPublisher",
              "description": "data references MARKETPLACEPublisher schema"
            }
          ]
        }
      },
      "MARKETPLACEResponseRetrievePublisher": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "MARKETPLACEPublisher",
              "description": "data references MARKETPLACEPublisher schema"
            }
          ]
        }
      },
      "MARKETPLACEStateEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYDefaultErrorResponse": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYFavorite": {
        "required_fields": [
          "id",
          "name",
          "type",
          "uri"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYFavoriteRequest": {
        "required_fields": [
          "uri"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYGrant": {
        "required_fields": [
          "account_id",
          "id",
          "owner"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYGrantRequest": {
        "required_fields": [
          "account_id",
          "owner"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYGroup": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYGroupMembers": {
        "required_fields": [
          "members"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYGroupMembersRequest": {
        "required_fields": [
          "members"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYGroupRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPaginatedResponseListFavoriteList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPaginatedResponseListGrantList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPaginatedResponseListGroupList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPaginatedResponseListServiceTokenList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPaginatedResponseListUserList": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPatchedGrantRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYPatchedGroupRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPatchedServiceTokenUpdateRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYPatchedUserRequest": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ]
        }
      },
      "IDENTITYResponseBadRequestFavorite": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestGrant": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestGroup": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestGroupMembers": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestServiceToken": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestServiceTokenRenew": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestUser": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseBadRequestUserInfo": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseDeleteFavorite": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ]
        }
      },
      "IDENTITYResponseDeleteGrant": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ]
        }
      },
      "IDENTITYResponseDeleteGroup": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ]
        }
      },
      "IDENTITYResponseDeleteServiceToken": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ]
        }
      },
      "IDENTITYResponseDeleteUser": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ]
        }
      },
      "IDENTITYResponseFavorite": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYFavorite",
              "description": "data references IDENTITYFavorite schema"
            }
          ]
        }
      },
      "IDENTITYResponseGrant": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYGrant",
              "description": "data references IDENTITYGrant schema"
            }
          ]
        }
      },
      "IDENTITYResponseGroup": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYGroup",
              "description": "data references IDENTITYGroup schema"
            }
          ]
        }
      },
      "IDENTITYResponseGroupMembers": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYGroupMembers",
              "description": "data references IDENTITYGroupMembers schema"
            }
          ]
        }
      },
      "IDENTITYResponseListFavorite": {
        "required_fields": [
          "id",
          "name",
          "type",
          "uri"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYResponseListGrant": {
        "required_fields": [
          "account_id",
          "id",
          "owner"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYResponseListGroup": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "id",
          "last_editor",
          "last_modified",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYResponseListServiceToken": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "expires",
          "id",
          "last_editor",
          "last_modified",
          "last_used",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_used format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYResponseListUser": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "id",
          "info",
          "last_editor",
          "last_login",
          "last_modified",
          "lockout",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "last_login": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_login format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYResponseRetrieveGrant": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYGrant",
              "description": "data references IDENTITYGrant schema"
            }
          ]
        }
      },
      "IDENTITYResponseRetrieveGroup": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYGroup",
              "description": "data references IDENTITYGroup schema"
            }
          ]
        }
      },
      "IDENTITYResponseRetrieveGroupMembers": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYGroupMembers",
              "description": "data references IDENTITYGroupMembers schema"
            }
          ]
        }
      },
      "IDENTITYResponseRetrieveServiceToken": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYServiceToken",
              "description": "data references IDENTITYServiceToken schema"
            }
          ]
        }
      },
      "IDENTITYResponseRetrieveUser": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYUser",
              "description": "data references IDENTITYUser schema"
            }
          ]
        }
      },
      "IDENTITYResponseRetrieveUserInfo": {
        "required_fields": [
          "data"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYUserInfo",
              "description": "data references IDENTITYUserInfo schema"
            }
          ]
        }
      },
      "IDENTITYResponseServiceToken": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYServiceToken",
              "description": "data references IDENTITYServiceToken schema"
            }
          ]
        }
      },
      "IDENTITYResponseServiceTokenCreate": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYServiceTokenCreate",
              "description": "data references IDENTITYServiceTokenCreate schema"
            }
          ]
        }
      },
      "IDENTITYResponseServiceTokenRenew": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYServiceTokenRenew",
              "description": "data references IDENTITYServiceTokenRenew schema"
            }
          ]
        }
      },
      "IDENTITYResponseUser": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYUser",
              "description": "data references IDENTITYUser schema"
            }
          ]
        }
      },
      "IDENTITYResponseUserInfo": {
        "required_fields": [
          "data",
          "state"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "state": [
            {
              "type": "schema_reference",
              "references": "IDENTITYStateEnum",
              "description": "state references IDENTITYStateEnum schema"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "references": "IDENTITYUserInfo",
              "description": "data references IDENTITYUserInfo schema"
            }
          ]
        }
      },
      "IDENTITYServiceToken": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "expires",
          "id",
          "last_editor",
          "last_modified",
          "last_used",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_used format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYServiceTokenCreate": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "expires",
          "id",
          "last_editor",
          "last_modified",
          "last_used",
          "name",
          "token"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_used format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYServiceTokenCreateRequest": {
        "required_fields": [
          "expires",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYServiceTokenRenew": {
        "required_fields": [
          "account_id",
          "active",
          "created",
          "description",
          "email",
          "expires",
          "id",
          "last_editor",
          "last_modified",
          "last_used",
          "name",
          "token"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_used format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYServiceTokenRenewRequest": {
        "required_fields": [
          "expires"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "expires": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "expires format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYServiceTokenUpdateRequest": {
        "required_fields": [
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYStateEnum": {
        "required_fields": [],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYUser": {
        "required_fields": [
          "account_id",
          "created",
          "email",
          "id",
          "info",
          "last_editor",
          "last_login",
          "last_modified",
          "lockout",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "created format date-time may require related fields"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_modified format date-time may require related fields"
            }
          ],
          "last_login": [
            {
              "type": "format_dependency",
              "format": "date-time",
              "related_concepts": [
                "timezone"
              ],
              "description": "last_login format date-time may require related fields"
            }
          ]
        }
      },
      "IDENTITYUserInfo": {
        "required_fields": [
          "info"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {}
      },
      "IDENTITYUserRequest": {
        "required_fields": [
          "email",
          "name"
        ],
        "conditional_required": [],
        "mutually_exclusive": [],
        "dependent_fields": {
          "email": [
            {
              "type": "format_dependency",
              "format": "email",
              "related_concepts": [
                "domain",
                "local_part"
              ],
              "description": "email format email may require related fields"
            }
          ]
        }
      }
    },
    "conditionalLogic": {
      "USERSDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHEffectEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHLockoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHLockoutPolicyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHLoginRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHLoginResponse": {
        "discriminators": [
          {
            "property": "response_type",
            "mapping": {
              "TokenPair": "#/components/schemas/AUTHTokenPair",
              "MFAToken": "#/components/schemas/AUTHMFAToken"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/AUTHTokenPair"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/AUTHMFAToken"
            },
            "description": "OneOf variant 2"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHMFAToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPaginatedPolicyList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPaginatedTOTPDeviceListList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPatchedPolicyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPolicyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPolicyRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPolicyRuleCondition": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPolicyRuleConditionRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHPolicyRuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncDeletePolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncDeleteTOTPDeviceCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncLockoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncLogin": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncSessionTimeoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncTOTPDeviceCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseAsyncTokenPair": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseBadRequestPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseDeletePolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseDeleteTOTPDeviceCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseLockoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseLogin": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponsePolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseRetrieveLockoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseRetrievePolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseRetrieveSessionTimeoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseSessionTimeoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseTOTPDeviceCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHResponseTokenPair": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHSessionTimeoutPolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHSessionTimeoutPolicyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHStateExecutedResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHStatePendingResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHTOTPDeviceCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHTOTPDeviceList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHTOTPVerificationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHTokenPair": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHTokenRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "AUTHuser_login_method_response": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAWS4HMAC": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAWS4HMACAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAWS4HMACAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAWS4HMACRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAWS4HMACTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAddress": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAddressLoadBalancerModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAddressLoadBalancerModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAddressModules": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAddressModulesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEAddressRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationAcceleratorModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEApplicationAcceleratorModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEApplicationDeviceGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationDeviceGroupsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationFunctionInstanceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationModules": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationModulesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRequestPhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRequestPhaseRuleEngineOrderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRequestPhaseRuleEngineRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationResponsePhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationResponsePhaseRuleEngineOrderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationResponsePhaseRuleEngineRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddHeaderTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddRequestCookie": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddResponseHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookie": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineNoArgs": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineNoArgsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineNoArgsTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviors": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "deny": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "no_content": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "deliver": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "finish_request_phase": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "redirect_to_301": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString",
              "redirect_to_302": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString",
              "forward_cookies": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "optimize_images": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "bypass_cache": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "enable_gzip": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "filter_request_cookie": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie",
              "run_function": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction",
              "set_origin": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin",
              "redirect_http_to_https": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs",
              "set_connector": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector",
              "set_cache_policy": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy",
              "rewrite_request": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest",
              "add_request_header": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader",
              "filter_request_header": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader",
              "capture_match_groups": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups",
              "add_request_cookie": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector"
            },
            "description": "OneOf variant 6"
          },
          {
            "variant_index": 6,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy"
            },
            "description": "OneOf variant 7"
          },
          {
            "variant_index": 7,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest"
            },
            "description": "OneOf variant 8"
          },
          {
            "variant_index": 8,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader"
            },
            "description": "OneOf variant 9"
          },
          {
            "variant_index": 9,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader"
            },
            "description": "OneOf variant 10"
          },
          {
            "variant_index": 10,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups"
            },
            "description": "OneOf variant 11"
          },
          {
            "variant_index": 11,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie"
            },
            "description": "OneOf variant 12"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "deny": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "no_content": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "deliver": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "finish_request_phase": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "redirect_to_301": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest",
              "redirect_to_302": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest",
              "forward_cookies": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "optimize_images": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "bypass_cache": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "enable_gzip": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "filter_request_cookie": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest",
              "run_function": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest",
              "set_origin": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest",
              "redirect_http_to_https": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest",
              "set_connector": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest",
              "set_cache_policy": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest",
              "rewrite_request": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest",
              "add_request_header": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest",
              "filter_request_header": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest",
              "capture_match_groups": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest",
              "add_request_cookie": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest"
            },
            "description": "OneOf variant 6"
          },
          {
            "variant_index": 6,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest"
            },
            "description": "OneOf variant 7"
          },
          {
            "variant_index": 7,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest"
            },
            "description": "OneOf variant 8"
          },
          {
            "variant_index": 8,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest"
            },
            "description": "OneOf variant 9"
          },
          {
            "variant_index": 9,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest"
            },
            "description": "OneOf variant 10"
          },
          {
            "variant_index": 10,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest"
            },
            "description": "OneOf variant 11"
          },
          {
            "variant_index": 11,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest"
            },
            "description": "OneOf variant 12"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsShared": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseNoArgs": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviors": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "enable_gzip": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs",
              "deliver": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs",
              "redirect_to_301": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString",
              "redirect_to_302": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString",
              "filter_response_cookie": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString",
              "run_function": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse",
              "set_cookie": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie",
              "add_response_header": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader",
              "filter_response_header": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader",
              "capture_match_groups": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader"
            },
            "description": "OneOf variant 6"
          },
          {
            "variant_index": 6,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups"
            },
            "description": "OneOf variant 7"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "enable_gzip": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest",
              "deliver": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest",
              "redirect_to_301": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest",
              "redirect_to_302": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest",
              "filter_response_cookie": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest",
              "run_function": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest",
              "set_cookie": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest",
              "add_response_header": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest",
              "filter_response_header": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest",
              "capture_match_groups": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest"
            },
            "description": "OneOf variant 6"
          },
          {
            "variant_index": 6,
            "schema": {
              "reference": "#/components/schemas/EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest"
            },
            "description": "OneOf variant 7"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsShared": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseString": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseStringRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineResponseStringTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRewriteRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRewriteRequestRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunction": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCachePolicy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetConnector": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetConnectorRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetConnectorTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCookie": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCookieRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetCookieTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetOrigin": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetOriginRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineSetOriginTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineString": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineStringAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineStringAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineStringRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEApplicationRuleEngineStringTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEBehaviorA69Enum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEBlankEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEBrowserCacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEBrowserCacheModuleBehaviorEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEBrowserCacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGECacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGECacheSetting": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsApplicationAcceleratorModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsEdgeCacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsEdgeCacheModuleBehaviorEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsEdgeCacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsModules": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsModulesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsTieredCacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsTieredCacheModuleBehaviorEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheSettingsTieredCacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByCookiesModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByCookiesModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByDevicesModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByDevicesModuleBehaviorEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByDevicesModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByMethodEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECacheVaryByQuerystringModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "sort_enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for sort_enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGECacheVaryByQuerystringModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "sort_enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for sort_enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGECiphersEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECloneApplicationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECloneFirewallRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECloneWAFRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECodeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConditionalEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorHTTP": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorHTTPAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorHTTPAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorHTTPRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorLiveIngest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorLiveIngestAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorLiveIngestAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorLiveIngestRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorPolymorphic": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "http": "#/components/schemas/EDGEConnectorHTTP",
              "storage": "#/components/schemas/EDGEConnectorStorage",
              "live_ingest": "#/components/schemas/EDGEConnectorLiveIngest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEConnectorHTTP"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEConnectorStorage"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEConnectorLiveIngest"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorPolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "http": "#/components/schemas/EDGEConnectorHTTPRequest",
              "storage": "#/components/schemas/EDGEConnectorStorageRequest",
              "live_ingest": "#/components/schemas/EDGEConnectorLiveIngestRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEConnectorHTTPRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEConnectorStorageRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEConnectorLiveIngestRequest"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorStorage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorStorageAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorStorageAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEConnectorStorageRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECustomPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGECustomPageRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDefaultDeploymentStrategy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDefaultDeploymentStrategyAttrs": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDefaultDeploymentStrategyAttrsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDefaultDeploymentStrategyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDeploymentStrategy": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "default": "#/components/schemas/EDGEDeploymentStrategyDefaultDeploymentStrategy"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEDeploymentStrategyDefaultDeploymentStrategy"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategy": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategyRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDeploymentStrategyRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "default": "#/components/schemas/EDGEDeploymentStrategyDefaultDeploymentStrategyRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEDeploymentStrategyDefaultDeploymentStrategyRequest"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDeploymentStrategyShared": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEDnsResolutionEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeApplicationCriterionField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeApplicationCriterionFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeApplicationCriterionFieldVariableEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgument": {
        "discriminators": [],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "name": "oneOf_variant",
              "type": "integer",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "name": "oneOf_variant",
              "type": "string",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 2"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgumentRequest": {
        "discriminators": [],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "name": "oneOf_variant",
              "type": "integer",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "name": "oneOf_variant",
              "type": "string",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 2"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFirewallCriterionField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFirewallCriterionFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFirewallCriterionFieldVariableEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgument": {
        "discriminators": [],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "name": "oneOf_variant",
              "type": "string",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "name": "oneOf_variant",
              "type": "integer",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "name": "oneOf_variant",
              "type": "string",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgumentRequest": {
        "discriminators": [],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "name": "oneOf_variant",
              "type": "string",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "name": "oneOf_variant",
              "type": "integer",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "name": "oneOf_variant",
              "type": "string",
              "properties": {},
              "required": [],
              "constraints": {},
              "relationships": [],
              "conditional_fields": {},
              "examples": []
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFunctionModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEEdgeFunctionModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEEdgeFunctions": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEdgeFunctionsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEEngineVersionEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEExecutionEnvironmentEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewall": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorNoArguments": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorNoArgumentsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorNoArgumentsTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorRunFunction": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorRunFunctionRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetCustomResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetCustomResponseRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetRateLimit": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetRateLimitRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetRateLimitTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetWaf": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetWafAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetWafAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetWafRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorSetWafTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorTagEvent": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorTagEventAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorTagEventAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorTagEventRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorTagEventTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviors": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "deny": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorNoArguments",
              "drop": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorNoArguments",
              "set_custom_response": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse",
              "set_rate_limit": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit",
              "tag_event": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorTagEvent",
              "set_waf": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetWaf",
              "run_function": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorRunFunction"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorNoArguments"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorTagEvent"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetWaf"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorRunFunction"
            },
            "description": "OneOf variant 6"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArguments": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunction": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWaf": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEvent": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "deny": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest",
              "drop": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest",
              "set_custom_response": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest",
              "set_rate_limit": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest",
              "tag_event": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest",
              "set_waf": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest",
              "run_function": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest"
            },
            "description": "OneOf variant 6"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallBehaviorsShared": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallFunctionInstanceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEFirewallModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": true,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEFirewallModules": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallModulesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallRuleEngineOrderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEFirewallRuleEngineRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHMAC": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEHMACPolymorphic": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "aws4_hmac_sha256": "#/components/schemas/EDGEAWS4HMAC"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEAWS4HMAC"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHMACPolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "aws4_hmac_sha256": "#/components/schemas/EDGEAWS4HMACRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEAWS4HMACRequest"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHMACRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEHTTPConnectionOptions": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHTTPConnectionOptionsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHTTPModules": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHTTPModulesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHttpProtocol": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHttpProtocolRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEHttpVersionPolicyEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEImageProcessorModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEImageProcessorModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEInfrastructureEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGELargeFileCacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGELargeFileCacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGELayerEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGELimitByEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGELoadBalancerModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGELoadBalancerModuleConfig": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGELoadBalancerModuleConfigRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGELoadBalancerModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEMTLS": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEMTLSRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEMethodEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEMinimumVersionEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEModeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGENetworkList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGENetworkListDetail": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGENetworkListDetailRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGENullEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEOperator565Enum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEOriginIPACL": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEOriginIPACLRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEOriginShieldConfig": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEOriginShieldConfigRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEOriginShieldModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEOriginShieldModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPageConnector": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPageConnectorAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPageConnectorAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPageConnectorRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPagePolymorphic": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "page_connector": "#/components/schemas/EDGEPageConnector"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEPageConnector"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPagePolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "page_connector": "#/components/schemas/EDGEPageConnectorRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEPageConnectorRequest"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPageRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedApplicationDeviceGroupsList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedApplicationFunctionInstanceList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedApplicationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedApplicationRequestPhaseRuleEngineList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedApplicationResponsePhaseRuleEngineList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedConnectorPolymorphicList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedCustomPageList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedEdgeFunctionsList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedFirewallFunctionInstanceList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedFirewallList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedFirewallRuleEngineList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedNetworkListList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedResponseListCacheSettingList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedWAFList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedWAFRuleList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedWorkloadDeploymentList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPaginatedWorkloadList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedApplicationDeviceGroupsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedApplicationFunctionInstanceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedApplicationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedApplicationRequestPhaseRuleEngineRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedApplicationResponsePhaseRuleEngineRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedCacheSettingRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedConnectorHTTPRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedConnectorLiveIngestRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedConnectorPolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "http": "#/components/schemas/EDGEPatchedConnectorHTTPRequest",
              "storage": "#/components/schemas/EDGEPatchedConnectorStorageRequest",
              "live_ingest": "#/components/schemas/EDGEPatchedConnectorLiveIngestRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEPatchedConnectorHTTPRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEPatchedConnectorStorageRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEPatchedConnectorLiveIngestRequest"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedConnectorStorageRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedCustomPageRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedEdgeFunctionsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedFirewallFunctionInstanceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedFirewallRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedFirewallRuleEngineRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedNetworkListDetailRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedWAFRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedWAFRuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedWorkloadDeploymentRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPatchedWorkloadRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEProtocols": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEProtocolsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPurgeInput": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEPurgeInputRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGERegionEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseApplicationDeviceGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseApplicationFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseApplicationRequestPhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseApplicationResponsePhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncApplicationDeviceGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncApplicationFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncCacheSetting": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncConnectorPolymorphic": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncCustomPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteApplicationDeviceGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteApplicationFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteApplicationRequestPhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteApplicationResponsePhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteCacheSetting": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteConnectorPolymorphic": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteCustomPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteFirewall": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteFirewallFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteFirewallRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteFunctionsDoc": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteNetworkListDetail": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteWAF": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteWAFRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteWorkload": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncDeleteWorkloadDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncFirewall": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncFirewallFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncFirewallRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncFunctionsDoc": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncNetworkListDetail": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncPurgeInput": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncWAF": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncWAFRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncWorkload": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseAsyncWorkloadDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSetting": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestSerializerMetaclassModulesField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestSerializerMetaclassStrategyField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseBadRequestWorkloadDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseConnectorPolymorphic": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseCustomPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteApplicationFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteApplicationRequestPhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteApplicationResponsePhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteConnectorPolymorphic": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteCustomPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteFirewall": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteFirewallFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteFirewallRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteFunctionsDoc": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteNetworkListDetail": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteWAF": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseDeleteWAFRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseFirewall": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseFirewallFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseFirewallRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseFunctionsDoc": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseListCacheSetting": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseNetworkListDetail": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponsePurgeInput": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveApplication": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveApplicationDeviceGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveApplicationFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveCacheSetting": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveConnectorPolymorphic": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveCustomPage": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveFirewall": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveFirewallFunctionInstance": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveFirewallRuleEngine": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveFunctionsDoc": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveNetworkListDetail": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveWAF": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveWAFRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveWorkload": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseRetrieveWorkloadDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseWAF": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseWAFRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseWorkload": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEResponseWorkloadDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGERuleIdEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGERulesetsEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGERuntimeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESensitivityEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEServerRoleEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEStateCacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGEStateCacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGETLSWorkload": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGETLSWorkloadRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEThreatEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEThresholdsConfigField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEThresholdsConfigFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGETieredCacheModule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGETieredCacheModuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "EDGETopologyEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGETransportPolicyEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEType15cEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEType528Enum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEType689Enum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGETypeF11Enum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEVerificationEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAF": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFEngineSettingsAttributesField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFEngineSettingsAttributesFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFEngineSettingsField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFEngineSettingsFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFEngineSettingsFieldTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionGenericCondition": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionGenericConditionMatchEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionGenericConditionRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionPolymorphicCondition": {
        "discriminators": [
          {
            "property": "match",
            "mapping": {
              "any_http_header_name": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "any_http_header_value": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "any_query_string_name": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "any_query_string_value": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "any_url": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "body_form_field_name": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "body_form_field_value": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "file_extension": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "raw_body": "#/components/schemas/EDGEWAFExceptionGenericCondition",
              "specific_body_form_field_name": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnName",
              "specific_body_form_field_value": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValue",
              "specific_http_header_name": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnName",
              "specific_http_header_value": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValue",
              "specific_query_string_name": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnName",
              "specific_query_string_value": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValue"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEWAFExceptionGenericCondition"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnName"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValue"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionPolymorphicConditionRequest": {
        "discriminators": [
          {
            "property": "match",
            "mapping": {
              "any_http_header_name": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "any_http_header_value": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "any_query_string_name": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "any_query_string_value": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "any_url": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "body_form_field_name": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "body_form_field_value": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "file_extension": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "raw_body": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest",
              "specific_body_form_field_name": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnNameRequest",
              "specific_body_form_field_value": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValueRequest",
              "specific_http_header_name": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnNameRequest",
              "specific_http_header_value": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValueRequest",
              "specific_query_string_name": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnNameRequest",
              "specific_query_string_value": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValueRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/EDGEWAFExceptionGenericConditionRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnNameRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/EDGEWAFExceptionSpecificConditionOnValueRequest"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionSpecificConditionOnName": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionSpecificConditionOnValue": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFRule": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFRuleOperatorEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWAFRuleRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWorkload": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWorkloadDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWorkloadDeploymentRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGEWorkloadRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSAggregatedField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSAggregatedFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSAggregationTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSBaseQuery": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSBaseQueryRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSComparisonTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSDashboardRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSDataUnitEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSFolderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSLibraryReportRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSOrder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSOrderDirectionEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSOrderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSPaginatedResponseListDashboardList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSPaginatedResponseListFolderList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSPaginatedResponseListReportList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSPaginatedResponseListRowList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSPatchedDashboardRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSPatchedFolderRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSRecommendationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSReportRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncDeleteDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncDeleteFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncDeleteReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncDeleteRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncOrder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseAsyncRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseDeleteDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseDeleteFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseDeleteReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseDeleteRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseListDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseListFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseListReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseListRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseOrder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseRetrieveDashboard": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseRetrieveFolder": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseRetrieveReport": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseRetrieveRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSResponseRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSRow": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSRowRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSScopeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "METRICSTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLDatabaseRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLOpenAPISchema": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLPaginatedOpenAPISchemaList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseAsyncDeleteOpenAPISchema": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseAsyncOpenAPISchema": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseAsyncSQLResult": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseDeleteOpenAPISchema": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseOpenAPISchema": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseRetrieveOpenAPISchema": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLResponseSQLResult": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLSQLResult": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLSQLStatementsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "EDGESQLStatusEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSCredit": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSCreditRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSPaginatedPaymentHistoryList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSPaginatedResponsePaymentMethodList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSPatchedPartialUpdateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSPaymentHistory": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSPaymentMethod": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSPaymentMethodRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSResponseAsyncCredit": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSResponseAsyncDeletePaymentMethod": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSResponseAsyncPaymentMethod": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSResponseCredit": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSResponseDeletePaymentMethod": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "PAYMENTSResponsePaymentMethod": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSAccount": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "Brand": "#/components/schemas/ACCOUNTSBrand",
              "Organization": "#/components/schemas/ACCOUNTSOrganization",
              "Reseller": "#/components/schemas/ACCOUNTSReseller",
              "Workspace": "#/components/schemas/ACCOUNTSWorkspace"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSBrand"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSOrganization"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSReseller"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSWorkspace"
            },
            "description": "OneOf variant 4"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSAccountInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSAccountRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "Brand": "#/components/schemas/ACCOUNTSBrandRequest",
              "Organization": "#/components/schemas/ACCOUNTSOrganizationRequest",
              "Reseller": "#/components/schemas/ACCOUNTSResellerRequest",
              "Workspace": "#/components/schemas/ACCOUNTSWorkspaceRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSBrandRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSOrganizationRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSResellerRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSWorkspaceRequest"
            },
            "description": "OneOf variant 4"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSBrand": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSBrandRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSCreateAccountRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "Brand": "#/components/schemas/ACCOUNTSCreateBrandRequest",
              "Organization": "#/components/schemas/ACCOUNTSCreateOrganizationRequest",
              "Reseller": "#/components/schemas/ACCOUNTSCreateResellerRequest",
              "Workspace": "#/components/schemas/ACCOUNTSCreateWorkspaceRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSCreateBrandRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSCreateOrganizationRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSCreateResellerRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSCreateWorkspaceRequest"
            },
            "description": "OneOf variant 4"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSCreateBrandRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSCreateOrganizationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSCreateResellerRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSCreateWorkspaceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSCurrencyIsoCodeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSOrganization": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSOrganizationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSPaginatedResponseListAccountList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSPatchedAccountRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "Brand": "#/components/schemas/ACCOUNTSPatchedBrandRequest",
              "Organization": "#/components/schemas/ACCOUNTSPatchedOrganizationRequest",
              "Reseller": "#/components/schemas/ACCOUNTSPatchedResellerRequest",
              "Workspace": "#/components/schemas/ACCOUNTSPatchedWorkspaceRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSPatchedBrandRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSPatchedOrganizationRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSPatchedResellerRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSPatchedWorkspaceRequest"
            },
            "description": "OneOf variant 4"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSPatchedBrandRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSPatchedOrganizationRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSPatchedResellerRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSPatchedWorkspaceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSReasonEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSReseller": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResellerRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseAccount": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseAccountInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseAsyncAccount": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseAsyncAccountInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseListAccount": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "Brand": "#/components/schemas/ACCOUNTSBrand",
              "Organization": "#/components/schemas/ACCOUNTSOrganization",
              "Reseller": "#/components/schemas/ACCOUNTSReseller",
              "Workspace": "#/components/schemas/ACCOUNTSWorkspace"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSBrand"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSOrganization"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSReseller"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/ACCOUNTSWorkspace"
            },
            "description": "OneOf variant 4"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseRetrieveAccount": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSResponseRetrieveAccountInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSStatusEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSWorkspace": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ACCOUNTSWorkspaceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEBucket": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEBucketCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEBucketCreateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEBucketObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGECapabilitiesEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGECredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGECredentialCreateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEEdgeAccessEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEObjectResponseAsyncData": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEObjectResponseData": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEPaginatedBucketList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEPaginatedResponseListCredentialList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEPatchedBucketRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseAsyncBucketCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseAsyncCredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseAsyncDeleteBucketCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseAsyncDeleteBucketObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseAsyncDeleteCredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseBadRequestBucket": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseBadRequestCredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseBucketCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseBucketObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseCredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseDeleteBucketCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseDeleteBucketObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseListCredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseRetrieveBucket": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGEResponseRetrieveCredential": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGESuccessObjectOperation": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "STORAGESuccessObjectOperationAsync": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAAWSKinesisFirehoseEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAAWSKinesisFirehoseEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAAzureBlobStorageEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAAzureBlobStorageEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAAzureMonitorEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAAzureMonitorEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATABigQueryEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATABigQueryEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAContentTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATADataSourceEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATADataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATADataStreamRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATADatadogEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATADatadogEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAElasticsearchEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAElasticsearchEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAHttpPostEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAHttpPostEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputDataSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputDataSourceAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputDataSourceAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputDataSourceAttributesTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputDataSourceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputPolymorphic": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "raw_logs": "#/components/schemas/DATAInputPolymorphicInputDataSourceAttributes"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/DATAInputPolymorphicInputDataSourceAttributes"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputPolymorphicInputDataSourceAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputPolymorphicInputDataSourceAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputPolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "raw_logs": "#/components/schemas/DATAInputPolymorphicInputDataSourceAttributesRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/DATAInputPolymorphicInputDataSourceAttributesRequest"
            },
            "description": "OneOf variant 1"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAInputPolymorphicShared": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAKafkaEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAKafkaEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAOutput": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAOutputPolymorphic": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "standard": "#/components/schemas/DATAHttpPostEndpoint",
              "kafka": "#/components/schemas/DATAKafkaEndpoint",
              "s3": "#/components/schemas/DATAS3Endpoint",
              "big_query": "#/components/schemas/DATABigQueryEndpoint",
              "elasticsearch": "#/components/schemas/DATAElasticsearchEndpoint",
              "aws_kinesis_firehose": "#/components/schemas/DATAAWSKinesisFirehoseEndpoint",
              "datadog": "#/components/schemas/DATADatadogEndpoint",
              "qradar": "#/components/schemas/DATAQRadarEndpoint",
              "azure_monitor": "#/components/schemas/DATAAzureMonitorEndpoint",
              "azure_blob_storage": "#/components/schemas/DATAAzureBlobStorageEndpoint",
              "splunk": "#/components/schemas/DATASplunkEndpoint"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/DATAHttpPostEndpoint"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/DATAKafkaEndpoint"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/DATAS3Endpoint"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/DATABigQueryEndpoint"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/DATAElasticsearchEndpoint"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/DATAAWSKinesisFirehoseEndpoint"
            },
            "description": "OneOf variant 6"
          },
          {
            "variant_index": 6,
            "schema": {
              "reference": "#/components/schemas/DATADatadogEndpoint"
            },
            "description": "OneOf variant 7"
          },
          {
            "variant_index": 7,
            "schema": {
              "reference": "#/components/schemas/DATAQRadarEndpoint"
            },
            "description": "OneOf variant 8"
          },
          {
            "variant_index": 8,
            "schema": {
              "reference": "#/components/schemas/DATAAzureMonitorEndpoint"
            },
            "description": "OneOf variant 9"
          },
          {
            "variant_index": 9,
            "schema": {
              "reference": "#/components/schemas/DATAAzureBlobStorageEndpoint"
            },
            "description": "OneOf variant 10"
          },
          {
            "variant_index": 10,
            "schema": {
              "reference": "#/components/schemas/DATASplunkEndpoint"
            },
            "description": "OneOf variant 11"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAOutputPolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "standard": "#/components/schemas/DATAHttpPostEndpointRequest",
              "kafka": "#/components/schemas/DATAKafkaEndpointRequest",
              "s3": "#/components/schemas/DATAS3EndpointRequest",
              "big_query": "#/components/schemas/DATABigQueryEndpointRequest",
              "elasticsearch": "#/components/schemas/DATAElasticsearchEndpointRequest",
              "aws_kinesis_firehose": "#/components/schemas/DATAAWSKinesisFirehoseEndpointRequest",
              "datadog": "#/components/schemas/DATADatadogEndpointRequest",
              "qradar": "#/components/schemas/DATAQRadarEndpointRequest",
              "azure_monitor": "#/components/schemas/DATAAzureMonitorEndpointRequest",
              "azure_blob_storage": "#/components/schemas/DATAAzureBlobStorageEndpointRequest",
              "splunk": "#/components/schemas/DATASplunkEndpointRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/DATAHttpPostEndpointRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/DATAKafkaEndpointRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/DATAS3EndpointRequest"
            },
            "description": "OneOf variant 3"
          },
          {
            "variant_index": 3,
            "schema": {
              "reference": "#/components/schemas/DATABigQueryEndpointRequest"
            },
            "description": "OneOf variant 4"
          },
          {
            "variant_index": 4,
            "schema": {
              "reference": "#/components/schemas/DATAElasticsearchEndpointRequest"
            },
            "description": "OneOf variant 5"
          },
          {
            "variant_index": 5,
            "schema": {
              "reference": "#/components/schemas/DATAAWSKinesisFirehoseEndpointRequest"
            },
            "description": "OneOf variant 6"
          },
          {
            "variant_index": 6,
            "schema": {
              "reference": "#/components/schemas/DATADatadogEndpointRequest"
            },
            "description": "OneOf variant 7"
          },
          {
            "variant_index": 7,
            "schema": {
              "reference": "#/components/schemas/DATAQRadarEndpointRequest"
            },
            "description": "OneOf variant 8"
          },
          {
            "variant_index": 8,
            "schema": {
              "reference": "#/components/schemas/DATAAzureMonitorEndpointRequest"
            },
            "description": "OneOf variant 9"
          },
          {
            "variant_index": 9,
            "schema": {
              "reference": "#/components/schemas/DATAAzureBlobStorageEndpointRequest"
            },
            "description": "OneOf variant 10"
          },
          {
            "variant_index": 10,
            "schema": {
              "reference": "#/components/schemas/DATASplunkEndpointRequest"
            },
            "description": "OneOf variant 11"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAOutputRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAOutputTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAPaginatedResponseListDataSourceList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAPaginatedResponseListDataStreamList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAPaginatedResponseListTemplateList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAPatchedDataStreamRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAPatchedTemplateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAQRadarEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAQRadarEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseAsyncDataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseAsyncDeleteDataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseAsyncDeleteTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseAsyncTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseDataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseDeleteDataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseDeleteTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseListDataSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseListDataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseListTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseRetrieveDataStream": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseRetrieveTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAResponseTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAS3Endpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAS3EndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATASplunkEndpoint": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATASplunkEndpointRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATemplateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformFilterWorkloads": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformFilterWorkloadsAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformFilterWorkloadsAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformFilterWorkloadsAttributesTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformFilterWorkloadsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphic": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "sampling": "#/components/schemas/DATATransformPolymorphicTransformSamplingAttributes",
              "filter_workloads": "#/components/schemas/DATATransformPolymorphicTransformFilterWorkloadsAttributes",
              "render_template": "#/components/schemas/DATATransformPolymorphicTransformRenderTemplateAttributes"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/DATATransformPolymorphicTransformSamplingAttributes"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/DATATransformPolymorphicTransformFilterWorkloadsAttributes"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/DATATransformPolymorphicTransformRenderTemplateAttributes"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicRequest": {
        "discriminators": [
          {
            "property": "type",
            "mapping": {
              "sampling": "#/components/schemas/DATATransformPolymorphicTransformSamplingAttributesRequest",
              "filter_workloads": "#/components/schemas/DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest",
              "render_template": "#/components/schemas/DATATransformPolymorphicTransformRenderTemplateAttributesRequest"
            },
            "description": "Discriminator field determines schema variant"
          }
        ],
        "oneOf_patterns": [
          {
            "variant_index": 0,
            "schema": {
              "reference": "#/components/schemas/DATATransformPolymorphicTransformSamplingAttributesRequest"
            },
            "description": "OneOf variant 1"
          },
          {
            "variant_index": 1,
            "schema": {
              "reference": "#/components/schemas/DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest"
            },
            "description": "OneOf variant 2"
          },
          {
            "variant_index": 2,
            "schema": {
              "reference": "#/components/schemas/DATATransformPolymorphicTransformRenderTemplateAttributesRequest"
            },
            "description": "OneOf variant 3"
          }
        ],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicShared": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicTransformSamplingAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformPolymorphicTransformSamplingAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformRenderTemplate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformRenderTemplateAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformRenderTemplateAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformRenderTemplateAttributesTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformRenderTemplateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformSampling": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformSamplingAttributes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformSamplingAttributesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformSamplingAttributesTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATATransformSamplingRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DATAType4f5Enum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORBlankEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORContent": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORContentRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeGroups": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeGroupsById": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeGroupsByIdRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeGroupsRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeServiceBind": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodeServicesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORNodesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPaginatedNodeGroupsList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPaginatedResponseListNodeGroupsByIdList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPaginatedResponseListNodeServicesList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPaginatedResponseListNodesList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPaginatedResponseListServicesList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPaginatedServiceResourceList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPatchedNodesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORPatchedServicesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseBadRequestNodeGroupsById": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseBadRequestNodeServiceBind": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseBadRequestNodeServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseBadRequestNodes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseBadRequestServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseDeleteNodeServiceBind": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseDeleteNodes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseDeleteServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseListNodeGroupsById": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseListNodeServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseListNodes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseListServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseNodeGroupsById": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseNodeServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseNodes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseRetrieveNodeServiceBind": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseRetrieveNodes": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseRetrieveServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORResponseServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORServiceResource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORServiceResourceId": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORServiceResourceIdRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORServiceResourceRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORServices": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORServicesRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORStateEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORStatusEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "ORCHESTRATORTriggerEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSBuildContextField": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSBuildContextFieldRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSContinuousDeploymentRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSExecution": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSExecutionScript": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSExecutionScriptRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSExecutor": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSIntegration": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPaginatedResponseListContinuousDeploymentList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPaginatedResponseListExecutionList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPaginatedResponseListExecutionScriptList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPaginatedResponseListIntegrationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPaginatedResponseListPlatformList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPaginatedResponseListRepositoryList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPatchedContinuousDeploymentRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSPlatform": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseAsyncContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseAsyncDeleteContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseAsyncDeleteIntegration": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseAsyncExecution": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseAsyncExecutor": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseDeleteContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseDeleteIntegration": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseExecution": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseExecutor": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseListContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseListExecution": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseListExecutionScript": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseListIntegration": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseListPlatform": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseListRepository": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseRetrieveContinuousDeployment": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseRetrieveExecutionScript": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseRetrieveExecutor": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "VCSResponseRetrieveIntegration": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSAlgType": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSAlgTypeRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSDNSSEC": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "DNSDNSSECRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "DNSDelegationSigner": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSDelegationSignerRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSPaginatedRecordList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSPaginatedZoneList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSPatchedDNSSECRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "enabled",
            "type": "boolean_toggle",
            "description": "Boolean toggle for enabled"
          }
        ],
        "enum_switches": []
      },
      "DNSPatchedRecordRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSPatchedUpdateZoneRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSPolicyEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSRecord": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSRecordRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseAsyncDNSSEC": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseAsyncDeleteRecord": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseAsyncDeleteZone": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseAsyncRecord": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseAsyncZone": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseDNSSEC": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseDeleteRecord": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseDeleteZone": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseRecord": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseRetrieveDNSSEC": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseRetrieveRecord": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseRetrieveZone": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSResponseZone": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSStatusEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSUpdateZoneRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSZone": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "DNSZoneRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "BILLINGJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "BILLINGJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "BILLINGJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSAuthorityEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSCertificateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSCertificateRequestRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSCertificateRevocationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSCertificateRevocationListRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSCertificateSigningRequestRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSChallengeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSJSONAPIErrorObject": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSJSONAPIErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSJSONAPIErrorSource": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSKeyAlgorithmEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSNullEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSPaginatedCertificateList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSPaginatedCertificateRevocationListList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSPatchedCertificateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSPatchedCertificateRevocationListRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseAsyncCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseAsyncCertificateRevocationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseAsyncDeleteCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseAsyncDeleteCertificateRevocationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseBadRequestCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseCertificateRevocationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseDeleteCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseDeleteCertificateRevocationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseRetrieveCertificate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSResponseRetrieveCertificateRevocationList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSStatusEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "TLSTypeEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEPublisher": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEPublisherRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEResponseBadRequestPublisher": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEResponsePublisher": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEResponseRetrievePublisher": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "MARKETPLACEStateEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYDefaultErrorResponse": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYFavorite": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYFavoriteRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYGrant": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYGrantRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYGroup": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYGroupMembers": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYGroupMembersRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYGroupRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPaginatedResponseListFavoriteList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPaginatedResponseListGrantList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPaginatedResponseListGroupList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPaginatedResponseListServiceTokenList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPaginatedResponseListUserList": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPatchedGrantRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPatchedGroupRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPatchedServiceTokenUpdateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYPatchedUserRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "two_factor_enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for two_factor_enabled"
          }
        ],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestFavorite": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestGrant": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestGroup": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestGroupMembers": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestServiceToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestServiceTokenRenew": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestUser": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseBadRequestUserInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseDeleteFavorite": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseDeleteGrant": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseDeleteGroup": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseDeleteServiceToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseDeleteUser": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseFavorite": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseGrant": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseGroup": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseGroupMembers": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseListFavorite": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseListGrant": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseListGroup": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseListServiceToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseListUser": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "two_factor_enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for two_factor_enabled"
          }
        ],
        "enum_switches": []
      },
      "IDENTITYResponseRetrieveGrant": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseRetrieveGroup": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseRetrieveGroupMembers": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseRetrieveServiceToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseRetrieveUser": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseRetrieveUserInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseServiceToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseServiceTokenCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseServiceTokenRenew": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseUser": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYResponseUserInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYServiceToken": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYServiceTokenCreate": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYServiceTokenCreateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYServiceTokenRenew": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYServiceTokenRenewRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYServiceTokenUpdateRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYStateEnum": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYUser": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "two_factor_enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for two_factor_enabled"
          }
        ],
        "enum_switches": []
      },
      "IDENTITYUserInfo": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [],
        "enum_switches": []
      },
      "IDENTITYUserRequest": {
        "discriminators": [],
        "oneOf_patterns": [],
        "boolean_toggles": [
          {
            "field": "two_factor_enabled",
            "type": "boolean_toggle",
            "default": false,
            "description": "Boolean toggle for two_factor_enabled"
          }
        ],
        "enum_switches": []
      }
    },
    "businessRules": {
      "USERSDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHEffectEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHLockoutPolicy": {
        "validation_rules": [
          {
            "field": "max_attempts",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for max_attempts"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHLockoutPolicyRequest": {
        "validation_rules": [
          {
            "field": "max_attempts",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for max_attempts"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHLoginRequest": {
        "validation_rules": [
          {
            "field": "email",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for email"
          },
          {
            "field": "password",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for password"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHLoginResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHMFAToken": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPaginatedPolicyList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPaginatedTOTPDeviceListList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPatchedPolicyRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPolicy": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "AUTHPolicyRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPolicyRule": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPolicyRuleCondition": {
        "validation_rules": [
          {
            "field": "ip_address",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for ip_address"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPolicyRuleConditionRequest": {
        "validation_rules": [
          {
            "field": "ip_address",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for ip_address"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHPolicyRuleRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "resource",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for resource"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncDeletePolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncDeleteTOTPDeviceCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncLockoutPolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncLogin": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncPolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncSessionTimeoutPolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncTOTPDeviceCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncToken": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseAsyncTokenPair": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseBadRequestPolicy": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "AUTHResponseDeletePolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseDeleteTOTPDeviceCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseLockoutPolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseLogin": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponsePolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseRetrieveLockoutPolicy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseRetrievePolicy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseRetrieveSessionTimeoutPolicy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseSessionTimeoutPolicy": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseTOTPDeviceCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseToken": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHResponseTokenPair": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHSessionTimeoutPolicy": {
        "validation_rules": [
          {
            "field": "max_idle_time",
            "constraints": {
              "minimum": 1,
              "maximum": 1440
            },
            "type": "integer",
            "description": "Validation constraints for max_idle_time"
          },
          {
            "field": "max_session_time",
            "constraints": {
              "minimum": 5,
              "maximum": 21600
            },
            "type": "integer",
            "description": "Validation constraints for max_session_time"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHSessionTimeoutPolicyRequest": {
        "validation_rules": [
          {
            "field": "max_idle_time",
            "constraints": {
              "minimum": 1,
              "maximum": 1440
            },
            "type": "integer",
            "description": "Validation constraints for max_idle_time"
          },
          {
            "field": "max_session_time",
            "constraints": {
              "minimum": 5,
              "maximum": 21600
            },
            "type": "integer",
            "description": "Validation constraints for max_session_time"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHStateExecutedResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHStatePendingResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHTOTPDeviceCreate": {
        "validation_rules": [
          {
            "field": "url",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHTOTPDeviceList": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 64
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHTOTPVerificationRequest": {
        "validation_rules": [
          {
            "field": "code",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for code"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHToken": {
        "validation_rules": [
          {
            "field": "access_token",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for access_token"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHTokenPair": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHTokenRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "AUTHuser_login_method_response": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAWS4HMAC": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAWS4HMACAttributes": {
        "validation_rules": [
          {
            "field": "region",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for region"
          },
          {
            "field": "service",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for service"
          },
          {
            "field": "access_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for access_key"
          },
          {
            "field": "secret_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for secret_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAWS4HMACAttributesRequest": {
        "validation_rules": [
          {
            "field": "region",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for region"
          },
          {
            "field": "service",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for service"
          },
          {
            "field": "access_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for access_key"
          },
          {
            "field": "secret_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for secret_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAWS4HMACRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAWS4HMACTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAddress": {
        "validation_rules": [
          {
            "field": "address",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for address"
          },
          {
            "field": "http_port",
            "constraints": {
              "minimum": 1,
              "maximum": 65535
            },
            "type": "integer",
            "description": "Validation constraints for http_port"
          },
          {
            "field": "https_port",
            "constraints": {
              "minimum": 1,
              "maximum": 65535
            },
            "type": "integer",
            "description": "Validation constraints for https_port"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAddressLoadBalancerModule": {
        "validation_rules": [
          {
            "field": "weight",
            "constraints": {
              "minimum": 1,
              "maximum": 100
            },
            "type": "integer",
            "description": "Validation constraints for weight"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAddressLoadBalancerModuleRequest": {
        "validation_rules": [
          {
            "field": "weight",
            "constraints": {
              "minimum": 1,
              "maximum": 100
            },
            "type": "integer",
            "description": "Validation constraints for weight"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAddressModules": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAddressModulesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEAddressRequest": {
        "validation_rules": [
          {
            "field": "address",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for address"
          },
          {
            "field": "http_port",
            "constraints": {
              "minimum": 1,
              "maximum": 65535
            },
            "type": "integer",
            "description": "Validation constraints for http_port"
          },
          {
            "field": "https_port",
            "constraints": {
              "minimum": 1,
              "maximum": 65535
            },
            "type": "integer",
            "description": "Validation constraints for https_port"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplication": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEApplicationAcceleratorModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationAcceleratorModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationDeviceGroups": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "user_agent",
            "constraints": {
              "minLength": 1,
              "maxLength": 512,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for user_agent"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationDeviceGroupsRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "user_agent",
            "constraints": {
              "minLength": 1,
              "maxLength": 512,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for user_agent"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationFunctionInstance": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "function",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for function"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEApplicationFunctionInstanceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "function",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for function"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationModules": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationModulesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRequestPhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "order",
            "constraints": {
              "minimum": 0,
              "maximum": 199
            },
            "type": "integer",
            "description": "Validation constraints for order"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEApplicationRequestPhaseRuleEngineOrderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRequestPhaseRuleEngineRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationResponsePhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "order",
            "constraints": {
              "minimum": 0,
              "maximum": 199
            },
            "type": "integer",
            "description": "Validation constraints for order"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEApplicationResponsePhaseRuleEngineOrderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationResponsePhaseRuleEngineRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddHeaderTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddRequestCookie": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddResponseHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroups": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {
        "validation_rules": [
          {
            "field": "subject",
            "constraints": {
              "minLength": 4,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for subject"
          },
          {
            "field": "regex",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for regex"
          },
          {
            "field": "captured_array",
            "constraints": {
              "minLength": 1,
              "maxLength": 10,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for captured_array"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {
        "validation_rules": [
          {
            "field": "subject",
            "constraints": {
              "minLength": 4,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for subject"
          },
          {
            "field": "regex",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for regex"
          },
          {
            "field": "captured_array",
            "constraints": {
              "minLength": 1,
              "maxLength": 10,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for captured_array"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookie": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineNoArgs": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineNoArgsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineNoArgsTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviors": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsShared": {
        "validation_rules": [
          {
            "field": "type",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for type"
          }
        ],
        "business_constraints": [
          {
            "type": "dependency",
            "description": "Polymorphic serializer base class.\n\nNote that the discriminator field must exist at the same depth as the mapped\nserializer fields for the OpenAPI introspection. See\nhttps://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for\nmore information. As such, it's not possible to define something like:\n\n{\n    \"object_type\": \"foo\",\n    \"polymorphic_context\": {\n        <foo-specific fields>\n    }\n}\n\nwithout explicitly wrapping this in a parent serializer, i.e. -\n``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires\naccess to the ``object_type`` in the parent scope.",
            "severity": "medium"
          }
        ],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseNoArgs": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviors": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsShared": {
        "validation_rules": [
          {
            "field": "type",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for type"
          }
        ],
        "business_constraints": [
          {
            "type": "dependency",
            "description": "Polymorphic serializer base class.\n\nNote that the discriminator field must exist at the same depth as the mapped\nserializer fields for the OpenAPI introspection. See\nhttps://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for\nmore information. As such, it's not possible to define something like:\n\n{\n    \"object_type\": \"foo\",\n    \"polymorphic_context\": {\n        <foo-specific fields>\n    }\n}\n\nwithout explicitly wrapping this in a parent serializer, i.e. -\n``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires\naccess to the ``object_type`` in the parent scope.",
            "severity": "medium"
          }
        ],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseString": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseStringRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineResponseStringTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRewriteRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRewriteRequestRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunction": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCachePolicy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetConnector": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetConnectorRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetConnectorTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCookie": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCookieRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetCookieTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetOrigin": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetOriginRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineSetOriginTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineString": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineStringAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineStringAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 2000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineStringRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEApplicationRuleEngineStringTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEBehaviorA69Enum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEBlankEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEBrowserCacheModule": {
        "validation_rules": [
          {
            "field": "max_age",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for max_age"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEBrowserCacheModuleBehaviorEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEBrowserCacheModuleRequest": {
        "validation_rules": [
          {
            "field": "max_age",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for max_age"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSetting": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsApplicationAcceleratorModule": {
        "validation_rules": [
          {
            "field": "cache_vary_by_method",
            "constraints": {
              "maxItems": 2
            },
            "type": "array",
            "description": "Validation constraints for cache_vary_by_method"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
        "validation_rules": [
          {
            "field": "cache_vary_by_method",
            "constraints": {
              "maxItems": 2
            },
            "type": "array",
            "description": "Validation constraints for cache_vary_by_method"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsEdgeCacheModule": {
        "validation_rules": [
          {
            "field": "max_age",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for max_age"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsEdgeCacheModuleBehaviorEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsEdgeCacheModuleRequest": {
        "validation_rules": [
          {
            "field": "max_age",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for max_age"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsModules": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsModulesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsTieredCacheModule": {
        "validation_rules": [
          {
            "field": "max_age",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for max_age"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsTieredCacheModuleBehaviorEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheSettingsTieredCacheModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByCookiesModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByCookiesModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByDevicesModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByDevicesModuleBehaviorEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByDevicesModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByMethodEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByQuerystringModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECacheVaryByQuerystringModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECiphersEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECloneApplicationRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECloneFirewallRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECloneWAFRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECodeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConditionalEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorHTTP": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEConnectorHTTPAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorHTTPAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorHTTPRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorLiveIngest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEConnectorLiveIngestAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorLiveIngestAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorLiveIngestRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorPolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorPolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorStorage": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEConnectorStorageAttributes": {
        "validation_rules": [
          {
            "field": "bucket",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for bucket"
          },
          {
            "field": "prefix",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for prefix"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorStorageAttributesRequest": {
        "validation_rules": [
          {
            "field": "bucket",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for bucket"
          },
          {
            "field": "prefix",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for prefix"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEConnectorStorageRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGECustomPage": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGECustomPageRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDefaultDeploymentStrategy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDefaultDeploymentStrategyAttrs": {
        "validation_rules": [
          {
            "field": "application",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for application"
          },
          {
            "field": "custom_page",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for custom_page"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDefaultDeploymentStrategyAttrsRequest": {
        "validation_rules": [
          {
            "field": "application",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for application"
          },
          {
            "field": "custom_page",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for custom_page"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDefaultDeploymentStrategyRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDeploymentStrategy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategy": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategyRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDeploymentStrategyRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDeploymentStrategyShared": {
        "validation_rules": [
          {
            "field": "type",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for type"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEDnsResolutionEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeApplicationCriterionField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeApplicationCriterionFieldRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeApplicationCriterionFieldVariableEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgument": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgumentRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFirewallCriterionField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFirewallCriterionFieldRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFirewallCriterionFieldVariableEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgument": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgumentRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFunctionModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFunctionModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEdgeFunctions": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 1,
              "maxLength": 52428800,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for code"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEEdgeFunctionsRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 1,
              "maxLength": 52428800,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for code"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEEngineVersionEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEExecutionEnvironmentEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewall": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEFirewallBehaviorNoArguments": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorNoArgumentsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorNoArgumentsTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorRunFunction": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorRunFunctionRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetCustomResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributes": {
        "validation_rules": [
          {
            "field": "status_code",
            "constraints": {
              "minimum": 200,
              "maximum": 499
            },
            "type": "integer",
            "description": "Validation constraints for status_code"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "content_body",
            "constraints": {
              "minLength": 0,
              "maxLength": 500,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_body"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {
        "validation_rules": [
          {
            "field": "status_code",
            "constraints": {
              "minimum": 200,
              "maximum": 499
            },
            "type": "integer",
            "description": "Validation constraints for status_code"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "content_body",
            "constraints": {
              "minLength": 0,
              "maxLength": 500,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_body"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetCustomResponseRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetRateLimit": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributes": {
        "validation_rules": [
          {
            "field": "average_rate_limit",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for average_rate_limit"
          },
          {
            "field": "maximum_burst_size",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for maximum_burst_size"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
        "validation_rules": [
          {
            "field": "average_rate_limit",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for average_rate_limit"
          },
          {
            "field": "maximum_burst_size",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for maximum_burst_size"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetRateLimitRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetRateLimitTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetWaf": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetWafAttributes": {
        "validation_rules": [
          {
            "field": "waf_id",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for waf_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetWafAttributesRequest": {
        "validation_rules": [
          {
            "field": "waf_id",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for waf_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetWafRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorSetWafTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorTagEvent": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorTagEventAttributes": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 128,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorTagEventAttributesRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 128,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorTagEventRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorTagEventTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviors": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArguments": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunction": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWaf": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEvent": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallBehaviorsShared": {
        "validation_rules": [
          {
            "field": "type",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for type"
          }
        ],
        "business_constraints": [
          {
            "type": "dependency",
            "description": "Polymorphic serializer base class.\n\nNote that the discriminator field must exist at the same depth as the mapped\nserializer fields for the OpenAPI introspection. See\nhttps://swagger.io/docs/specification/data-models/inheritance-and-polymorphism/ for\nmore information. As such, it's not possible to define something like:\n\n{\n    \"object_type\": \"foo\",\n    \"polymorphic_context\": {\n        <foo-specific fields>\n    }\n}\n\nwithout explicitly wrapping this in a parent serializer, i.e. -\n``polymorphic_context`` can not be a PolymorphicSerializer itself, as it requires\naccess to the ``object_type`` in the parent scope.",
            "severity": "medium"
          }
        ],
        "workflow_rules": []
      },
      "EDGEFirewallFunctionInstance": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "function",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for function"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEFirewallFunctionInstanceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "function",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for function"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallModules": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallModulesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallRuleEngine": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "order",
            "constraints": {
              "minimum": 0,
              "maximum": 199
            },
            "type": "integer",
            "description": "Validation constraints for order"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEFirewallRuleEngineOrderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEFirewallRuleEngineRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHMAC": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHMACPolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHMACPolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHMACRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHTTPConnectionOptions": {
        "validation_rules": [
          {
            "field": "host",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for host"
          },
          {
            "field": "path_prefix",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for path_prefix"
          },
          {
            "field": "real_ip_header",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for real_ip_header"
          },
          {
            "field": "real_port_header",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for real_port_header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHTTPConnectionOptionsRequest": {
        "validation_rules": [
          {
            "field": "host",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for host"
          },
          {
            "field": "path_prefix",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for path_prefix"
          },
          {
            "field": "real_ip_header",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for real_ip_header"
          },
          {
            "field": "real_port_header",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for real_port_header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHTTPModules": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHTTPModulesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHttpProtocol": {
        "validation_rules": [
          {
            "field": "versions",
            "constraints": {
              "maxItems": 3
            },
            "type": "array",
            "description": "Validation constraints for versions"
          },
          {
            "field": "http_ports",
            "constraints": {
              "minItems": 1,
              "maxItems": 4
            },
            "type": "array",
            "description": "Validation constraints for http_ports"
          },
          {
            "field": "https_ports",
            "constraints": {
              "minItems": 1,
              "maxItems": 12
            },
            "type": "array",
            "description": "Validation constraints for https_ports"
          },
          {
            "field": "quic_ports",
            "constraints": {
              "maxItems": 12
            },
            "type": "array",
            "description": "Validation constraints for quic_ports"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHttpProtocolRequest": {
        "validation_rules": [
          {
            "field": "versions",
            "constraints": {
              "maxItems": 3
            },
            "type": "array",
            "description": "Validation constraints for versions"
          },
          {
            "field": "http_ports",
            "constraints": {
              "minItems": 1,
              "maxItems": 4
            },
            "type": "array",
            "description": "Validation constraints for http_ports"
          },
          {
            "field": "https_ports",
            "constraints": {
              "minItems": 1,
              "maxItems": 12
            },
            "type": "array",
            "description": "Validation constraints for https_ports"
          },
          {
            "field": "quic_ports",
            "constraints": {
              "maxItems": 12
            },
            "type": "array",
            "description": "Validation constraints for quic_ports"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEHttpVersionPolicyEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEImageProcessorModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEImageProcessorModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEInfrastructureEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELargeFileCacheModule": {
        "validation_rules": [
          {
            "field": "offset",
            "constraints": {
              "minimum": 1024,
              "maximum": 1024
            },
            "type": "integer",
            "description": "Validation constraints for offset"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELargeFileCacheModuleRequest": {
        "validation_rules": [
          {
            "field": "offset",
            "constraints": {
              "minimum": 1024,
              "maximum": 1024
            },
            "type": "integer",
            "description": "Validation constraints for offset"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELayerEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELimitByEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELoadBalancerModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELoadBalancerModuleConfig": {
        "validation_rules": [
          {
            "field": "max_retries",
            "constraints": {
              "minimum": 0,
              "maximum": 20
            },
            "type": "integer",
            "description": "Validation constraints for max_retries"
          },
          {
            "field": "connection_timeout",
            "constraints": {
              "minimum": 1,
              "maximum": 300
            },
            "type": "integer",
            "description": "Validation constraints for connection_timeout"
          },
          {
            "field": "read_write_timeout",
            "constraints": {
              "minimum": 1,
              "maximum": 600
            },
            "type": "integer",
            "description": "Validation constraints for read_write_timeout"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELoadBalancerModuleConfigRequest": {
        "validation_rules": [
          {
            "field": "max_retries",
            "constraints": {
              "minimum": 0,
              "maximum": 20
            },
            "type": "integer",
            "description": "Validation constraints for max_retries"
          },
          {
            "field": "connection_timeout",
            "constraints": {
              "minimum": 1,
              "maximum": 300
            },
            "type": "integer",
            "description": "Validation constraints for connection_timeout"
          },
          {
            "field": "read_write_timeout",
            "constraints": {
              "minimum": 1,
              "maximum": 600
            },
            "type": "integer",
            "description": "Validation constraints for read_write_timeout"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGELoadBalancerModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEMTLS": {
        "validation_rules": [
          {
            "field": "certificate",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "crl",
            "constraints": {
              "maxItems": 100
            },
            "type": "array",
            "description": "Validation constraints for crl"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEMTLSRequest": {
        "validation_rules": [
          {
            "field": "certificate",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "crl",
            "constraints": {
              "maxItems": 100
            },
            "type": "array",
            "description": "Validation constraints for crl"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEMethodEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEMinimumVersionEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEModeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGENetworkList": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGENetworkListDetail": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "items",
            "constraints": {
              "minItems": 1,
              "maxItems": 20000
            },
            "type": "array",
            "description": "Validation constraints for items"
          },
          {
            "field": "last_editor",
            "constraints": {
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGENetworkListDetailRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "items",
            "constraints": {
              "minItems": 1,
              "maxItems": 20000
            },
            "type": "array",
            "description": "Validation constraints for items"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGENullEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOperator565Enum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOriginIPACL": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOriginIPACLRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOriginShieldConfig": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOriginShieldConfigRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOriginShieldModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEOriginShieldModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPage": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPageConnector": {
        "validation_rules": [
          {
            "field": "type",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for type"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPageConnectorAttributes": {
        "validation_rules": [
          {
            "field": "ttl",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for ttl"
          },
          {
            "field": "uri",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^\\/[\\/a-zA-Z0-9\\-_\\.\\~@:]*$"
            },
            "type": "string",
            "description": "Validation constraints for uri"
          },
          {
            "field": "custom_status_code",
            "constraints": {
              "minimum": 100,
              "maximum": 599
            },
            "type": "integer",
            "description": "Validation constraints for custom_status_code"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPageConnectorAttributesRequest": {
        "validation_rules": [
          {
            "field": "ttl",
            "constraints": {
              "minimum": 0,
              "maximum": 31536000
            },
            "type": "integer",
            "description": "Validation constraints for ttl"
          },
          {
            "field": "uri",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^\\/[\\/a-zA-Z0-9\\-_\\.\\~@:]*$"
            },
            "type": "string",
            "description": "Validation constraints for uri"
          },
          {
            "field": "custom_status_code",
            "constraints": {
              "minimum": 100,
              "maximum": 599
            },
            "type": "integer",
            "description": "Validation constraints for custom_status_code"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPageConnectorRequest": {
        "validation_rules": [
          {
            "field": "type",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for type"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPagePolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPagePolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPageRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedApplicationDeviceGroupsList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedApplicationFunctionInstanceList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedApplicationList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedApplicationRequestPhaseRuleEngineList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedApplicationResponsePhaseRuleEngineList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedConnectorPolymorphicList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedCustomPageList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedEdgeFunctionsList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedFirewallFunctionInstanceList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedFirewallList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedFirewallRuleEngineList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedNetworkListList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedResponseListCacheSettingList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedWAFList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedWAFRuleList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedWorkloadDeploymentList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPaginatedWorkloadList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedApplicationDeviceGroupsRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "user_agent",
            "constraints": {
              "minLength": 1,
              "maxLength": 512,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for user_agent"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedApplicationFunctionInstanceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "function",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for function"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedApplicationRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedApplicationRequestPhaseRuleEngineRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedApplicationResponsePhaseRuleEngineRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedCacheSettingRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedConnectorHTTPRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedConnectorLiveIngestRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedConnectorPolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedConnectorStorageRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedCustomPageRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedEdgeFunctionsRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 1,
              "maxLength": 52428800,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for code"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedFirewallFunctionInstanceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "function",
            "constraints": {
              "minimum": 1,
              "maximum": 9223372036854776000
            },
            "type": "integer",
            "description": "Validation constraints for function"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedFirewallRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedFirewallRuleEngineRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "criteria",
            "constraints": {
              "minItems": 1,
              "maxItems": 5
            },
            "type": "array",
            "description": "Validation constraints for criteria"
          },
          {
            "field": "behaviors",
            "constraints": {
              "minItems": 1,
              "maxItems": 10
            },
            "type": "array",
            "description": "Validation constraints for behaviors"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 1000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedNetworkListDetailRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "items",
            "constraints": {
              "minItems": 1,
              "maxItems": 20000
            },
            "type": "array",
            "description": "Validation constraints for items"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedWAFRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedWAFRuleRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "path",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": "^[^|]*$"
            },
            "type": "string",
            "description": "Validation constraints for path"
          },
          {
            "field": "conditions",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for conditions"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedWorkloadDeploymentRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 254,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPatchedWorkloadRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEProtocols": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEProtocolsRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPurgeInput": {
        "validation_rules": [
          {
            "field": "items",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for items"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEPurgeInputRequest": {
        "validation_rules": [
          {
            "field": "items",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for items"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGERegionEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseApplication": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseApplicationDeviceGroups": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseApplicationFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseApplicationRequestPhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseApplicationResponsePhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncApplication": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncApplicationDeviceGroups": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncApplicationFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncCacheSetting": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncConnectorPolymorphic": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncCustomPage": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteApplication": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteApplicationDeviceGroups": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteApplicationFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteApplicationRequestPhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteApplicationResponsePhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteCacheSetting": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteConnectorPolymorphic": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteCustomPage": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteFirewall": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteFirewallFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteFirewallRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteFunctionsDoc": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteNetworkListDetail": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteWAF": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteWAFRule": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteWorkload": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncDeleteWorkloadDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncFirewall": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncFirewallFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncFirewallRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncFunctionsDoc": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncNetworkListDetail": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncPurgeInput": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncWAF": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncWAFRule": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncWorkload": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseAsyncWorkloadDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestApplication": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEResponseBadRequestCacheSetting": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestSerializerMetaclassModulesField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestSerializerMetaclassStrategyField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseBadRequestWorkloadDeployment": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEResponseConnectorPolymorphic": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseCustomPage": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteApplication": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteApplicationFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteApplicationRequestPhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteApplicationResponsePhaseRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteConnectorPolymorphic": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteCustomPage": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteFirewall": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteFirewallFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteFirewallRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteFunctionsDoc": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteNetworkListDetail": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteWAF": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseDeleteWAFRule": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseFirewall": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseFirewallFunctionInstance": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseFirewallRuleEngine": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseFunctionsDoc": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseListCacheSetting": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^[a-zA-Z0-9 \\-\\.\\'\\,|]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseNetworkListDetail": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponsePurgeInput": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveApplication": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveApplicationDeviceGroups": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveApplicationFunctionInstance": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveCacheSetting": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveConnectorPolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveCustomPage": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveFirewall": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveFirewallFunctionInstance": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveFirewallRuleEngine": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveFunctionsDoc": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveNetworkListDetail": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveWAF": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveWAFRule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveWorkload": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseRetrieveWorkloadDeployment": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseWAF": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseWAFRule": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseWorkload": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEResponseWorkloadDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGERuleIdEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGERulesetsEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGERuntimeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESensitivityEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEServerRoleEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEStateCacheModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEStateCacheModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETLSWorkload": {
        "validation_rules": [
          {
            "field": "certificate",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for certificate"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETLSWorkloadRequest": {
        "validation_rules": [
          {
            "field": "certificate",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for certificate"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEThreatEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEThresholdsConfigField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEThresholdsConfigFieldRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETieredCacheModule": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETieredCacheModuleRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETopologyEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETransportPolicyEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEType15cEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEType528Enum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEType689Enum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGETypeF11Enum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEVerificationEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAF": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEWAFEngineSettingsAttributesField": {
        "validation_rules": [
          {
            "field": "thresholds",
            "constraints": {
              "maxItems": 8
            },
            "type": "array",
            "description": "Validation constraints for thresholds"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFEngineSettingsAttributesFieldRequest": {
        "validation_rules": [
          {
            "field": "thresholds",
            "constraints": {
              "maxItems": 8
            },
            "type": "array",
            "description": "Validation constraints for thresholds"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFEngineSettingsField": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFEngineSettingsFieldRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFEngineSettingsFieldTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionGenericCondition": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionGenericConditionMatchEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionGenericConditionRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionPolymorphicCondition": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionPolymorphicConditionRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionSpecificConditionOnName": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "[a-zA-Z0-9<>?()]+"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "[a-zA-Z0-9<>?()]+"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionSpecificConditionOnValue": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "[a-zA-Z0-9<>?()]+"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueRequest": {
        "validation_rules": [
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "[a-zA-Z0-9<>?()]+"
            },
            "type": "string",
            "description": "Validation constraints for value"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFRule": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "path",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": "^[^|]*$"
            },
            "type": "string",
            "description": "Validation constraints for path"
          },
          {
            "field": "conditions",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for conditions"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEWAFRuleOperatorEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWAFRuleRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "path",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": "^[^|]*$"
            },
            "type": "string",
            "description": "Validation constraints for path"
          },
          {
            "field": "conditions",
            "constraints": {
              "minItems": 1
            },
            "type": "array",
            "description": "Validation constraints for conditions"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWorkload": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "workload_domain",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for workload_domain"
          },
          {
            "field": "product_version",
            "constraints": {
              "pattern": "^(custom|\\d+\\.\\d+)$"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEWorkloadDeployment": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 254,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGEWorkloadDeploymentRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 254,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGEWorkloadRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSAggregatedField": {
        "validation_rules": [
          {
            "field": "aggregation",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for aggregation"
          },
          {
            "field": "variable",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for variable"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSAggregatedFieldRequest": {
        "validation_rules": [
          {
            "field": "aggregation",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for aggregation"
          },
          {
            "field": "variable",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for variable"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSAggregationTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSBaseQuery": {
        "validation_rules": [
          {
            "field": "dataset",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for dataset"
          },
          {
            "field": "limit",
            "constraints": {
              "minimum": 0,
              "maximum": 10000
            },
            "type": "integer",
            "description": "Validation constraints for limit"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSBaseQueryRequest": {
        "validation_rules": [
          {
            "field": "dataset",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for dataset"
          },
          {
            "field": "limit",
            "constraints": {
              "minimum": 0,
              "maximum": 10000
            },
            "type": "integer",
            "description": "Validation constraints for limit"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSComparisonTypeEnum": {
        "validation_rules": [],
        "business_constraints": [
          {
            "type": "dependency",
            "description": "* `inverse` - The lower the value, the better the result or performance.\n* `neutral` - There is no general rule to say whether a value is good or bad, as it depends on the context.\n* `regular` - The higher the value, the better the result or performance.",
            "severity": "medium"
          }
        ],
        "workflow_rules": []
      },
      "METRICSDashboard": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSDashboardRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSDataUnitEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSFolder": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSFolderRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSLibraryReportRequest": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "x_axis",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for x_axis"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "help_center_path",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for help_center_path"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSOrder": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSOrderDirectionEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSOrderRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSPaginatedResponseListDashboardList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSPaginatedResponseListFolderList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSPaginatedResponseListReportList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSPaginatedResponseListRowList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSPatchedDashboardRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSPatchedFolderRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSRecommendationRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSReport": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "x_axis",
            "constraints": {
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for x_axis"
          },
          {
            "field": "name",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "help_center_path",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for help_center_path"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSReportRequest": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "x_axis",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for x_axis"
          },
          {
            "field": "columns",
            "constraints": {
              "maximum": 12
            },
            "type": "integer",
            "description": "Validation constraints for columns"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "help_center_path",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for help_center_path"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncDashboard": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncDeleteDashboard": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncDeleteFolder": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncDeleteReport": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncDeleteRow": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncFolder": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncOrder": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncReport": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseAsyncRow": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseDashboard": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseDeleteDashboard": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseDeleteFolder": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseDeleteReport": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseDeleteRow": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseFolder": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseListDashboard": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseListFolder": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseListReport": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "x_axis",
            "constraints": {
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for x_axis"
          },
          {
            "field": "name",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "help_center_path",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for help_center_path"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseListRow": {
        "validation_rules": [
          {
            "field": "title",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for title"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseOrder": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseReport": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseRetrieveDashboard": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseRetrieveFolder": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseRetrieveReport": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseRetrieveRow": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSResponseRow": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSRow": {
        "validation_rules": [
          {
            "field": "title",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for title"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSRowRequest": {
        "validation_rules": [
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for title"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSScopeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "METRICSTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLDatabaseRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 6,
              "maxLength": 50,
              "pattern": "^[A-Za-z0-9-]{6,50}$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLOpenAPISchema": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 6,
              "maxLength": 50,
              "pattern": "^[A-Za-z0-9-]{6,50}$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "EDGESQLPaginatedOpenAPISchemaList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseAsyncDeleteOpenAPISchema": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseAsyncOpenAPISchema": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseAsyncSQLResult": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseDeleteOpenAPISchema": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseOpenAPISchema": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseRetrieveOpenAPISchema": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLResponseSQLResult": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLSQLResult": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLSQLStatementsRequest": {
        "validation_rules": [
          {
            "field": "statements",
            "constraints": {
              "maxItems": 1000
            },
            "type": "array",
            "description": "Validation constraints for statements"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "EDGESQLStatusEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSCredit": {
        "validation_rules": [
          {
            "field": "amount",
            "constraints": {
              "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$"
            },
            "type": "string",
            "description": "Validation constraints for amount"
          },
          {
            "field": "client_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for client_id"
          },
          {
            "field": "currency",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for currency"
          },
          {
            "field": "entry_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for entry_type"
          },
          {
            "field": "expiration_date",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for expiration_date"
          },
          {
            "field": "created",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for created"
          },
          {
            "field": "customer_stripe_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for customer_stripe_id"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "PAYMENTSCreditRequest": {
        "validation_rules": [
          {
            "field": "amount",
            "constraints": {
              "pattern": "^-?\\d{0,6}(?:\\.\\d{0,2})?$"
            },
            "type": "string",
            "description": "Validation constraints for amount"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSPaginatedPaymentHistoryList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSPaginatedResponsePaymentMethodList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSPatchedPartialUpdateRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSPaymentHistory": {
        "validation_rules": [
          {
            "field": "amount_with_currency",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for amount_with_currency"
          },
          {
            "field": "invoice_number",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for invoice_number"
          },
          {
            "field": "invoice_url",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^/account/\\d+/invoice\\?billing_month=\\d{4}-\\d{2}$"
            },
            "type": "string",
            "description": "Validation constraints for invoice_url"
          },
          {
            "field": "status",
            "constraints": {
              "minLength": 1,
              "maxLength": 30,
              "pattern": "^[\\w\\s]*$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "card_brand",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[\\w\\s]*$"
            },
            "type": "string",
            "description": "Validation constraints for card_brand"
          },
          {
            "field": "payment_method_details",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for payment_method_details"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSPaymentMethod": {
        "validation_rules": [
          {
            "field": "card_holder",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z ]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_holder"
          },
          {
            "field": "card_brand",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z ]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_brand"
          },
          {
            "field": "card_expiration_month",
            "constraints": {
              "minimum": 1,
              "maximum": 12
            },
            "type": "integer",
            "description": "Validation constraints for card_expiration_month"
          },
          {
            "field": "card_expiration_year",
            "constraints": {
              "minimum": 2022,
              "maximum": 2099
            },
            "type": "integer",
            "description": "Validation constraints for card_expiration_year"
          },
          {
            "field": "card_last_4_digits",
            "constraints": {
              "minLength": 4,
              "maxLength": 4,
              "pattern": "^\\d{4}$"
            },
            "type": "string",
            "description": "Validation constraints for card_last_4_digits"
          },
          {
            "field": "card_address_zip",
            "constraints": {
              "minLength": 1,
              "maxLength": 20,
              "pattern": "^[\\w\\s-]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_address_zip"
          },
          {
            "field": "card_country",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[a-zA-Z ]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_country"
          },
          {
            "field": "card_address_line1",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for card_address_line1"
          },
          {
            "field": "card_address_line2",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for card_address_line2"
          },
          {
            "field": "card_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for card_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSPaymentMethodRequest": {
        "validation_rules": [
          {
            "field": "card_holder",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^[a-zA-Z ]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_holder"
          },
          {
            "field": "card_brand",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": "^[a-zA-Z ]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_brand"
          },
          {
            "field": "card_expiration_month",
            "constraints": {
              "minimum": 1,
              "maximum": 12
            },
            "type": "integer",
            "description": "Validation constraints for card_expiration_month"
          },
          {
            "field": "card_expiration_year",
            "constraints": {
              "minimum": 2022,
              "maximum": 2099
            },
            "type": "integer",
            "description": "Validation constraints for card_expiration_year"
          },
          {
            "field": "card_last_4_digits",
            "constraints": {
              "minLength": 4,
              "maxLength": 4,
              "pattern": "^\\d{4}$"
            },
            "type": "string",
            "description": "Validation constraints for card_last_4_digits"
          },
          {
            "field": "card_address_zip",
            "constraints": {
              "minLength": 1,
              "maxLength": 20,
              "pattern": "^[\\w\\s-]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_address_zip"
          },
          {
            "field": "card_country",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[a-zA-Z ]+$"
            },
            "type": "string",
            "description": "Validation constraints for card_country"
          },
          {
            "field": "card_address_line1",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for card_address_line1"
          },
          {
            "field": "card_address_line2",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for card_address_line2"
          },
          {
            "field": "stripe_token",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for stripe_token"
          },
          {
            "field": "card_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for card_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSResponseAsyncCredit": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSResponseAsyncDeletePaymentMethod": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSResponseAsyncPaymentMethod": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSResponseCredit": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSResponseDeletePaymentMethod": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "PAYMENTSResponsePaymentMethod": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSAccount": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSAccountInfo": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSAccountRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSBrand": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified",
              "created"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ACCOUNTSBrandRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSCreateAccountRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSCreateBrandRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSCreateOrganizationRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSCreateResellerRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "terms_of_service_url",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for terms_of_service_url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSCreateWorkspaceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSCurrencyIsoCodeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSOrganization": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified",
              "created"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ACCOUNTSOrganizationRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSPaginatedResponseListAccountList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSPatchedAccountRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSPatchedBrandRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSPatchedOrganizationRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSPatchedResellerRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "terms_of_service_url",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for terms_of_service_url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSPatchedWorkspaceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSReasonEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSReseller": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "terms_of_service_url",
            "constraints": {
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for terms_of_service_url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified",
              "created"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ACCOUNTSResellerRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "terms_of_service_url",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for terms_of_service_url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseAccount": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseAccountInfo": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseAsyncAccount": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseAsyncAccountInfo": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseListAccount": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseRetrieveAccount": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSResponseRetrieveAccountInfo": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSStatusEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ACCOUNTSWorkspace": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "workspace_id",
            "constraints": {
              "pattern": "^[0-9]{4}[A-Z]$"
            },
            "type": "string",
            "description": "Validation constraints for workspace_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified",
              "created"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ACCOUNTSWorkspaceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEBucket": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 6,
              "maxLength": 63
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGEBucketCreate": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 6,
              "maxLength": 63,
              "pattern": ".{6,63}"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGEBucketCreateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 6,
              "maxLength": 63,
              "pattern": ".{6,63}"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEBucketObject": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGECapabilitiesEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGECredential": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[a-zA-Z0-9\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "bucket",
            "constraints": {
              "minLength": 6,
              "maxLength": 63,
              "pattern": ".{6,63}"
            },
            "type": "string",
            "description": "Validation constraints for bucket"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGECredentialCreateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[a-zA-Z0-9\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "bucket",
            "constraints": {
              "minLength": 6,
              "maxLength": 63,
              "pattern": ".{6,63}"
            },
            "type": "string",
            "description": "Validation constraints for bucket"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEEdgeAccessEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEObjectResponseAsyncData": {
        "validation_rules": [
          {
            "field": "object_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 1024,
              "pattern": "^[0-9a-zA-Z!\\\"\\~\\-\\_\\.\\*\\'\\(\\)\\&\\$\\@\\=\\;\\/\\:\\+\\,\\\\\\{\\}\\^\\`\\[\\]\\>\\<\\|\\ \\%\\u00c0\\u00c1\\u00c2\\u00c3\\u00c4\\u00c7\\u00c8\\u00c9\\u00ca\\u00cb\\u00cc\\u00cd\\u00ce\\u00cf\\u00d1\\u00d2\\u00d3\\u00d4\\u00d5\\u00d6\\u00d9\\u00da\\u00db\\u00dc\\u00dd\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e7\\u00e8\\u00e9\\u00ea\\u00ec\\u00ed\\u00ee\\u00f1\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u00f9\\u00fa\\u00fb\\u00fc\\u00fd\\u00eb\\u00ef]+$"
            },
            "type": "string",
            "description": "Validation constraints for object_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEObjectResponseData": {
        "validation_rules": [
          {
            "field": "object_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 1024,
              "pattern": "^[0-9a-zA-Z!\\\"\\~\\-\\_\\.\\*\\'\\(\\)\\&\\$\\@\\=\\;\\/\\:\\+\\,\\\\\\{\\}\\^\\`\\[\\]\\>\\<\\|\\ \\%\\u00c0\\u00c1\\u00c2\\u00c3\\u00c4\\u00c7\\u00c8\\u00c9\\u00ca\\u00cb\\u00cc\\u00cd\\u00ce\\u00cf\\u00d1\\u00d2\\u00d3\\u00d4\\u00d5\\u00d6\\u00d9\\u00da\\u00db\\u00dc\\u00dd\\u00e0\\u00e1\\u00e2\\u00e3\\u00e4\\u00e7\\u00e8\\u00e9\\u00ea\\u00ec\\u00ed\\u00ee\\u00f1\\u00f2\\u00f3\\u00f4\\u00f5\\u00f6\\u00f9\\u00fa\\u00fb\\u00fc\\u00fd\\u00eb\\u00ef]+$"
            },
            "type": "string",
            "description": "Validation constraints for object_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEPaginatedBucketList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEPaginatedResponseListCredentialList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEPatchedBucketRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseAsyncBucketCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseAsyncCredential": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseAsyncDeleteBucketCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseAsyncDeleteBucketObject": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseAsyncDeleteCredential": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseBadRequestBucket": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGEResponseBadRequestCredential": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGEResponseBucketCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseBucketObject": {
        "validation_rules": [
          {
            "field": "continuation_token",
            "constraints": {
              "minLength": 0,
              "maxLength": 255,
              "pattern": ".{0,255}"
            },
            "type": "string",
            "description": "Validation constraints for continuation_token"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseCredential": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseDeleteBucketCreate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseDeleteBucketObject": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseListCredential": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[a-zA-Z0-9\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "bucket",
            "constraints": {
              "minLength": 6,
              "maxLength": 63,
              "pattern": ".{6,63}"
            },
            "type": "string",
            "description": "Validation constraints for bucket"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "STORAGEResponseRetrieveBucket": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGEResponseRetrieveCredential": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGESuccessObjectOperation": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "STORAGESuccessObjectOperationAsync": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAAWSKinesisFirehoseEndpoint": {
        "validation_rules": [
          {
            "field": "access_key",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for access_key"
          },
          {
            "field": "stream_name",
            "constraints": {
              "maxLength": 64
            },
            "type": "string",
            "description": "Validation constraints for stream_name"
          },
          {
            "field": "region",
            "constraints": {
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for region"
          },
          {
            "field": "secret_key",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for secret_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAAWSKinesisFirehoseEndpointRequest": {
        "validation_rules": [
          {
            "field": "access_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for access_key"
          },
          {
            "field": "stream_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 64
            },
            "type": "string",
            "description": "Validation constraints for stream_name"
          },
          {
            "field": "region",
            "constraints": {
              "minLength": 1,
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for region"
          },
          {
            "field": "secret_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for secret_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAAzureBlobStorageEndpoint": {
        "validation_rules": [
          {
            "field": "storage_account",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for storage_account"
          },
          {
            "field": "container_name",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for container_name"
          },
          {
            "field": "blob_sas_token",
            "constraints": {
              "maxLength": 250
            },
            "type": "string",
            "description": "Validation constraints for blob_sas_token"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAAzureBlobStorageEndpointRequest": {
        "validation_rules": [
          {
            "field": "storage_account",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for storage_account"
          },
          {
            "field": "container_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for container_name"
          },
          {
            "field": "blob_sas_token",
            "constraints": {
              "minLength": 1,
              "maxLength": 250
            },
            "type": "string",
            "description": "Validation constraints for blob_sas_token"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAAzureMonitorEndpoint": {
        "validation_rules": [
          {
            "field": "log_type",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for log_type"
          },
          {
            "field": "shared_key",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for shared_key"
          },
          {
            "field": "time_generated_field",
            "constraints": {
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for time_generated_field"
          },
          {
            "field": "workspace_id",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for workspace_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAAzureMonitorEndpointRequest": {
        "validation_rules": [
          {
            "field": "log_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for log_type"
          },
          {
            "field": "shared_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for shared_key"
          },
          {
            "field": "time_generated_field",
            "constraints": {
              "minLength": 1,
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for time_generated_field"
          },
          {
            "field": "workspace_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for workspace_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATABigQueryEndpoint": {
        "validation_rules": [
          {
            "field": "dataset_id",
            "constraints": {
              "maxLength": 1024
            },
            "type": "string",
            "description": "Validation constraints for dataset_id"
          },
          {
            "field": "project_id",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for project_id"
          },
          {
            "field": "table_id",
            "constraints": {
              "maxLength": 1024
            },
            "type": "string",
            "description": "Validation constraints for table_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATABigQueryEndpointRequest": {
        "validation_rules": [
          {
            "field": "dataset_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 1024
            },
            "type": "string",
            "description": "Validation constraints for dataset_id"
          },
          {
            "field": "project_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for project_id"
          },
          {
            "field": "table_id",
            "constraints": {
              "minLength": 1,
              "maxLength": 1024
            },
            "type": "string",
            "description": "Validation constraints for table_id"
          },
          {
            "field": "service_account_key",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for service_account_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAContentTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATADataSourceEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATADataStream": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "DATADataStreamRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATADatadogEndpoint": {
        "validation_rules": [
          {
            "field": "api_key",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for api_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATADatadogEndpointRequest": {
        "validation_rules": [
          {
            "field": "url",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for url"
          },
          {
            "field": "api_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for api_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAElasticsearchEndpoint": {
        "validation_rules": [
          {
            "field": "api_key",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for api_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAElasticsearchEndpointRequest": {
        "validation_rules": [
          {
            "field": "url",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for url"
          },
          {
            "field": "api_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for api_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAHttpPostEndpoint": {
        "validation_rules": [
          {
            "field": "log_line_separator",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for log_line_separator"
          },
          {
            "field": "payload_format",
            "constraints": {
              "maxLength": 250
            },
            "type": "string",
            "description": "Validation constraints for payload_format"
          },
          {
            "field": "max_size",
            "constraints": {
              "minimum": 1000000,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for max_size"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAHttpPostEndpointRequest": {
        "validation_rules": [
          {
            "field": "url",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for url"
          },
          {
            "field": "log_line_separator",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for log_line_separator"
          },
          {
            "field": "payload_format",
            "constraints": {
              "minLength": 1,
              "maxLength": 250
            },
            "type": "string",
            "description": "Validation constraints for payload_format"
          },
          {
            "field": "max_size",
            "constraints": {
              "minimum": 1000000,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for max_size"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputDataSource": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputDataSourceAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputDataSourceAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputDataSourceAttributesTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputDataSourceRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputPolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputPolymorphicInputDataSourceAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputPolymorphicInputDataSourceAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputPolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAInputPolymorphicShared": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAKafkaEndpoint": {
        "validation_rules": [
          {
            "field": "bootstrap_servers",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for bootstrap_servers"
          },
          {
            "field": "kafka_topic",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for kafka_topic"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAKafkaEndpointRequest": {
        "validation_rules": [
          {
            "field": "bootstrap_servers",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for bootstrap_servers"
          },
          {
            "field": "kafka_topic",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for kafka_topic"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAOutput": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAOutputPolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAOutputPolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAOutputRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAOutputTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAPaginatedResponseListDataSourceList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAPaginatedResponseListDataStreamList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAPaginatedResponseListTemplateList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAPatchedDataStreamRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAPatchedTemplateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "data_set",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for data_set"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAQRadarEndpoint": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAQRadarEndpointRequest": {
        "validation_rules": [
          {
            "field": "url",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseAsyncDataStream": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseAsyncDeleteDataStream": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseAsyncDeleteTemplate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseAsyncTemplate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseDataStream": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseDeleteDataStream": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseDeleteTemplate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseListDataSource": {
        "validation_rules": [
          {
            "field": "slug",
            "constraints": {
              "pattern": "^[-a-zA-Z0-9_]+$"
            },
            "type": "string",
            "description": "Validation constraints for slug"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseListDataStream": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "DATAResponseListTemplate": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "data_set",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for data_set"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "DATAResponseRetrieveDataStream": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseRetrieveTemplate": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAResponseTemplate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAS3Endpoint": {
        "validation_rules": [
          {
            "field": "access_key",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for access_key"
          },
          {
            "field": "region",
            "constraints": {
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for region"
          },
          {
            "field": "object_key_prefix",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for object_key_prefix"
          },
          {
            "field": "bucket_name",
            "constraints": {
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for bucket_name"
          },
          {
            "field": "host_url",
            "constraints": {
              "maxLength": 200
            },
            "type": "string",
            "description": "Validation constraints for host_url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAS3EndpointRequest": {
        "validation_rules": [
          {
            "field": "access_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for access_key"
          },
          {
            "field": "region",
            "constraints": {
              "minLength": 1,
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for region"
          },
          {
            "field": "object_key_prefix",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for object_key_prefix"
          },
          {
            "field": "bucket_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 150
            },
            "type": "string",
            "description": "Validation constraints for bucket_name"
          },
          {
            "field": "host_url",
            "constraints": {
              "minLength": 1,
              "maxLength": 200
            },
            "type": "string",
            "description": "Validation constraints for host_url"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATASplunkEndpoint": {
        "validation_rules": [
          {
            "field": "api_key",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for api_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATASplunkEndpointRequest": {
        "validation_rules": [
          {
            "field": "url",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for url"
          },
          {
            "field": "api_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for api_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATemplate": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "data_set",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for data_set"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "DATATemplateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "data_set",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for data_set"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformFilterWorkloads": {
        "validation_rules": [
          {
            "field": "workloads",
            "constraints": {
              "minItems": 1,
              "maxItems": 600
            },
            "type": "array",
            "description": "Validation constraints for workloads"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformFilterWorkloadsAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformFilterWorkloadsAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformFilterWorkloadsAttributesTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformFilterWorkloadsRequest": {
        "validation_rules": [
          {
            "field": "workloads",
            "constraints": {
              "minItems": 1,
              "maxItems": 600
            },
            "type": "array",
            "description": "Validation constraints for workloads"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphic": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicShared": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicTransformSamplingAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformPolymorphicTransformSamplingAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformRenderTemplate": {
        "validation_rules": [
          {
            "field": "template",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for template"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformRenderTemplateAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformRenderTemplateAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformRenderTemplateAttributesTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformRenderTemplateRequest": {
        "validation_rules": [
          {
            "field": "template",
            "constraints": {
              "minimum": 1
            },
            "type": "integer",
            "description": "Validation constraints for template"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformSampling": {
        "validation_rules": [
          {
            "field": "rate",
            "constraints": {
              "minimum": 1,
              "maximum": 100
            },
            "type": "integer",
            "description": "Validation constraints for rate"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformSamplingAttributes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformSamplingAttributesRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformSamplingAttributesTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATATransformSamplingRequest": {
        "validation_rules": [
          {
            "field": "rate",
            "constraints": {
              "minimum": 1,
              "maximum": 100
            },
            "type": "integer",
            "description": "Validation constraints for rate"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DATAType4f5Enum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORBlankEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORContent": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "content_hash",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_hash"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORContentRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "content_hash",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_hash"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORNodeGroups": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORNodeGroupsById": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORNodeGroupsByIdRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORNodeGroupsRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORNodeServiceBind": {
        "validation_rules": [
          {
            "field": "service_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for service_name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORNodeServices": {
        "validation_rules": [
          {
            "field": "service_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for service_name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORNodeServicesRequest": {
        "validation_rules": [
          {
            "field": "service_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for service_name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORNodes": {
        "validation_rules": [
          {
            "field": "hash_id",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for hash_id"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORNodesRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPaginatedNodeGroupsList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPaginatedResponseListNodeGroupsByIdList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPaginatedResponseListNodeServicesList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPaginatedResponseListNodesList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPaginatedResponseListServicesList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPaginatedServiceResourceList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPatchedNodesRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORPatchedServicesRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "min_version",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for min_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseBadRequestNodeGroupsById": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseBadRequestNodeServiceBind": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseBadRequestNodeServices": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseBadRequestNodes": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseBadRequestServices": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseDeleteNodeServiceBind": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseDeleteNodes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseDeleteServices": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseListNodeGroupsById": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseListNodeServices": {
        "validation_rules": [
          {
            "field": "service_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for service_name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseListNodes": {
        "validation_rules": [
          {
            "field": "hash_id",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for hash_id"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseListServices": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "min_version",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for min_version"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORResponseNodeGroupsById": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseNodeServices": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseNodes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseRetrieveNodeServiceBind": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseRetrieveNodes": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseRetrieveServices": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORResponseServices": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORServiceResource": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "content_hash",
            "constraints": {
              "minLength": 1,
              "maxLength": 150,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_hash"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "file_group",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_group"
          },
          {
            "field": "file_mode",
            "constraints": {
              "minLength": 1,
              "maxLength": 4,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_mode"
          },
          {
            "field": "file_owner",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_owner"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORServiceResourceId": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "content_hash",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_hash"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "content",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content"
          },
          {
            "field": "file_group",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_group"
          },
          {
            "field": "file_mode",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_mode"
          },
          {
            "field": "file_owner",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_owner"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORServiceResourceIdRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "content",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content"
          },
          {
            "field": "file_group",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_group"
          },
          {
            "field": "file_mode",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_mode"
          },
          {
            "field": "file_owner",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_owner"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORServiceResourceRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "content_type",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for content_type"
          },
          {
            "field": "file_group",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_group"
          },
          {
            "field": "file_mode",
            "constraints": {
              "minLength": 1,
              "maxLength": 4,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_mode"
          },
          {
            "field": "file_owner",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for file_owner"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORServices": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "min_version",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for min_version"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "last_modified",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_modified"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "ORCHESTRATORServicesRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "min_version",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for min_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORStateEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORStatusEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "ORCHESTRATORTriggerEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSBuildContextField": {
        "validation_rules": [
          {
            "field": "field",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for field"
          },
          {
            "field": "value",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for value"
          },
          {
            "field": "instantiation_data_path",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for instantiation_data_path"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSBuildContextFieldRequest": {
        "validation_rules": [
          {
            "field": "field",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for field"
          },
          {
            "field": "value",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for value"
          },
          {
            "field": "instantiation_data_path",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for instantiation_data_path"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSContinuousDeployment": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "repository",
            "constraints": {
              "maxLength": 100,
              "pattern": "^[A-Za-z0-9\\_.\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for repository"
          },
          {
            "field": "branch",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for branch"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "VCSContinuousDeploymentRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "repository",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[A-Za-z0-9\\_.\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for repository"
          },
          {
            "field": "branch",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for branch"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSExecution": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for status"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created_at",
              "updated_at"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "VCSExecutionScript": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSExecutionScriptRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSExecutor": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSIntegration": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPaginatedResponseListContinuousDeploymentList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPaginatedResponseListExecutionList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPaginatedResponseListExecutionScriptList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPaginatedResponseListIntegrationList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPaginatedResponseListPlatformList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPaginatedResponseListRepositoryList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPatchedContinuousDeploymentRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "repository",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "^[A-Za-z0-9\\_.\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for repository"
          },
          {
            "field": "branch",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for branch"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSPlatform": {
        "validation_rules": [
          {
            "field": "id",
            "constraints": {
              "pattern": "^[-a-zA-Z0-9_]+$"
            },
            "type": "string",
            "description": "Validation constraints for id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseAsyncContinuousDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseAsyncDeleteContinuousDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseAsyncDeleteIntegration": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseAsyncExecution": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseAsyncExecutor": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseContinuousDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseDeleteContinuousDeployment": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseDeleteIntegration": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseExecution": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseExecutor": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseListContinuousDeployment": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "maxLength": 100
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "repository",
            "constraints": {
              "maxLength": 100,
              "pattern": "^[A-Za-z0-9\\_.\\-]+$"
            },
            "type": "string",
            "description": "Validation constraints for repository"
          },
          {
            "field": "branch",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for branch"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "VCSResponseListExecution": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "maxLength": 50
            },
            "type": "string",
            "description": "Validation constraints for status"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created_at",
              "updated_at"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "VCSResponseListExecutionScript": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseListIntegration": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseListPlatform": {
        "validation_rules": [
          {
            "field": "id",
            "constraints": {
              "pattern": "^[-a-zA-Z0-9_]+$"
            },
            "type": "string",
            "description": "Validation constraints for id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseListRepository": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseRetrieveContinuousDeployment": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseRetrieveExecutionScript": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseRetrieveExecutor": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "VCSResponseRetrieveIntegration": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSAlgType": {
        "validation_rules": [
          {
            "field": "id",
            "constraints": {
              "minimum": 1,
              "maximum": 4294967295
            },
            "type": "integer",
            "description": "Validation constraints for id"
          },
          {
            "field": "slug",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\w"
            },
            "type": "string",
            "description": "Validation constraints for slug"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSAlgTypeRequest": {
        "validation_rules": [
          {
            "field": "id",
            "constraints": {
              "minimum": 1,
              "maximum": 4294967295
            },
            "type": "integer",
            "description": "Validation constraints for id"
          },
          {
            "field": "slug",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\w"
            },
            "type": "string",
            "description": "Validation constraints for slug"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSDNSSEC": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSDNSSECRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSDelegationSigner": {
        "validation_rules": [
          {
            "field": "digest",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\w"
            },
            "type": "string",
            "description": "Validation constraints for digest"
          },
          {
            "field": "key_tag",
            "constraints": {
              "minimum": 1,
              "maximum": 65535
            },
            "type": "integer",
            "description": "Validation constraints for key_tag"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSDelegationSignerRequest": {
        "validation_rules": [
          {
            "field": "digest",
            "constraints": {
              "minLength": 1,
              "maxLength": 100,
              "pattern": "\\w"
            },
            "type": "string",
            "description": "Validation constraints for digest"
          },
          {
            "field": "key_tag",
            "constraints": {
              "minimum": 1,
              "maximum": 65535
            },
            "type": "integer",
            "description": "Validation constraints for key_tag"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSPaginatedRecordList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSPaginatedZoneList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSPatchedDNSSECRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSPatchedRecordRequest": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 45,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^(?:(?:(?!-)[a-zA-Z0-9-_*]{1,63}(?<![-_])\\.)*(?:(?!-)[a-zA-Z0-9-_*]{1,63}(?<![-_]))|@)$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "ttl",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for ttl"
          },
          {
            "field": "weight",
            "constraints": {
              "minimum": 0,
              "maximum": 255
            },
            "type": "integer",
            "description": "Validation constraints for weight"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSPatchedUpdateZoneRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSPolicyEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSRecord": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 45,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^(?:(?:(?!-)[a-zA-Z0-9-_*]{1,63}(?<![-_])\\.)*(?:(?!-)[a-zA-Z0-9-_*]{1,63}(?<![-_]))|@)$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "ttl",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for ttl"
          },
          {
            "field": "weight",
            "constraints": {
              "minimum": 0,
              "maximum": 255
            },
            "type": "integer",
            "description": "Validation constraints for weight"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSRecordRequest": {
        "validation_rules": [
          {
            "field": "description",
            "constraints": {
              "minLength": 0,
              "maxLength": 45,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^(?:(?:(?!-)[a-zA-Z0-9-_*]{1,63}(?<![-_])\\.)*(?:(?!-)[a-zA-Z0-9-_*]{1,63}(?<![-_]))|@)$"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "ttl",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for ttl"
          },
          {
            "field": "weight",
            "constraints": {
              "minimum": 0,
              "maximum": 255
            },
            "type": "integer",
            "description": "Validation constraints for weight"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseAsyncDNSSEC": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseAsyncDeleteRecord": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseAsyncDeleteZone": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseAsyncRecord": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseAsyncZone": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseDNSSEC": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseDeleteRecord": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseDeleteZone": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseRecord": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseRetrieveDNSSEC": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseRetrieveRecord": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseRetrieveZone": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSResponseZone": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSStatusEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSUpdateZoneRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSZone": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "domain",
            "constraints": {
              "minLength": 1,
              "maxLength": 200,
              "pattern": "(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)"
            },
            "type": "string",
            "description": "Validation constraints for domain"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "DNSZoneRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 50,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "domain",
            "constraints": {
              "minLength": 1,
              "maxLength": 200,
              "pattern": "(?=^.{4,253}$)(^((?!-)[a-zA-Z0-9-]{0,62}[a-zA-Z0-9]\\.)+[a-zA-Z]{2,63}$)"
            },
            "type": "string",
            "description": "Validation constraints for domain"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "BILLINGJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "BILLINGJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "BILLINGJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSAuthorityEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSCertificate": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "certificate",
            "constraints": {
              "minLength": 1,
              "maxLength": 600000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "issuer",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for issuer"
          },
          {
            "field": "status_detail",
            "constraints": {
              "minLength": 0,
              "maxLength": 500,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for status_detail"
          },
          {
            "field": "csr",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for csr"
          },
          {
            "field": "key_algorithm",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for key_algorithm"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "TLSCertificateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "certificate",
            "constraints": {
              "minLength": 1,
              "maxLength": 600000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "private_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 64000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for private_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSCertificateRequestRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "certificate",
            "constraints": {
              "minLength": 1,
              "maxLength": 600000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "private_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 64000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for private_key"
          },
          {
            "field": "common_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 64,
              "pattern": "^(((\\*\\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$"
            },
            "type": "string",
            "description": "Validation constraints for common_name"
          },
          {
            "field": "source_certificate",
            "constraints": {
              "minimum": 1,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for source_certificate"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSCertificateRevocationList": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "product_version",
            "constraints": {
              "minLength": 3,
              "maxLength": 50,
              "pattern": "\\d+\\.\\d+"
            },
            "type": "string",
            "description": "Validation constraints for product_version"
          },
          {
            "field": "issuer",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for issuer"
          },
          {
            "field": "crl",
            "constraints": {
              "minLength": 1,
              "maxLength": 30720000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for crl"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "TLSCertificateRevocationListRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "crl",
            "constraints": {
              "minLength": 1,
              "maxLength": 30720000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for crl"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSCertificateSigningRequestRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "certificate",
            "constraints": {
              "minLength": 1,
              "maxLength": 600000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "private_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 64000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for private_key"
          },
          {
            "field": "common_name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": "^(((\\*\\.)?[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?\\.)+[a-zA-Z](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)$"
            },
            "type": "string",
            "description": "Validation constraints for common_name"
          },
          {
            "field": "country",
            "constraints": {
              "minLength": 2,
              "maxLength": 2,
              "pattern": "[a-zA-Z]{2}"
            },
            "type": "string",
            "description": "Validation constraints for country"
          },
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          },
          {
            "field": "locality",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for locality"
          },
          {
            "field": "organization",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for organization"
          },
          {
            "field": "organization_unity",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for organization_unity"
          },
          {
            "field": "email",
            "constraints": {
              "minLength": 1
            },
            "type": "string",
            "description": "Validation constraints for email"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSChallengeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSJSONAPIErrorObject": {
        "validation_rules": [
          {
            "field": "status",
            "constraints": {
              "minLength": 3,
              "maxLength": 3,
              "pattern": "^\\d{3}$"
            },
            "type": "string",
            "description": "Validation constraints for status"
          },
          {
            "field": "code",
            "constraints": {
              "minLength": 5,
              "maxLength": 5,
              "pattern": "^\\d{5}$"
            },
            "type": "string",
            "description": "Validation constraints for code"
          },
          {
            "field": "title",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for title"
          },
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSJSONAPIErrorResponse": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSJSONAPIErrorSource": {
        "validation_rules": [
          {
            "field": "pointer",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^(/[^/]+)+$"
            },
            "type": "string",
            "description": "Validation constraints for pointer"
          },
          {
            "field": "parameter",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for parameter"
          },
          {
            "field": "header",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": "^.*$"
            },
            "type": "string",
            "description": "Validation constraints for header"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSKeyAlgorithmEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSNullEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSPaginatedCertificateList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSPaginatedCertificateRevocationListList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSPatchedCertificateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "certificate",
            "constraints": {
              "minLength": 1,
              "maxLength": 600000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for certificate"
          },
          {
            "field": "private_key",
            "constraints": {
              "minLength": 1,
              "maxLength": 64000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for private_key"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSPatchedCertificateRevocationListRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 250,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "crl",
            "constraints": {
              "minLength": 1,
              "maxLength": 30720000,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for crl"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseAsyncCertificate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseAsyncCertificateRevocationList": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseAsyncDeleteCertificate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseAsyncDeleteCertificateRevocationList": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseBadRequestCertificate": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "TLSResponseCertificate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseCertificateRevocationList": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseDeleteCertificate": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseDeleteCertificateRevocationList": {
        "validation_rules": [
          {
            "field": "state",
            "constraints": {
              "minLength": 1,
              "maxLength": 8,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for state"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseRetrieveCertificate": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSResponseRetrieveCertificateRevocationList": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSStatusEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "TLSTypeEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "MARKETPLACEDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "MARKETPLACEPublisher": {
        "validation_rules": [
          {
            "field": "icon",
            "constraints": {
              "maxLength": 200
            },
            "type": "string",
            "description": "Validation constraints for icon"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "MARKETPLACEPublisherRequest": {
        "validation_rules": [
          {
            "field": "icon",
            "constraints": {
              "minLength": 1,
              "maxLength": 200
            },
            "type": "string",
            "description": "Validation constraints for icon"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "MARKETPLACEResponseBadRequestPublisher": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "MARKETPLACEResponsePublisher": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "MARKETPLACEResponseRetrievePublisher": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "MARKETPLACEStateEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYDefaultErrorResponse": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYFavorite": {
        "validation_rules": [
          {
            "field": "uri",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^/v\\d/[a-zA-Z0-9_-]+/"
            },
            "type": "string",
            "description": "Validation constraints for uri"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYFavoriteRequest": {
        "validation_rules": [
          {
            "field": "uri",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^/v\\d/[a-zA-Z0-9_-]+/"
            },
            "type": "string",
            "description": "Validation constraints for uri"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYGrant": {
        "validation_rules": [
          {
            "field": "account_id",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for account_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYGrantRequest": {
        "validation_rules": [
          {
            "field": "account_id",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for account_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYGroup": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYGroupMembers": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYGroupMembersRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYGroupRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPaginatedResponseListFavoriteList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPaginatedResponseListGrantList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPaginatedResponseListGroupList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPaginatedResponseListServiceTokenList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPaginatedResponseListUserList": {
        "validation_rules": [
          {
            "field": "count",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for count"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPatchedGrantRequest": {
        "validation_rules": [
          {
            "field": "account_id",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for account_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPatchedGroupRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPatchedServiceTokenUpdateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYPatchedUserRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "email",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for email"
          },
          {
            "field": "phone",
            "constraints": {
              "minLength": 1,
              "maxLength": 31,
              "pattern": "^[+\\d()\\-/.\\s]*$"
            },
            "type": "string",
            "description": "Validation constraints for phone"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseBadRequestFavorite": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseBadRequestGrant": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseBadRequestGroup": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseBadRequestGroupMembers": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseBadRequestServiceToken": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseBadRequestServiceTokenRenew": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseBadRequestUser": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseBadRequestUserInfo": {
        "validation_rules": [
          {
            "field": "detail",
            "constraints": {
              "minLength": 1,
              "maxLength": 4096,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for detail"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseDeleteFavorite": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseDeleteGrant": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseDeleteGroup": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseDeleteServiceToken": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseDeleteUser": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseFavorite": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseGrant": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseGroup": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseGroupMembers": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseListFavorite": {
        "validation_rules": [
          {
            "field": "uri",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": "^/v\\d/[a-zA-Z0-9_-]+/"
            },
            "type": "string",
            "description": "Validation constraints for uri"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseListGrant": {
        "validation_rules": [
          {
            "field": "account_id",
            "constraints": {
              "minimum": 0,
              "maximum": 2147483647
            },
            "type": "integer",
            "description": "Validation constraints for account_id"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseListGroup": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseListServiceToken": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseListUser": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "email",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for email"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "phone",
            "constraints": {
              "minLength": 1,
              "maxLength": 31,
              "pattern": "^[+\\d()\\-/.\\s]*$"
            },
            "type": "string",
            "description": "Validation constraints for phone"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYResponseRetrieveGrant": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseRetrieveGroup": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseRetrieveGroupMembers": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseRetrieveServiceToken": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseRetrieveUser": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseRetrieveUserInfo": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseServiceToken": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseServiceTokenCreate": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseServiceTokenRenew": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseUser": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYResponseUserInfo": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYServiceToken": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYServiceTokenCreate": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "token",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for token"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYServiceTokenCreateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYServiceTokenRenew": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          },
          {
            "field": "token",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for token"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYServiceTokenRenewRequest": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYServiceTokenUpdateRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "description",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for description"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYStateEnum": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYUser": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "email",
            "constraints": {
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for email"
          },
          {
            "field": "last_editor",
            "constraints": {
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for last_editor"
          },
          {
            "field": "phone",
            "constraints": {
              "minLength": 1,
              "maxLength": 31,
              "pattern": "^[+\\d()\\-/.\\s]*$"
            },
            "type": "string",
            "description": "Validation constraints for phone"
          }
        ],
        "business_constraints": [],
        "workflow_rules": [
          {
            "type": "audit_trail",
            "fields": [
              "created",
              "last_modified"
            ],
            "description": "Audit trail pattern detected"
          }
        ]
      },
      "IDENTITYUserInfo": {
        "validation_rules": [],
        "business_constraints": [],
        "workflow_rules": []
      },
      "IDENTITYUserRequest": {
        "validation_rules": [
          {
            "field": "name",
            "constraints": {
              "minLength": 1,
              "maxLength": 255,
              "pattern": ".*"
            },
            "type": "string",
            "description": "Validation constraints for name"
          },
          {
            "field": "email",
            "constraints": {
              "minLength": 1,
              "maxLength": 255
            },
            "type": "string",
            "description": "Validation constraints for email"
          },
          {
            "field": "phone",
            "constraints": {
              "minLength": 1,
              "maxLength": 31,
              "pattern": "^[+\\d()\\-/.\\s]*$"
            },
            "type": "string",
            "description": "Validation constraints for phone"
          }
        ],
        "business_constraints": [],
        "workflow_rules": []
      }
    },
    "moduleToggleRules": {
      "USERSDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHEffectEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHLockoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHLockoutPolicyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHLoginRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHLoginResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHMFAToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPaginatedPolicyList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPaginatedTOTPDeviceListList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPatchedPolicyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPolicyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPolicyRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPolicyRuleCondition": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPolicyRuleConditionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHPolicyRuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncDeletePolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncDeleteTOTPDeviceCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncLockoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncLogin": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncSessionTimeoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncTOTPDeviceCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseAsyncTokenPair": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseBadRequestPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseDeletePolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseDeleteTOTPDeviceCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseLockoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseLogin": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponsePolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseRetrieveLockoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseRetrievePolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseRetrieveSessionTimeoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseSessionTimeoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseTOTPDeviceCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHResponseTokenPair": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHSessionTimeoutPolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHSessionTimeoutPolicyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHStateExecutedResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHStatePendingResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHTOTPDeviceCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHTOTPDeviceList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHTOTPVerificationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHTokenPair": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHTokenRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "AUTHuser_login_method_response": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAWS4HMAC": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAWS4HMACAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAWS4HMACAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAWS4HMACRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAWS4HMACTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAddress": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAddressLoadBalancerModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAddressLoadBalancerModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAddressModules": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAddressModulesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEAddressRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationAcceleratorModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationAcceleratorModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationDeviceGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationDeviceGroupsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationFunctionInstanceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationModules": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationModulesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRequestPhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRequestPhaseRuleEngineOrderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRequestPhaseRuleEngineRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationResponsePhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationResponsePhaseRuleEngineOrderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationResponsePhaseRuleEngineRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddHeaderTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddRequestCookie": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddResponseHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookie": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineNoArgs": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineNoArgsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineNoArgsTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviors": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRequestPhaseBehaviorsShared": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseNoArgs": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviors": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponsePhaseBehaviorsShared": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseString": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseStringRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineResponseStringTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRewriteRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRewriteRequestRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunction": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCachePolicy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetConnector": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetConnectorRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetConnectorTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCookie": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCookieRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetCookieTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetOrigin": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetOriginRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineSetOriginTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineString": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineStringAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineStringAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineStringRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEApplicationRuleEngineStringTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEBehaviorA69Enum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEBlankEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEBrowserCacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEBrowserCacheModuleBehaviorEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEBrowserCacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSetting": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsApplicationAcceleratorModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsEdgeCacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsEdgeCacheModuleBehaviorEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsEdgeCacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsModules": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsModulesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsTieredCacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsTieredCacheModuleBehaviorEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheSettingsTieredCacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByCookiesModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByCookiesModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByDevicesModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByDevicesModuleBehaviorEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByDevicesModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByMethodEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByQuerystringModule": {
        "modules": [
          {
            "name": "sort",
            "toggle_field": "sort_enabled",
            "type": "boolean",
            "default": true,
            "dependencies": [],
            "description": "Module toggle for sort"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECacheVaryByQuerystringModuleRequest": {
        "modules": [
          {
            "name": "sort",
            "toggle_field": "sort_enabled",
            "type": "boolean",
            "default": true,
            "dependencies": [],
            "description": "Module toggle for sort"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECiphersEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECloneApplicationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECloneFirewallRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECloneWAFRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECodeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConditionalEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorHTTP": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorHTTPAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorHTTPAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorHTTPRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorLiveIngest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorLiveIngestAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorLiveIngestAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorLiveIngestRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorPolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorStorage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorStorageAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorStorageAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEConnectorStorageRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECustomPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGECustomPageRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDefaultDeploymentStrategy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDefaultDeploymentStrategyAttrs": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDefaultDeploymentStrategyAttrsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDefaultDeploymentStrategyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDeploymentStrategy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategy": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDeploymentStrategyDefaultDeploymentStrategyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDeploymentStrategyRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDeploymentStrategyShared": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEDnsResolutionEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeApplicationCriterionField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeApplicationCriterionFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeApplicationCriterionFieldVariableEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgument": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeApplicationCriterionPolymorphicArgumentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFirewallCriterionField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFirewallCriterionFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFirewallCriterionFieldVariableEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgument": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFirewallCriterionPolymorphicArgumentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFunctionModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFunctionModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFunctions": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEdgeFunctionsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEEngineVersionEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEExecutionEnvironmentEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewall": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorNoArguments": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorNoArgumentsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorNoArgumentsTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorRunFunction": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorRunFunctionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetCustomResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetCustomResponseRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetRateLimit": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetRateLimitRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetRateLimitTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetWaf": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetWafAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetWafAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetWafRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorSetWafTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorTagEvent": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorTagEventAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorTagEventAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorTagEventRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorTagEventTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviors": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArguments": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunction": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWaf": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEvent": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallBehaviorsShared": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallFunctionInstanceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallModules": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallModulesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallRuleEngineOrderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEFirewallRuleEngineRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHMAC": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHMACPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHMACPolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHMACRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHTTPConnectionOptions": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHTTPConnectionOptionsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHTTPModules": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHTTPModulesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHttpProtocol": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHttpProtocolRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEHttpVersionPolicyEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEImageProcessorModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEImageProcessorModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEInfrastructureEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELargeFileCacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELargeFileCacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELayerEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELimitByEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELoadBalancerModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELoadBalancerModuleConfig": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELoadBalancerModuleConfigRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGELoadBalancerModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEMTLS": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEMTLSRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEMethodEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEMinimumVersionEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEModeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGENetworkList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGENetworkListDetail": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGENetworkListDetailRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGENullEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOperator565Enum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOriginIPACL": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOriginIPACLRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOriginShieldConfig": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOriginShieldConfigRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOriginShieldModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEOriginShieldModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPageConnector": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPageConnectorAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPageConnectorAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPageConnectorRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPagePolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPagePolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPageRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedApplicationDeviceGroupsList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedApplicationFunctionInstanceList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedApplicationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedApplicationRequestPhaseRuleEngineList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedApplicationResponsePhaseRuleEngineList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedConnectorPolymorphicList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedCustomPageList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedEdgeFunctionsList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedFirewallFunctionInstanceList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedFirewallList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedFirewallRuleEngineList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedNetworkListList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedResponseListCacheSettingList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedWAFList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedWAFRuleList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedWorkloadDeploymentList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPaginatedWorkloadList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedApplicationDeviceGroupsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedApplicationFunctionInstanceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedApplicationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedApplicationRequestPhaseRuleEngineRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedApplicationResponsePhaseRuleEngineRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedCacheSettingRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedConnectorHTTPRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedConnectorLiveIngestRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedConnectorPolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedConnectorStorageRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedCustomPageRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedEdgeFunctionsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedFirewallFunctionInstanceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedFirewallRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedFirewallRuleEngineRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedNetworkListDetailRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedWAFRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedWAFRuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedWorkloadDeploymentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPatchedWorkloadRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEProtocols": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEProtocolsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPurgeInput": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEPurgeInputRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGERegionEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseApplicationDeviceGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseApplicationFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseApplicationRequestPhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseApplicationResponsePhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncApplicationDeviceGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncApplicationFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncCacheSetting": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncConnectorPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncCustomPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteApplicationDeviceGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteApplicationFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteApplicationRequestPhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteApplicationResponsePhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteCacheSetting": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteConnectorPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteCustomPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteFirewall": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteFirewallFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteFirewallRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteFunctionsDoc": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteNetworkListDetail": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteWAF": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteWAFRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteWorkload": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncDeleteWorkloadDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncFirewall": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncFirewallFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncFirewallRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncFunctionsDoc": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncNetworkListDetail": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncPurgeInput": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncWAF": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncWAFRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncWorkload": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseAsyncWorkloadDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSetting": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestSerializerMetaclassModulesField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestSerializerMetaclassStrategyField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseBadRequestWorkloadDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseConnectorPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseCustomPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteApplicationFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteApplicationRequestPhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteApplicationResponsePhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteConnectorPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteCustomPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteFirewall": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteFirewallFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteFirewallRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteFunctionsDoc": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteNetworkListDetail": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteWAF": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseDeleteWAFRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseFirewall": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseFirewallFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseFirewallRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseFunctionsDoc": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseListCacheSetting": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseNetworkListDetail": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponsePurgeInput": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveApplication": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveApplicationDeviceGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveApplicationFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveCacheSetting": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveConnectorPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveCustomPage": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveFirewall": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveFirewallFunctionInstance": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveFirewallRuleEngine": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveFunctionsDoc": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveNetworkListDetail": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveWAF": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveWAFRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveWorkload": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseRetrieveWorkloadDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseWAF": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseWAFRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseWorkload": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEResponseWorkloadDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGERuleIdEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGERulesetsEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGERuntimeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESensitivityEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEServerRoleEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEStateCacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEStateCacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETLSWorkload": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETLSWorkloadRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEThreatEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEThresholdsConfigField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEThresholdsConfigFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETieredCacheModule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETieredCacheModuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETopologyEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETransportPolicyEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEType15cEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEType528Enum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEType689Enum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGETypeF11Enum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEVerificationEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAF": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFEngineSettingsAttributesField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFEngineSettingsAttributesFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFEngineSettingsField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFEngineSettingsFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFEngineSettingsFieldTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionGenericCondition": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionGenericConditionMatchEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionGenericConditionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionPolymorphicCondition": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionPolymorphicConditionRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionSpecificConditionOnName": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionSpecificConditionOnValue": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFRule": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFRuleOperatorEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWAFRuleRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWorkload": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWorkloadDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWorkloadDeploymentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGEWorkloadRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSAggregatedField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSAggregatedFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSAggregationTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSBaseQuery": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSBaseQueryRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSComparisonTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSDashboardRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSDataUnitEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSFolderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSLibraryReportRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSOrder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSOrderDirectionEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSOrderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSPaginatedResponseListDashboardList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSPaginatedResponseListFolderList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSPaginatedResponseListReportList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSPaginatedResponseListRowList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSPatchedDashboardRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSPatchedFolderRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSRecommendationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSReportRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncDeleteDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncDeleteFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncDeleteReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncDeleteRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncOrder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseAsyncRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseDeleteDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseDeleteFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseDeleteReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseDeleteRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseListDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseListFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseListReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseListRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseOrder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseRetrieveDashboard": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseRetrieveFolder": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseRetrieveReport": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseRetrieveRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSResponseRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSRow": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSRowRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSScopeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "METRICSTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLDatabaseRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLOpenAPISchema": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLPaginatedOpenAPISchemaList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseAsyncDeleteOpenAPISchema": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseAsyncOpenAPISchema": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseAsyncSQLResult": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseDeleteOpenAPISchema": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseOpenAPISchema": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseRetrieveOpenAPISchema": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLResponseSQLResult": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLSQLResult": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLSQLStatementsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "EDGESQLStatusEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSCredit": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSCreditRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSPaginatedPaymentHistoryList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSPaginatedResponsePaymentMethodList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSPatchedPartialUpdateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSPaymentHistory": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSPaymentMethod": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSPaymentMethodRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSResponseAsyncCredit": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSResponseAsyncDeletePaymentMethod": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSResponseAsyncPaymentMethod": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSResponseCredit": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSResponseDeletePaymentMethod": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "PAYMENTSResponsePaymentMethod": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSAccount": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSAccountInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSAccountRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSBrand": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSBrandRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSCreateAccountRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSCreateBrandRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSCreateOrganizationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSCreateResellerRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSCreateWorkspaceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSCurrencyIsoCodeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSOrganization": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSOrganizationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSPaginatedResponseListAccountList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSPatchedAccountRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSPatchedBrandRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSPatchedOrganizationRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSPatchedResellerRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSPatchedWorkspaceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSReasonEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSReseller": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResellerRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseAccount": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseAccountInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseAsyncAccount": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseAsyncAccountInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseListAccount": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseRetrieveAccount": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSResponseRetrieveAccountInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSStatusEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSWorkspace": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ACCOUNTSWorkspaceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEBucket": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEBucketCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEBucketCreateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEBucketObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGECapabilitiesEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGECredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGECredentialCreateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEEdgeAccessEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEObjectResponseAsyncData": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEObjectResponseData": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEPaginatedBucketList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEPaginatedResponseListCredentialList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEPatchedBucketRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseAsyncBucketCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseAsyncCredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseAsyncDeleteBucketCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseAsyncDeleteBucketObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseAsyncDeleteCredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseBadRequestBucket": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseBadRequestCredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseBucketCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseBucketObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseCredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseDeleteBucketCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseDeleteBucketObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseListCredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseRetrieveBucket": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGEResponseRetrieveCredential": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGESuccessObjectOperation": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "STORAGESuccessObjectOperationAsync": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAAWSKinesisFirehoseEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAAWSKinesisFirehoseEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAAzureBlobStorageEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAAzureBlobStorageEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAAzureMonitorEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAAzureMonitorEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATABigQueryEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATABigQueryEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAContentTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATADataSourceEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATADataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATADataStreamRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATADatadogEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATADatadogEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAElasticsearchEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAElasticsearchEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAHttpPostEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAHttpPostEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputDataSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputDataSourceAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputDataSourceAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputDataSourceAttributesTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputDataSourceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputPolymorphicInputDataSourceAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputPolymorphicInputDataSourceAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputPolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAInputPolymorphicShared": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAKafkaEndpoint": {
        "modules": [
          {
            "name": "tls",
            "toggle_field": "use_tls",
            "type": "boolean",
            "dependencies": [],
            "description": "Module toggle for tls"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAKafkaEndpointRequest": {
        "modules": [
          {
            "name": "tls",
            "toggle_field": "use_tls",
            "type": "boolean",
            "dependencies": [],
            "description": "Module toggle for tls"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAOutput": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAOutputPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAOutputPolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAOutputRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAOutputTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAPaginatedResponseListDataSourceList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAPaginatedResponseListDataStreamList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAPaginatedResponseListTemplateList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAPatchedDataStreamRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAPatchedTemplateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAQRadarEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAQRadarEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseAsyncDataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseAsyncDeleteDataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseAsyncDeleteTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseAsyncTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseDataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseDeleteDataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseDeleteTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseListDataSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseListDataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseListTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseRetrieveDataStream": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseRetrieveTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAResponseTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAS3Endpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAS3EndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATASplunkEndpoint": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATASplunkEndpointRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATemplateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformFilterWorkloads": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformFilterWorkloadsAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformFilterWorkloadsAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformFilterWorkloadsAttributesTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformFilterWorkloadsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphic": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicShared": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicTransformRenderTemplateAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicTransformSamplingAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformPolymorphicTransformSamplingAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformRenderTemplate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformRenderTemplateAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformRenderTemplateAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformRenderTemplateAttributesTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformRenderTemplateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformSampling": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformSamplingAttributes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformSamplingAttributesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformSamplingAttributesTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATATransformSamplingRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DATAType4f5Enum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORBlankEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORContent": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORContentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeGroups": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeGroupsById": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeGroupsByIdRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeGroupsRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeServiceBind": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodeServicesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORNodesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPaginatedNodeGroupsList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPaginatedResponseListNodeGroupsByIdList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPaginatedResponseListNodeServicesList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPaginatedResponseListNodesList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPaginatedResponseListServicesList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPaginatedServiceResourceList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPatchedNodesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORPatchedServicesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseBadRequestNodeGroupsById": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseBadRequestNodeServiceBind": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseBadRequestNodeServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseBadRequestNodes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseBadRequestServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseDeleteNodeServiceBind": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseDeleteNodes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseDeleteServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseListNodeGroupsById": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseListNodeServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseListNodes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseListServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseNodeGroupsById": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseNodeServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseNodes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseRetrieveNodeServiceBind": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseRetrieveNodes": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseRetrieveServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORResponseServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORServiceResource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORServiceResourceId": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORServiceResourceIdRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORServiceResourceRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORServices": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORServicesRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORStateEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORStatusEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "ORCHESTRATORTriggerEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSBuildContextField": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSBuildContextFieldRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSContinuousDeploymentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSExecution": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSExecutionScript": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSExecutionScriptRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSExecutor": {
        "modules": [
          {
            "name": "is",
            "toggle_field": "is_active",
            "type": "boolean",
            "dependencies": [],
            "description": "Module toggle for is"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSIntegration": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPaginatedResponseListContinuousDeploymentList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPaginatedResponseListExecutionList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPaginatedResponseListExecutionScriptList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPaginatedResponseListIntegrationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPaginatedResponseListPlatformList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPaginatedResponseListRepositoryList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPatchedContinuousDeploymentRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSPlatform": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseAsyncContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseAsyncDeleteContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseAsyncDeleteIntegration": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseAsyncExecution": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseAsyncExecutor": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseDeleteContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseDeleteIntegration": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseExecution": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseExecutor": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseListContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseListExecution": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseListExecutionScript": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseListIntegration": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseListPlatform": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseListRepository": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseRetrieveContinuousDeployment": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseRetrieveExecutionScript": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseRetrieveExecutor": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "VCSResponseRetrieveIntegration": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSAlgType": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSAlgTypeRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSDNSSEC": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSDNSSECRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSDelegationSigner": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSDelegationSignerRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSPaginatedRecordList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSPaginatedZoneList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSPatchedDNSSECRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSPatchedRecordRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSPatchedUpdateZoneRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSPolicyEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSRecord": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSRecordRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseAsyncDNSSEC": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseAsyncDeleteRecord": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseAsyncDeleteZone": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseAsyncRecord": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseAsyncZone": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseDNSSEC": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseDeleteRecord": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseDeleteZone": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseRecord": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseRetrieveDNSSEC": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseRetrieveRecord": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseRetrieveZone": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSResponseZone": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSStatusEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSUpdateZoneRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSZone": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "DNSZoneRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "BILLINGJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "BILLINGJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "BILLINGJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSAuthorityEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSCertificateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSCertificateRequestRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSCertificateRevocationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSCertificateRevocationListRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSCertificateSigningRequestRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSChallengeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSJSONAPIErrorObject": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSJSONAPIErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSJSONAPIErrorSource": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSKeyAlgorithmEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSNullEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSPaginatedCertificateList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSPaginatedCertificateRevocationListList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSPatchedCertificateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSPatchedCertificateRevocationListRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseAsyncCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseAsyncCertificateRevocationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseAsyncDeleteCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseAsyncDeleteCertificateRevocationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseBadRequestCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseCertificateRevocationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseDeleteCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseDeleteCertificateRevocationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseRetrieveCertificate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSResponseRetrieveCertificateRevocationList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSStatusEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "TLSTypeEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEPublisher": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEPublisherRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEResponseBadRequestPublisher": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEResponsePublisher": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEResponseRetrievePublisher": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "MARKETPLACEStateEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYDefaultErrorResponse": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYFavorite": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYFavoriteRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYGrant": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYGrantRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYGroup": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYGroupMembers": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYGroupMembersRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYGroupRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPaginatedResponseListFavoriteList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPaginatedResponseListGrantList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPaginatedResponseListGroupList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPaginatedResponseListServiceTokenList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPaginatedResponseListUserList": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPatchedGrantRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPatchedGroupRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPatchedServiceTokenUpdateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYPatchedUserRequest": {
        "modules": [
          {
            "name": "two_factor",
            "toggle_field": "two_factor_enabled",
            "type": "boolean",
            "default": false,
            "dependencies": [],
            "description": "Module toggle for two_factor"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestFavorite": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestGrant": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestGroup": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestGroupMembers": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestServiceToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestServiceTokenRenew": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestUser": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseBadRequestUserInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseDeleteFavorite": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseDeleteGrant": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseDeleteGroup": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseDeleteServiceToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseDeleteUser": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseFavorite": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseGrant": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseGroup": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseGroupMembers": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseListFavorite": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseListGrant": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseListGroup": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseListServiceToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseListUser": {
        "modules": [
          {
            "name": "two_factor",
            "toggle_field": "two_factor_enabled",
            "type": "boolean",
            "default": false,
            "dependencies": [],
            "description": "Module toggle for two_factor"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseRetrieveGrant": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseRetrieveGroup": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseRetrieveGroupMembers": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseRetrieveServiceToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseRetrieveUser": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseRetrieveUserInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseServiceToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseServiceTokenCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseServiceTokenRenew": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseUser": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYResponseUserInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYServiceToken": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYServiceTokenCreate": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYServiceTokenCreateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYServiceTokenRenew": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYServiceTokenRenewRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYServiceTokenUpdateRequest": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYStateEnum": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYUser": {
        "modules": [
          {
            "name": "two_factor",
            "toggle_field": "two_factor_enabled",
            "type": "boolean",
            "default": false,
            "dependencies": [],
            "description": "Module toggle for two_factor"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYUserInfo": {
        "modules": [],
        "toggle_dependencies": {},
        "feature_flags": []
      },
      "IDENTITYUserRequest": {
        "modules": [
          {
            "name": "two_factor",
            "toggle_field": "two_factor_enabled",
            "type": "boolean",
            "default": false,
            "dependencies": [],
            "description": "Module toggle for two_factor"
          }
        ],
        "toggle_dependencies": {},
        "feature_flags": []
      }
    },
    "crossSchemaRelations": {
      "AUTHPolicyRule": {
        "references": [
          {
            "property": "effect",
            "references": "AUTHEffectEnum"
          },
          {
            "property": "condition",
            "references": "AUTHPolicyRuleCondition"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHPolicyRuleRequest": {
        "references": [
          {
            "property": "effect",
            "references": "AUTHEffectEnum"
          },
          {
            "property": "condition",
            "references": "AUTHPolicyRuleConditionRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncLockoutPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHLockoutPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncLogin": {
        "references": [
          {
            "property": "data",
            "references": "AUTHLoginResponse"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncSessionTimeoutPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHSessionTimeoutPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncTOTPDeviceCreate": {
        "references": [
          {
            "property": "data",
            "references": "AUTHTOTPDeviceCreate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncToken": {
        "references": [
          {
            "property": "data",
            "references": "AUTHToken"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseAsyncTokenPair": {
        "references": [
          {
            "property": "data",
            "references": "AUTHTokenPair"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseLockoutPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHLockoutPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseLogin": {
        "references": [
          {
            "property": "data",
            "references": "AUTHLoginResponse"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponsePolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseRetrieveLockoutPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHLockoutPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseRetrievePolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseRetrieveSessionTimeoutPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHSessionTimeoutPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseSessionTimeoutPolicy": {
        "references": [
          {
            "property": "data",
            "references": "AUTHSessionTimeoutPolicy"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseTOTPDeviceCreate": {
        "references": [
          {
            "property": "data",
            "references": "AUTHTOTPDeviceCreate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseToken": {
        "references": [
          {
            "property": "data",
            "references": "AUTHToken"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHResponseTokenPair": {
        "references": [
          {
            "property": "data",
            "references": "AUTHTokenPair"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEAWS4HMAC": {
        "references": [
          {
            "property": "type",
            "references": "EDGEAWS4HMACTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEAWS4HMACAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEAWS4HMACRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEAWS4HMACTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEAWS4HMACAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEAddressModules": {
        "references": [
          {
            "property": "load_balancer",
            "references": "EDGEAddressLoadBalancerModule"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEAddressModulesRequest": {
        "references": [
          {
            "property": "load_balancer",
            "references": "EDGEAddressLoadBalancerModuleRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplication": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEApplicationModules"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseApplication",
            "property": "data"
          },
          {
            "schema": "EDGEResponseAsyncApplication",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveApplication",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRequest": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEApplicationModulesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddHeader": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineAddHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineAddHeaderAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddHeaderRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineAddHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineAddHeaderAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddRequestCookie": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineAddRequestCookieTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineAddRequestCookieAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineAddRequestCookieTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddResponseHeader": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineAddResponseHeaderAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroups": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterHeader": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineFilterHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineFilterHeaderAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterHeaderRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineFilterHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineFilterHeaderAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookie": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineFilterRequestCookieAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeader": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineFilterResponseHeaderAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineNoArgs": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineNoArgsTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineNoArgsRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineNoArgsTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseNoArgs": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineResponseNoArgsTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineResponseNoArgsTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseString": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineResponseStringTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineResponseStringAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseStringRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineResponseStringTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineResponseStringAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRewriteRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGETypeF11Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineRewriteRequestAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRewriteRequestRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGETypeF11Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineRewriteRequestAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunction": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType689Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineRunFunctionAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunctionRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType689Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineRunFunctionAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponse": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType689Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineRunFunctionResponseAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType689Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCachePolicy": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetCachePolicyTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetCachePolicyAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetCachePolicyTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetConnector": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetConnectorTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetConnectorAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetConnectorRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetConnectorTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetConnectorAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCookie": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetCookieTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetCookieAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCookieRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetCookieTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetCookieAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetOrigin": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetOriginTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetOriginAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetOriginRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineSetOriginTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineSetOriginAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineString": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineStringTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineStringAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineStringRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEApplicationRuleEngineStringTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEApplicationRuleEngineStringAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGECacheSetting": {
        "references": [
          {
            "property": "browser_cache",
            "references": "EDGEBrowserCacheModule"
          },
          {
            "property": "modules",
            "references": "EDGECacheSettingsModules"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncCacheSetting",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveCacheSetting",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingRequest": {
        "references": [
          {
            "property": "browser_cache",
            "references": "EDGEBrowserCacheModuleRequest"
          },
          {
            "property": "modules",
            "references": "EDGECacheSettingsModulesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGECacheSettingsApplicationAcceleratorModule": {
        "references": [
          {
            "property": "cache_vary_by_querystring",
            "references": "EDGECacheVaryByQuerystringModule"
          },
          {
            "property": "cache_vary_by_cookies",
            "references": "EDGECacheVaryByCookiesModule"
          },
          {
            "property": "cache_vary_by_devices",
            "references": "EDGECacheVaryByDevicesModule"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsModules",
            "property": "application_accelerator"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
        "references": [
          {
            "property": "cache_vary_by_querystring",
            "references": "EDGECacheVaryByQuerystringModuleRequest"
          },
          {
            "property": "cache_vary_by_cookies",
            "references": "EDGECacheVaryByCookiesModuleRequest"
          },
          {
            "property": "cache_vary_by_devices",
            "references": "EDGECacheVaryByDevicesModuleRequest"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsModulesRequest",
            "property": "application_accelerator"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingsEdgeCacheModule": {
        "references": [
          {
            "property": "stale_cache",
            "references": "EDGEStateCacheModule"
          },
          {
            "property": "large_file_cache",
            "references": "EDGELargeFileCacheModule"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsModules",
            "property": "edge_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingsEdgeCacheModuleRequest": {
        "references": [
          {
            "property": "stale_cache",
            "references": "EDGEStateCacheModuleRequest"
          },
          {
            "property": "large_file_cache",
            "references": "EDGELargeFileCacheModuleRequest"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsModulesRequest",
            "property": "edge_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingsModules": {
        "references": [
          {
            "property": "edge_cache",
            "references": "EDGECacheSettingsEdgeCacheModule"
          },
          {
            "property": "application_accelerator",
            "references": "EDGECacheSettingsApplicationAcceleratorModule"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGECacheSetting",
            "property": "modules"
          },
          {
            "schema": "EDGEResponseListCacheSetting",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingsModulesRequest": {
        "references": [
          {
            "property": "edge_cache",
            "references": "EDGECacheSettingsEdgeCacheModuleRequest"
          },
          {
            "property": "application_accelerator",
            "references": "EDGECacheSettingsApplicationAcceleratorModuleRequest"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingRequest",
            "property": "modules"
          },
          {
            "schema": "EDGEPatchedCacheSettingRequest",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheSettingsTieredCacheModule": {
        "references": [
          {
            "property": "topology",
            "references": "EDGETopologyEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGECacheSettingsTieredCacheModuleRequest": {
        "references": [
          {
            "property": "topology",
            "references": "EDGETopologyEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEConnectorHTTP": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorHTTPAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEConnectorHTTPRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorHTTPAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEConnectorLiveIngest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorLiveIngestAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEConnectorLiveIngestAttributes": {
        "references": [
          {
            "property": "region",
            "references": "EDGERegionEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEConnectorLiveIngest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorLiveIngestAttributesRequest": {
        "references": [
          {
            "property": "region",
            "references": "EDGERegionEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEConnectorLiveIngestRequest",
            "property": "attributes"
          },
          {
            "schema": "EDGEPatchedConnectorLiveIngestRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorLiveIngestRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorLiveIngestAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEConnectorStorage": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorStorageAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEConnectorStorageRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorStorageAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEDefaultDeploymentStrategy": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEDefaultDeploymentStrategyAttrs"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEDefaultDeploymentStrategyRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEDefaultDeploymentStrategyAttrsRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEEdgeApplicationCriterionField": {
        "references": [
          {
            "property": "conditional",
            "references": "EDGEConditionalEnum"
          },
          {
            "property": "variable",
            "references": "EDGEEdgeApplicationCriterionFieldVariableEnum"
          },
          {
            "property": "operator",
            "references": "EDGEOperator565Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEEdgeApplicationCriterionFieldRequest": {
        "references": [
          {
            "property": "conditional",
            "references": "EDGEConditionalEnum"
          },
          {
            "property": "variable",
            "references": "EDGEEdgeApplicationCriterionFieldVariableEnum"
          },
          {
            "property": "operator",
            "references": "EDGEOperator565Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEEdgeFirewallCriterionField": {
        "references": [
          {
            "property": "conditional",
            "references": "EDGEConditionalEnum"
          },
          {
            "property": "variable",
            "references": "EDGEEdgeFirewallCriterionFieldVariableEnum"
          },
          {
            "property": "operator",
            "references": "EDGEOperator565Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEEdgeFirewallCriterionFieldRequest": {
        "references": [
          {
            "property": "conditional",
            "references": "EDGEConditionalEnum"
          },
          {
            "property": "variable",
            "references": "EDGEEdgeFirewallCriterionFieldVariableEnum"
          },
          {
            "property": "operator",
            "references": "EDGEOperator565Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewall": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEFirewallModules"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncFirewall",
            "property": "data"
          },
          {
            "schema": "EDGEResponseFirewall",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveFirewall",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorNoArguments": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorNoArgumentsTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorNoArgumentsRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorNoArgumentsTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorRunFunction": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType689Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorRunFunctionAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorRunFunctionRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType689Enum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorRunFunctionAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetCustomResponse": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorSetCustomResponseTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorSetCustomResponseAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetCustomResponseRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorSetCustomResponseTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorSetCustomResponseAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetRateLimit": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorSetRateLimitTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorSetRateLimitAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributes": {
        "references": [
          {
            "property": "limit_by",
            "references": "EDGELimitByEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetRateLimit",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
        "references": [
          {
            "property": "limit_by",
            "references": "EDGELimitByEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetRateLimitRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetRateLimitRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorSetRateLimitTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorSetRateLimitAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetWaf": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorSetWafTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorSetWafAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetWafAttributes": {
        "references": [
          {
            "property": "mode",
            "references": "EDGEModeEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetWaf",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetWafAttributesRequest": {
        "references": [
          {
            "property": "mode",
            "references": "EDGEModeEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetWafRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetWafRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorSetWafTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorSetWafAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorTagEvent": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorTagEventTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorTagEventAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorTagEventRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEFirewallBehaviorTagEventTypeEnum"
          },
          {
            "property": "attributes",
            "references": "EDGEFirewallBehaviorTagEventAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEFirewallRequest": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEFirewallModulesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGENetworkList": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType528Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGENetworkListDetail": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType528Enum"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncNetworkListDetail",
            "property": "data"
          },
          {
            "schema": "EDGEResponseNetworkListDetail",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveNetworkListDetail",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGENetworkListDetailRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType528Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEOriginShieldConfig": {
        "references": [
          {
            "property": "origin_ip_acl",
            "references": "EDGEOriginIPACL"
          },
          {
            "property": "hmac",
            "references": "EDGEHMAC"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEOriginShieldConfigRequest": {
        "references": [
          {
            "property": "origin_ip_acl",
            "references": "EDGEOriginIPACLRequest"
          },
          {
            "property": "hmac",
            "references": "EDGEHMACRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPage": {
        "references": [
          {
            "property": "code",
            "references": "EDGECodeEnum"
          },
          {
            "property": "page",
            "references": "EDGEPagePolymorphic"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPageConnector": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEPageConnectorAttributes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPageConnectorRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEPageConnectorAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPageRequest": {
        "references": [
          {
            "property": "code",
            "references": "EDGECodeEnum"
          },
          {
            "property": "page",
            "references": "EDGEPagePolymorphicRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedApplicationRequest": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEApplicationModulesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedCacheSettingRequest": {
        "references": [
          {
            "property": "browser_cache",
            "references": "EDGEBrowserCacheModuleRequest"
          },
          {
            "property": "modules",
            "references": "EDGECacheSettingsModulesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedConnectorHTTPRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorHTTPAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedConnectorLiveIngestRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorLiveIngestAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedConnectorStorageRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEConnectorStorageAttributesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedFirewallRequest": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEFirewallModulesRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedNetworkListDetailRequest": {
        "references": [
          {
            "property": "type",
            "references": "EDGEType528Enum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedWAFRequest": {
        "references": [
          {
            "property": "engine_settings",
            "references": "EDGEWAFEngineSettingsFieldRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedWorkloadDeploymentRequest": {
        "references": [
          {
            "property": "strategy",
            "references": "EDGEDeploymentStrategyRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEPatchedWorkloadRequest": {
        "references": [
          {
            "property": "mtls",
            "references": "EDGEMTLSRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseApplication": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplication"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseApplicationDeviceGroups": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationDeviceGroups"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseApplicationFunctionInstance": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationFunctionInstance"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseApplicationRequestPhaseRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationRequestPhaseRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseApplicationResponsePhaseRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationResponsePhaseRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncApplication": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplication"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncApplicationDeviceGroups": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationDeviceGroups"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncApplicationFunctionInstance": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationFunctionInstance"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationRequestPhaseRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationResponsePhaseRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncCacheSetting": {
        "references": [
          {
            "property": "data",
            "references": "EDGECacheSetting"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncConnectorPolymorphic": {
        "references": [
          {
            "property": "data",
            "references": "EDGEConnectorPolymorphic"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncCustomPage": {
        "references": [
          {
            "property": "data",
            "references": "EDGECustomPage"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncFirewall": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewall"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncFirewallFunctionInstance": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewallFunctionInstance"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncFirewallRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewallRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncFunctionsDoc": {
        "references": [
          {
            "property": "data",
            "references": "EDGEEdgeFunctions"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncNetworkListDetail": {
        "references": [
          {
            "property": "data",
            "references": "EDGENetworkListDetail"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncPurgeInput": {
        "references": [
          {
            "property": "data",
            "references": "EDGEPurgeInput"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncWAF": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWAF"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncWAFRule": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWAFRule"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncWorkload": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWorkload"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseAsyncWorkloadDeployment": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWorkloadDeployment"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestApplication": {
        "references": [
          {
            "property": "modules",
            "references": "EDGEResponseBadRequestSerializerMetaclassModulesField"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSetting": {
        "references": [
          {
            "property": "browser_cache",
            "references": "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField"
          },
          {
            "property": "modules",
            "references": "EDGEResponseBadRequestSerializerMetaclassModulesField"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
        "references": [
          {
            "property": "cache_vary_by_querystring",
            "references": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField"
          },
          {
            "property": "cache_vary_by_cookies",
            "references": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField"
          },
          {
            "property": "cache_vary_by_devices",
            "references": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestSerializerMetaclassModulesField",
            "property": "application_accelerator"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
        "references": [
          {
            "property": "stale_cache",
            "references": "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField"
          },
          {
            "property": "large_file_cache",
            "references": "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestSerializerMetaclassModulesField",
            "property": "edge_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestSerializerMetaclassModulesField": {
        "references": [
          {
            "property": "edge_cache",
            "references": "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField"
          },
          {
            "property": "tiered_cache",
            "references": "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField"
          },
          {
            "property": "application_accelerator",
            "references": "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestApplication",
            "property": "modules"
          },
          {
            "schema": "EDGEResponseBadRequestCacheSetting",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestWorkloadDeployment": {
        "references": [
          {
            "property": "strategy",
            "references": "EDGEResponseBadRequestSerializerMetaclassStrategyField"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseConnectorPolymorphic": {
        "references": [
          {
            "property": "data",
            "references": "EDGEConnectorPolymorphic"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseCustomPage": {
        "references": [
          {
            "property": "data",
            "references": "EDGECustomPage"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseFirewall": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewall"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseFirewallFunctionInstance": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewallFunctionInstance"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseFirewallRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewallRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseFunctionsDoc": {
        "references": [
          {
            "property": "data",
            "references": "EDGEEdgeFunctions"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseListCacheSetting": {
        "references": [
          {
            "property": "browser_cache",
            "references": "EDGEBrowserCacheModule"
          },
          {
            "property": "modules",
            "references": "EDGECacheSettingsModules"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseNetworkListDetail": {
        "references": [
          {
            "property": "data",
            "references": "EDGENetworkListDetail"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponsePurgeInput": {
        "references": [
          {
            "property": "data",
            "references": "EDGEPurgeInput"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveApplication": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplication"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveApplicationDeviceGroups": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationDeviceGroups"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveApplicationFunctionInstance": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationFunctionInstance"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEApplicationRequestPhaseRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveCacheSetting": {
        "references": [
          {
            "property": "data",
            "references": "EDGECacheSetting"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveConnectorPolymorphic": {
        "references": [
          {
            "property": "data",
            "references": "EDGEConnectorPolymorphic"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveCustomPage": {
        "references": [
          {
            "property": "data",
            "references": "EDGECustomPage"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveFirewall": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewall"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveFirewallFunctionInstance": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewallFunctionInstance"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveFirewallRuleEngine": {
        "references": [
          {
            "property": "data",
            "references": "EDGEFirewallRuleEngine"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveFunctionsDoc": {
        "references": [
          {
            "property": "data",
            "references": "EDGEEdgeFunctions"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveNetworkListDetail": {
        "references": [
          {
            "property": "data",
            "references": "EDGENetworkListDetail"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveWAF": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWAF"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveWAFRule": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWAFRule"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveWorkload": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWorkload"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseRetrieveWorkloadDeployment": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWorkloadDeployment"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseWAF": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWAF"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseWAFRule": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWAFRule"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseWorkload": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWorkload"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEResponseWorkloadDeployment": {
        "references": [
          {
            "property": "data",
            "references": "EDGEWorkloadDeployment"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEThresholdsConfigField": {
        "references": [
          {
            "property": "threat",
            "references": "EDGEThreatEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEThresholdsConfigFieldRequest": {
        "references": [
          {
            "property": "threat",
            "references": "EDGEThreatEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAF": {
        "references": [
          {
            "property": "engine_settings",
            "references": "EDGEWAFEngineSettingsField"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncWAF",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveWAF",
            "property": "data"
          },
          {
            "schema": "EDGEResponseWAF",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFEngineSettingsField": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEWAFEngineSettingsAttributesField"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEWAF",
            "property": "engine_settings"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFEngineSettingsFieldRequest": {
        "references": [
          {
            "property": "attributes",
            "references": "EDGEWAFEngineSettingsAttributesFieldRequest"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEPatchedWAFRequest",
            "property": "engine_settings"
          },
          {
            "schema": "EDGEWAFRequest",
            "property": "engine_settings"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFExceptionGenericCondition": {
        "references": [
          {
            "property": "match",
            "references": "EDGEWAFExceptionGenericConditionMatchEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAFExceptionGenericConditionRequest": {
        "references": [
          {
            "property": "match",
            "references": "EDGEWAFExceptionGenericConditionMatchEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAFExceptionSpecificConditionOnName": {
        "references": [
          {
            "property": "match",
            "references": "EDGEWAFExceptionSpecificConditionOnNameMatchEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameRequest": {
        "references": [
          {
            "property": "match",
            "references": "EDGEWAFExceptionSpecificConditionOnNameMatchEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAFExceptionSpecificConditionOnValue": {
        "references": [
          {
            "property": "match",
            "references": "EDGEWAFExceptionSpecificConditionOnValueMatchEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueRequest": {
        "references": [
          {
            "property": "match",
            "references": "EDGEWAFExceptionSpecificConditionOnValueMatchEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWAFRequest": {
        "references": [
          {
            "property": "engine_settings",
            "references": "EDGEWAFEngineSettingsFieldRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWorkload": {
        "references": [
          {
            "property": "mtls",
            "references": "EDGEMTLS"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncWorkload",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveWorkload",
            "property": "data"
          },
          {
            "schema": "EDGEResponseWorkload",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWorkloadDeployment": {
        "references": [
          {
            "property": "strategy",
            "references": "EDGEDeploymentStrategy"
          }
        ],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncWorkloadDeployment",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveWorkloadDeployment",
            "property": "data"
          },
          {
            "schema": "EDGEResponseWorkloadDeployment",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWorkloadDeploymentRequest": {
        "references": [
          {
            "property": "strategy",
            "references": "EDGEDeploymentStrategyRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGEWorkloadRequest": {
        "references": [
          {
            "property": "mtls",
            "references": "EDGEMTLSRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSBaseQuery": {
        "references": [
          {
            "property": "order_direction",
            "references": "METRICSOrderDirectionEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSBaseQueryRequest": {
        "references": [
          {
            "property": "order_direction",
            "references": "METRICSOrderDirectionEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSDashboard": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "METRICSResponseAsyncDashboard",
            "property": "data"
          },
          {
            "schema": "METRICSResponseDashboard",
            "property": "data"
          },
          {
            "schema": "METRICSResponseRetrieveDashboard",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "METRICSDashboardRequest": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSFolder": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "METRICSResponseAsyncFolder",
            "property": "data"
          },
          {
            "schema": "METRICSResponseFolder",
            "property": "data"
          },
          {
            "schema": "METRICSResponseRetrieveFolder",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "METRICSFolderRequest": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSLibraryReportRequest": {
        "references": [
          {
            "property": "type",
            "references": "METRICSTypeEnum"
          },
          {
            "property": "aggregation_type",
            "references": "METRICSAggregationTypeEnum"
          },
          {
            "property": "data_unit",
            "references": "METRICSDataUnitEnum"
          },
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          },
          {
            "property": "comparison_type",
            "references": "METRICSComparisonTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": [
          {
            "type": "complex_composition",
            "reference_count": 5,
            "description": "METRICSLibraryReportRequest composes multiple schemas"
          }
        ]
      },
      "METRICSPatchedDashboardRequest": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSPatchedFolderRequest": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSReport": {
        "references": [
          {
            "property": "type",
            "references": "METRICSTypeEnum"
          },
          {
            "property": "aggregation_type",
            "references": "METRICSAggregationTypeEnum"
          },
          {
            "property": "data_unit",
            "references": "METRICSDataUnitEnum"
          },
          {
            "property": "comparison_type",
            "references": "METRICSComparisonTypeEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "METRICSResponseAsyncReport",
            "property": "data"
          },
          {
            "schema": "METRICSResponseReport",
            "property": "data"
          },
          {
            "schema": "METRICSResponseRetrieveReport",
            "property": "data"
          }
        ],
        "composition_patterns": [
          {
            "type": "complex_composition",
            "reference_count": 4,
            "description": "METRICSReport composes multiple schemas"
          }
        ]
      },
      "METRICSReportRequest": {
        "references": [
          {
            "property": "type",
            "references": "METRICSTypeEnum"
          },
          {
            "property": "aggregation_type",
            "references": "METRICSAggregationTypeEnum"
          },
          {
            "property": "data_unit",
            "references": "METRICSDataUnitEnum"
          },
          {
            "property": "comparison_type",
            "references": "METRICSComparisonTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": [
          {
            "type": "complex_composition",
            "reference_count": 4,
            "description": "METRICSReportRequest composes multiple schemas"
          }
        ]
      },
      "METRICSResponseAsyncDashboard": {
        "references": [
          {
            "property": "data",
            "references": "METRICSDashboard"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseAsyncFolder": {
        "references": [
          {
            "property": "data",
            "references": "METRICSFolder"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseAsyncOrder": {
        "references": [
          {
            "property": "data",
            "references": "METRICSOrder"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseAsyncReport": {
        "references": [
          {
            "property": "data",
            "references": "METRICSReport"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseAsyncRow": {
        "references": [
          {
            "property": "data",
            "references": "METRICSRow"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseDashboard": {
        "references": [
          {
            "property": "data",
            "references": "METRICSDashboard"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseFolder": {
        "references": [
          {
            "property": "data",
            "references": "METRICSFolder"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseListDashboard": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseListFolder": {
        "references": [
          {
            "property": "scope",
            "references": "METRICSScopeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseListReport": {
        "references": [
          {
            "property": "type",
            "references": "METRICSTypeEnum"
          },
          {
            "property": "aggregation_type",
            "references": "METRICSAggregationTypeEnum"
          },
          {
            "property": "data_unit",
            "references": "METRICSDataUnitEnum"
          },
          {
            "property": "comparison_type",
            "references": "METRICSComparisonTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": [
          {
            "type": "complex_composition",
            "reference_count": 4,
            "description": "METRICSResponseListReport composes multiple schemas"
          }
        ]
      },
      "METRICSResponseOrder": {
        "references": [
          {
            "property": "data",
            "references": "METRICSOrder"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseReport": {
        "references": [
          {
            "property": "data",
            "references": "METRICSReport"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseRetrieveDashboard": {
        "references": [
          {
            "property": "data",
            "references": "METRICSDashboard"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseRetrieveFolder": {
        "references": [
          {
            "property": "data",
            "references": "METRICSFolder"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseRetrieveReport": {
        "references": [
          {
            "property": "data",
            "references": "METRICSReport"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseRetrieveRow": {
        "references": [
          {
            "property": "data",
            "references": "METRICSRow"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "METRICSResponseRow": {
        "references": [
          {
            "property": "data",
            "references": "METRICSRow"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGESQLResponseAsyncOpenAPISchema": {
        "references": [
          {
            "property": "data",
            "references": "EDGESQLOpenAPISchema"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGESQLResponseAsyncSQLResult": {
        "references": [
          {
            "property": "data",
            "references": "EDGESQLSQLResult"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGESQLResponseOpenAPISchema": {
        "references": [
          {
            "property": "data",
            "references": "EDGESQLOpenAPISchema"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGESQLResponseRetrieveOpenAPISchema": {
        "references": [
          {
            "property": "data",
            "references": "EDGESQLOpenAPISchema"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "EDGESQLResponseSQLResult": {
        "references": [
          {
            "property": "data",
            "references": "EDGESQLSQLResult"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "PAYMENTSResponseAsyncCredit": {
        "references": [
          {
            "property": "data",
            "references": "PAYMENTSCredit"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "PAYMENTSResponseAsyncPaymentMethod": {
        "references": [
          {
            "property": "data",
            "references": "PAYMENTSPaymentMethod"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "PAYMENTSResponseCredit": {
        "references": [
          {
            "property": "data",
            "references": "PAYMENTSCredit"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "PAYMENTSResponsePaymentMethod": {
        "references": [
          {
            "property": "data",
            "references": "PAYMENTSPaymentMethod"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSBrand": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSBrandRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSCreateBrandRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSCreateOrganizationRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSCreateResellerRequest": {
        "references": [
          {
            "property": "currency_iso_code",
            "references": "ACCOUNTSCurrencyIsoCodeEnum"
          },
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSCreateWorkspaceRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSOrganization": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSOrganizationRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSPatchedBrandRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSPatchedOrganizationRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSPatchedResellerRequest": {
        "references": [
          {
            "property": "currency_iso_code",
            "references": "ACCOUNTSCurrencyIsoCodeEnum"
          },
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSPatchedWorkspaceRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSReseller": {
        "references": [
          {
            "property": "currency_iso_code",
            "references": "ACCOUNTSCurrencyIsoCodeEnum"
          },
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResellerRequest": {
        "references": [
          {
            "property": "currency_iso_code",
            "references": "ACCOUNTSCurrencyIsoCodeEnum"
          },
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResponseAccount": {
        "references": [
          {
            "property": "data",
            "references": "ACCOUNTSAccount"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResponseAccountInfo": {
        "references": [
          {
            "property": "data",
            "references": "ACCOUNTSAccountInfo"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResponseAsyncAccount": {
        "references": [
          {
            "property": "data",
            "references": "ACCOUNTSAccount"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResponseAsyncAccountInfo": {
        "references": [
          {
            "property": "data",
            "references": "ACCOUNTSAccountInfo"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResponseRetrieveAccount": {
        "references": [
          {
            "property": "data",
            "references": "ACCOUNTSAccount"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSResponseRetrieveAccountInfo": {
        "references": [
          {
            "property": "data",
            "references": "ACCOUNTSAccountInfo"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSWorkspace": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ACCOUNTSWorkspaceRequest": {
        "references": [
          {
            "property": "type",
            "references": "ACCOUNTSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEBucket": {
        "references": [
          {
            "property": "edge_access",
            "references": "STORAGEEdgeAccessEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "STORAGEResponseRetrieveBucket",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "STORAGEBucketCreate": {
        "references": [
          {
            "property": "edge_access",
            "references": "STORAGEEdgeAccessEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "STORAGEResponseAsyncBucketCreate",
            "property": "data"
          },
          {
            "schema": "STORAGEResponseBucketCreate",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "STORAGEBucketCreateRequest": {
        "references": [
          {
            "property": "edge_access",
            "references": "STORAGEEdgeAccessEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEPatchedBucketRequest": {
        "references": [
          {
            "property": "edge_access",
            "references": "STORAGEEdgeAccessEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEResponseAsyncBucketCreate": {
        "references": [
          {
            "property": "data",
            "references": "STORAGEBucketCreate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEResponseAsyncCredential": {
        "references": [
          {
            "property": "data",
            "references": "STORAGECredential"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEResponseBucketCreate": {
        "references": [
          {
            "property": "data",
            "references": "STORAGEBucketCreate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEResponseCredential": {
        "references": [
          {
            "property": "data",
            "references": "STORAGECredential"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEResponseRetrieveBucket": {
        "references": [
          {
            "property": "data",
            "references": "STORAGEBucket"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGEResponseRetrieveCredential": {
        "references": [
          {
            "property": "data",
            "references": "STORAGECredential"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGESuccessObjectOperation": {
        "references": [
          {
            "property": "data",
            "references": "STORAGEObjectResponseData"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "STORAGESuccessObjectOperationAsync": {
        "references": [
          {
            "property": "data",
            "references": "STORAGEObjectResponseAsyncData"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAInputDataSource": {
        "references": [
          {
            "property": "data_source",
            "references": "DATADataSourceEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "DATAInputDataSourceAttributes",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATAInputDataSourceAttributes": {
        "references": [
          {
            "property": "type",
            "references": "DATAInputDataSourceAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATAInputDataSource"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAInputDataSourceAttributesRequest": {
        "references": [
          {
            "property": "type",
            "references": "DATAInputDataSourceAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATAInputDataSourceRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAInputDataSourceRequest": {
        "references": [
          {
            "property": "data_source",
            "references": "DATADataSourceEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "DATAInputDataSourceAttributesRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATAOutput": {
        "references": [
          {
            "property": "type",
            "references": "DATAOutputTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATAOutputPolymorphic"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAOutputRequest": {
        "references": [
          {
            "property": "type",
            "references": "DATAOutputTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATAOutputPolymorphicRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAResponseAsyncDataStream": {
        "references": [
          {
            "property": "data",
            "references": "DATADataStream"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAResponseAsyncTemplate": {
        "references": [
          {
            "property": "data",
            "references": "DATATemplate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAResponseDataStream": {
        "references": [
          {
            "property": "data",
            "references": "DATADataStream"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAResponseRetrieveDataStream": {
        "references": [
          {
            "property": "data",
            "references": "DATADataStream"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAResponseRetrieveTemplate": {
        "references": [
          {
            "property": "data",
            "references": "DATATemplate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAResponseTemplate": {
        "references": [
          {
            "property": "data",
            "references": "DATATemplate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAS3Endpoint": {
        "references": [
          {
            "property": "content_type",
            "references": "DATAContentTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATAS3EndpointRequest": {
        "references": [
          {
            "property": "content_type",
            "references": "DATAContentTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATATransformFilterWorkloadsAttributes": {
        "references": [
          {
            "property": "type",
            "references": "DATATransformFilterWorkloadsAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATATransformFilterWorkloads"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATATransformFilterWorkloadsAttributesRequest": {
        "references": [
          {
            "property": "type",
            "references": "DATATransformFilterWorkloadsAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATATransformFilterWorkloadsRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATATransformRenderTemplateAttributes": {
        "references": [
          {
            "property": "type",
            "references": "DATATransformRenderTemplateAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATATransformRenderTemplate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATATransformRenderTemplateAttributesRequest": {
        "references": [
          {
            "property": "type",
            "references": "DATATransformRenderTemplateAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATATransformRenderTemplateRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATATransformSamplingAttributes": {
        "references": [
          {
            "property": "type",
            "references": "DATATransformSamplingAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATATransformSampling"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DATATransformSamplingAttributesRequest": {
        "references": [
          {
            "property": "type",
            "references": "DATATransformSamplingAttributesTypeEnum"
          },
          {
            "property": "attributes",
            "references": "DATATransformSamplingRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORNodes": {
        "references": [
          {
            "property": "status",
            "references": "ORCHESTRATORStatusEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORResponseNodes",
            "property": "data"
          },
          {
            "schema": "ORCHESTRATORResponseRetrieveNodes",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "ORCHESTRATORNodesRequest": {
        "references": [
          {
            "property": "status",
            "references": "ORCHESTRATORStatusEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORPatchedNodesRequest": {
        "references": [
          {
            "property": "status",
            "references": "ORCHESTRATORStatusEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseDeleteNodeServiceBind": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseDeleteNodes": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseDeleteServices": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseListNodes": {
        "references": [
          {
            "property": "status",
            "references": "ORCHESTRATORStatusEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseNodeGroupsById": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          },
          {
            "property": "data",
            "references": "ORCHESTRATORNodeGroupsById"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseNodeServices": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          },
          {
            "property": "data",
            "references": "ORCHESTRATORNodeServices"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseNodes": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          },
          {
            "property": "data",
            "references": "ORCHESTRATORNodes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseRetrieveNodeServiceBind": {
        "references": [
          {
            "property": "data",
            "references": "ORCHESTRATORNodeServiceBind"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseRetrieveNodes": {
        "references": [
          {
            "property": "data",
            "references": "ORCHESTRATORNodes"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseRetrieveServices": {
        "references": [
          {
            "property": "data",
            "references": "ORCHESTRATORServices"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "ORCHESTRATORResponseServices": {
        "references": [
          {
            "property": "state",
            "references": "ORCHESTRATORStateEnum"
          },
          {
            "property": "data",
            "references": "ORCHESTRATORServices"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSIntegration": {
        "references": [
          {
            "property": "provider",
            "references": "VCSPlatform"
          }
        ],
        "referenced_by": [
          {
            "schema": "VCSResponseRetrieveIntegration",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "VCSResponseAsyncContinuousDeployment": {
        "references": [
          {
            "property": "data",
            "references": "VCSContinuousDeployment"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseAsyncExecution": {
        "references": [
          {
            "property": "data",
            "references": "VCSExecution"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseAsyncExecutor": {
        "references": [
          {
            "property": "data",
            "references": "VCSExecutor"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseContinuousDeployment": {
        "references": [
          {
            "property": "data",
            "references": "VCSContinuousDeployment"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseExecution": {
        "references": [
          {
            "property": "data",
            "references": "VCSExecution"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseExecutor": {
        "references": [
          {
            "property": "data",
            "references": "VCSExecutor"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseListIntegration": {
        "references": [
          {
            "property": "provider",
            "references": "VCSPlatform"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseRetrieveContinuousDeployment": {
        "references": [
          {
            "property": "data",
            "references": "VCSContinuousDeployment"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseRetrieveExecutionScript": {
        "references": [
          {
            "property": "data",
            "references": "VCSExecutionScript"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseRetrieveExecutor": {
        "references": [
          {
            "property": "data",
            "references": "VCSExecutor"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "VCSResponseRetrieveIntegration": {
        "references": [
          {
            "property": "data",
            "references": "VCSIntegration"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSDelegationSigner": {
        "references": [
          {
            "property": "algorithm_type",
            "references": "DNSAlgType"
          },
          {
            "property": "digest_type",
            "references": "DNSAlgType"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSDelegationSignerRequest": {
        "references": [
          {
            "property": "algorithm_type",
            "references": "DNSAlgTypeRequest"
          },
          {
            "property": "digest_type",
            "references": "DNSAlgTypeRequest"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSPatchedRecordRequest": {
        "references": [
          {
            "property": "type",
            "references": "DNSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSRecord": {
        "references": [
          {
            "property": "type",
            "references": "DNSTypeEnum"
          }
        ],
        "referenced_by": [
          {
            "schema": "DNSResponseAsyncRecord",
            "property": "data"
          },
          {
            "schema": "DNSResponseRecord",
            "property": "data"
          },
          {
            "schema": "DNSResponseRetrieveRecord",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "DNSRecordRequest": {
        "references": [
          {
            "property": "type",
            "references": "DNSTypeEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseAsyncDNSSEC": {
        "references": [
          {
            "property": "data",
            "references": "DNSDNSSEC"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseAsyncRecord": {
        "references": [
          {
            "property": "data",
            "references": "DNSRecord"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseAsyncZone": {
        "references": [
          {
            "property": "data",
            "references": "DNSZone"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseDNSSEC": {
        "references": [
          {
            "property": "data",
            "references": "DNSDNSSEC"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseRecord": {
        "references": [
          {
            "property": "data",
            "references": "DNSRecord"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseRetrieveDNSSEC": {
        "references": [
          {
            "property": "data",
            "references": "DNSDNSSEC"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseRetrieveRecord": {
        "references": [
          {
            "property": "data",
            "references": "DNSRecord"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseRetrieveZone": {
        "references": [
          {
            "property": "data",
            "references": "DNSZone"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "DNSResponseZone": {
        "references": [
          {
            "property": "data",
            "references": "DNSZone"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSCertificateRequestRequest": {
        "references": [
          {
            "property": "challenge",
            "references": "TLSChallengeEnum"
          },
          {
            "property": "authority",
            "references": "TLSAuthorityEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSResponseAsyncCertificate": {
        "references": [
          {
            "property": "data",
            "references": "TLSCertificate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSResponseAsyncCertificateRevocationList": {
        "references": [
          {
            "property": "data",
            "references": "TLSCertificateRevocationList"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSResponseCertificate": {
        "references": [
          {
            "property": "data",
            "references": "TLSCertificate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSResponseCertificateRevocationList": {
        "references": [
          {
            "property": "data",
            "references": "TLSCertificateRevocationList"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSResponseRetrieveCertificate": {
        "references": [
          {
            "property": "data",
            "references": "TLSCertificate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "TLSResponseRetrieveCertificateRevocationList": {
        "references": [
          {
            "property": "data",
            "references": "TLSCertificateRevocationList"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "MARKETPLACEResponsePublisher": {
        "references": [
          {
            "property": "state",
            "references": "MARKETPLACEStateEnum"
          },
          {
            "property": "data",
            "references": "MARKETPLACEPublisher"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "MARKETPLACEResponseRetrievePublisher": {
        "references": [
          {
            "property": "data",
            "references": "MARKETPLACEPublisher"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseDeleteFavorite": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseDeleteGrant": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseDeleteGroup": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseDeleteServiceToken": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseDeleteUser": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseFavorite": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYFavorite"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseGrant": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYGrant"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseGroup": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYGroup"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseGroupMembers": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYGroupMembers"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseRetrieveGrant": {
        "references": [
          {
            "property": "data",
            "references": "IDENTITYGrant"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseRetrieveGroup": {
        "references": [
          {
            "property": "data",
            "references": "IDENTITYGroup"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseRetrieveGroupMembers": {
        "references": [
          {
            "property": "data",
            "references": "IDENTITYGroupMembers"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseRetrieveServiceToken": {
        "references": [
          {
            "property": "data",
            "references": "IDENTITYServiceToken"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseRetrieveUser": {
        "references": [
          {
            "property": "data",
            "references": "IDENTITYUser"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseRetrieveUserInfo": {
        "references": [
          {
            "property": "data",
            "references": "IDENTITYUserInfo"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseServiceToken": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYServiceToken"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseServiceTokenCreate": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYServiceTokenCreate"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseServiceTokenRenew": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYServiceTokenRenew"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseUser": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYUser"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "IDENTITYResponseUserInfo": {
        "references": [
          {
            "property": "state",
            "references": "IDENTITYStateEnum"
          },
          {
            "property": "data",
            "references": "IDENTITYUserInfo"
          }
        ],
        "referenced_by": [],
        "composition_patterns": []
      },
      "AUTHEffectEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHPolicyRule",
            "property": "effect"
          },
          {
            "schema": "AUTHPolicyRuleRequest",
            "property": "effect"
          }
        ],
        "composition_patterns": []
      },
      "AUTHPolicyRuleCondition": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHPolicyRule",
            "property": "condition"
          }
        ],
        "composition_patterns": []
      },
      "AUTHPolicyRuleConditionRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHPolicyRuleRequest",
            "property": "condition"
          }
        ],
        "composition_patterns": []
      },
      "AUTHLockoutPolicy": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncLockoutPolicy",
            "property": "data"
          },
          {
            "schema": "AUTHResponseLockoutPolicy",
            "property": "data"
          },
          {
            "schema": "AUTHResponseRetrieveLockoutPolicy",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "AUTHLoginResponse": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncLogin",
            "property": "data"
          },
          {
            "schema": "AUTHResponseLogin",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "AUTHPolicy": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncPolicy",
            "property": "data"
          },
          {
            "schema": "AUTHResponsePolicy",
            "property": "data"
          },
          {
            "schema": "AUTHResponseRetrievePolicy",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "AUTHSessionTimeoutPolicy": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncSessionTimeoutPolicy",
            "property": "data"
          },
          {
            "schema": "AUTHResponseRetrieveSessionTimeoutPolicy",
            "property": "data"
          },
          {
            "schema": "AUTHResponseSessionTimeoutPolicy",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "AUTHTOTPDeviceCreate": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncTOTPDeviceCreate",
            "property": "data"
          },
          {
            "schema": "AUTHResponseTOTPDeviceCreate",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "AUTHToken": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncToken",
            "property": "data"
          },
          {
            "schema": "AUTHResponseToken",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "AUTHTokenPair": {
        "references": [],
        "referenced_by": [
          {
            "schema": "AUTHResponseAsyncTokenPair",
            "property": "data"
          },
          {
            "schema": "AUTHResponseTokenPair",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEAWS4HMACTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEAWS4HMAC",
            "property": "type"
          },
          {
            "schema": "EDGEAWS4HMACRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEAWS4HMACAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEAWS4HMAC",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEAWS4HMACAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEAWS4HMACRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEAddressLoadBalancerModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEAddressModules",
            "property": "load_balancer"
          }
        ],
        "composition_patterns": []
      },
      "EDGEAddressLoadBalancerModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEAddressModulesRequest",
            "property": "load_balancer"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationModules": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplication",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationModulesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRequest",
            "property": "modules"
          },
          {
            "schema": "EDGEPatchedApplicationRequest",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddHeaderTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddHeader",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineAddHeaderRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddHeader",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddHeaderRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddRequestCookie",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineAddRequestCookieRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddRequestCookie",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddRequestCookieRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddResponseHeader",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineAddResponseHeaderRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddResponseHeader",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineAddResponseHeaderRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineCaptureMatchGroups",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineCaptureMatchGroupsRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineCaptureMatchGroups",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineCaptureMatchGroupsRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterHeader",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineFilterHeaderRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterHeader",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterHeaderRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterRequestCookie",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineFilterRequestCookieRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterRequestCookie",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterRequestCookieRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterResponseHeader",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineFilterResponseHeaderRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterResponseHeader",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineFilterResponseHeaderRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineNoArgsTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineNoArgs",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineNoArgsRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineResponseNoArgs",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineResponseNoArgsRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseStringTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineResponseString",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineResponseStringRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineResponseString",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineResponseStringAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineResponseStringRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGETypeF11Enum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRewriteRequest",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineRewriteRequestRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRewriteRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRewriteRequestRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEType689Enum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRunFunction",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineRunFunctionRequest",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineRunFunctionResponse",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineRunFunctionResponseRequest",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorRunFunction",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorRunFunctionRequest",
            "property": "type"
          }
        ],
        "composition_patterns": [
          {
            "type": "shared_component",
            "usage_count": 6,
            "description": "EDGEType689Enum is widely reused across schemas"
          }
        ]
      },
      "EDGEApplicationRuleEngineRunFunctionAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRunFunction",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRunFunctionRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRunFunctionResponse",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineRunFunctionResponseRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetCachePolicy",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineSetCachePolicyRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetCachePolicy",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetCachePolicyRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetConnectorTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetConnector",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineSetConnectorRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetConnector",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetConnectorRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCookieTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetCookie",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineSetCookieRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetCookie",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetCookieAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetCookieRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetOriginTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetOrigin",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineSetOriginRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetOrigin",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineSetOriginAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineSetOriginRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineStringTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineString",
            "property": "type"
          },
          {
            "schema": "EDGEApplicationRuleEngineStringRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineStringAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineString",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRuleEngineStringAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEApplicationRuleEngineStringRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEBrowserCacheModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSetting",
            "property": "browser_cache"
          },
          {
            "schema": "EDGEResponseListCacheSetting",
            "property": "browser_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEBrowserCacheModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingRequest",
            "property": "browser_cache"
          },
          {
            "schema": "EDGEPatchedCacheSettingRequest",
            "property": "browser_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheVaryByQuerystringModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsApplicationAcceleratorModule",
            "property": "cache_vary_by_querystring"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheVaryByCookiesModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsApplicationAcceleratorModule",
            "property": "cache_vary_by_cookies"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheVaryByDevicesModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsApplicationAcceleratorModule",
            "property": "cache_vary_by_devices"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheVaryByQuerystringModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsApplicationAcceleratorModuleRequest",
            "property": "cache_vary_by_querystring"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheVaryByCookiesModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsApplicationAcceleratorModuleRequest",
            "property": "cache_vary_by_cookies"
          }
        ],
        "composition_patterns": []
      },
      "EDGECacheVaryByDevicesModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsApplicationAcceleratorModuleRequest",
            "property": "cache_vary_by_devices"
          }
        ],
        "composition_patterns": []
      },
      "EDGEStateCacheModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsEdgeCacheModule",
            "property": "stale_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGELargeFileCacheModule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsEdgeCacheModule",
            "property": "large_file_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEStateCacheModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsEdgeCacheModuleRequest",
            "property": "stale_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGELargeFileCacheModuleRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsEdgeCacheModuleRequest",
            "property": "large_file_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGETopologyEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGECacheSettingsTieredCacheModule",
            "property": "topology"
          },
          {
            "schema": "EDGECacheSettingsTieredCacheModuleRequest",
            "property": "topology"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorHTTPAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEConnectorHTTP",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorHTTPAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEConnectorHTTPRequest",
            "property": "attributes"
          },
          {
            "schema": "EDGEPatchedConnectorHTTPRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGERegionEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEConnectorLiveIngestAttributes",
            "property": "region"
          },
          {
            "schema": "EDGEConnectorLiveIngestAttributesRequest",
            "property": "region"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorStorageAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEConnectorStorage",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorStorageAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEConnectorStorageRequest",
            "property": "attributes"
          },
          {
            "schema": "EDGEPatchedConnectorStorageRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEDefaultDeploymentStrategyAttrs": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEDefaultDeploymentStrategy",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEDefaultDeploymentStrategyAttrsRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEDefaultDeploymentStrategyRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConditionalEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEEdgeApplicationCriterionField",
            "property": "conditional"
          },
          {
            "schema": "EDGEEdgeApplicationCriterionFieldRequest",
            "property": "conditional"
          },
          {
            "schema": "EDGEEdgeFirewallCriterionField",
            "property": "conditional"
          },
          {
            "schema": "EDGEEdgeFirewallCriterionFieldRequest",
            "property": "conditional"
          }
        ],
        "composition_patterns": []
      },
      "EDGEEdgeApplicationCriterionFieldVariableEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEEdgeApplicationCriterionField",
            "property": "variable"
          },
          {
            "schema": "EDGEEdgeApplicationCriterionFieldRequest",
            "property": "variable"
          }
        ],
        "composition_patterns": []
      },
      "EDGEOperator565Enum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEEdgeApplicationCriterionField",
            "property": "operator"
          },
          {
            "schema": "EDGEEdgeApplicationCriterionFieldRequest",
            "property": "operator"
          },
          {
            "schema": "EDGEEdgeFirewallCriterionField",
            "property": "operator"
          },
          {
            "schema": "EDGEEdgeFirewallCriterionFieldRequest",
            "property": "operator"
          }
        ],
        "composition_patterns": []
      },
      "EDGEEdgeFirewallCriterionFieldVariableEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEEdgeFirewallCriterionField",
            "property": "variable"
          },
          {
            "schema": "EDGEEdgeFirewallCriterionFieldRequest",
            "property": "variable"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallModules": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewall",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorNoArgumentsTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorNoArguments",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorNoArgumentsRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorRunFunction",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorRunFunctionAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorRunFunctionRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetCustomResponse",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorSetCustomResponseRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetCustomResponse",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetCustomResponseRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetRateLimitTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetRateLimit",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorSetRateLimitRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGELimitByEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetRateLimitAttributes",
            "property": "limit_by"
          },
          {
            "schema": "EDGEFirewallBehaviorSetRateLimitAttributesRequest",
            "property": "limit_by"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorSetWafTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetWaf",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorSetWafRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEModeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorSetWafAttributes",
            "property": "mode"
          },
          {
            "schema": "EDGEFirewallBehaviorSetWafAttributesRequest",
            "property": "mode"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorTagEventTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorTagEvent",
            "property": "type"
          },
          {
            "schema": "EDGEFirewallBehaviorTagEventRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorTagEventAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorTagEvent",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallBehaviorTagEventAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallBehaviorTagEventRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallModulesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEFirewallRequest",
            "property": "modules"
          },
          {
            "schema": "EDGEPatchedFirewallRequest",
            "property": "modules"
          }
        ],
        "composition_patterns": []
      },
      "EDGEType528Enum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGENetworkList",
            "property": "type"
          },
          {
            "schema": "EDGENetworkListDetail",
            "property": "type"
          },
          {
            "schema": "EDGENetworkListDetailRequest",
            "property": "type"
          },
          {
            "schema": "EDGEPatchedNetworkListDetailRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "EDGEOriginIPACL": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEOriginShieldConfig",
            "property": "origin_ip_acl"
          }
        ],
        "composition_patterns": []
      },
      "EDGEHMAC": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEOriginShieldConfig",
            "property": "hmac"
          }
        ],
        "composition_patterns": []
      },
      "EDGEOriginIPACLRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEOriginShieldConfigRequest",
            "property": "origin_ip_acl"
          }
        ],
        "composition_patterns": []
      },
      "EDGEHMACRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEOriginShieldConfigRequest",
            "property": "hmac"
          }
        ],
        "composition_patterns": []
      },
      "EDGECodeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPage",
            "property": "code"
          },
          {
            "schema": "EDGEPageRequest",
            "property": "code"
          }
        ],
        "composition_patterns": []
      },
      "EDGEPagePolymorphic": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPage",
            "property": "page"
          }
        ],
        "composition_patterns": []
      },
      "EDGEPageConnectorAttributes": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPageConnector",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEPageConnectorAttributesRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPageConnectorRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEPagePolymorphicRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPageRequest",
            "property": "page"
          }
        ],
        "composition_patterns": []
      },
      "EDGEDeploymentStrategyRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPatchedWorkloadDeploymentRequest",
            "property": "strategy"
          },
          {
            "schema": "EDGEWorkloadDeploymentRequest",
            "property": "strategy"
          }
        ],
        "composition_patterns": []
      },
      "EDGEMTLSRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEPatchedWorkloadRequest",
            "property": "mtls"
          },
          {
            "schema": "EDGEWorkloadRequest",
            "property": "mtls"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationDeviceGroups": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseApplicationDeviceGroups",
            "property": "data"
          },
          {
            "schema": "EDGEResponseAsyncApplicationDeviceGroups",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveApplicationDeviceGroups",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationFunctionInstance": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseApplicationFunctionInstance",
            "property": "data"
          },
          {
            "schema": "EDGEResponseAsyncApplicationFunctionInstance",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveApplicationFunctionInstance",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationRequestPhaseRuleEngine": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseApplicationRequestPhaseRuleEngine",
            "property": "data"
          },
          {
            "schema": "EDGEResponseAsyncApplicationRequestPhaseRuleEngine",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEApplicationResponsePhaseRuleEngine": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseApplicationResponsePhaseRuleEngine",
            "property": "data"
          },
          {
            "schema": "EDGEResponseAsyncApplicationResponsePhaseRuleEngine",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEConnectorPolymorphic": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncConnectorPolymorphic",
            "property": "data"
          },
          {
            "schema": "EDGEResponseConnectorPolymorphic",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveConnectorPolymorphic",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGECustomPage": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncCustomPage",
            "property": "data"
          },
          {
            "schema": "EDGEResponseCustomPage",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveCustomPage",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallFunctionInstance": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncFirewallFunctionInstance",
            "property": "data"
          },
          {
            "schema": "EDGEResponseFirewallFunctionInstance",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveFirewallFunctionInstance",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEFirewallRuleEngine": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncFirewallRuleEngine",
            "property": "data"
          },
          {
            "schema": "EDGEResponseFirewallRuleEngine",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveFirewallRuleEngine",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEEdgeFunctions": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncFunctionsDoc",
            "property": "data"
          },
          {
            "schema": "EDGEResponseFunctionsDoc",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveFunctionsDoc",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEPurgeInput": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncPurgeInput",
            "property": "data"
          },
          {
            "schema": "EDGEResponsePurgeInput",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFRule": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseAsyncWAFRule",
            "property": "data"
          },
          {
            "schema": "EDGEResponseRetrieveWAFRule",
            "property": "data"
          },
          {
            "schema": "EDGEResponseWAFRule",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestCacheSetting",
            "property": "browser_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField",
            "property": "cache_vary_by_querystring"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField",
            "property": "cache_vary_by_cookies"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField",
            "property": "cache_vary_by_devices"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField",
            "property": "stale_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField",
            "property": "large_file_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestSerializerMetaclassModulesField",
            "property": "tiered_cache"
          }
        ],
        "composition_patterns": []
      },
      "EDGEResponseBadRequestSerializerMetaclassStrategyField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEResponseBadRequestWorkloadDeployment",
            "property": "strategy"
          }
        ],
        "composition_patterns": []
      },
      "EDGEThreatEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEThresholdsConfigField",
            "property": "threat"
          },
          {
            "schema": "EDGEThresholdsConfigFieldRequest",
            "property": "threat"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFEngineSettingsAttributesField": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWAFEngineSettingsField",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFEngineSettingsAttributesFieldRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWAFEngineSettingsFieldRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFExceptionGenericConditionMatchEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWAFExceptionGenericCondition",
            "property": "match"
          },
          {
            "schema": "EDGEWAFExceptionGenericConditionRequest",
            "property": "match"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWAFExceptionSpecificConditionOnName",
            "property": "match"
          },
          {
            "schema": "EDGEWAFExceptionSpecificConditionOnNameRequest",
            "property": "match"
          }
        ],
        "composition_patterns": []
      },
      "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWAFExceptionSpecificConditionOnValue",
            "property": "match"
          },
          {
            "schema": "EDGEWAFExceptionSpecificConditionOnValueRequest",
            "property": "match"
          }
        ],
        "composition_patterns": []
      },
      "EDGEMTLS": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWorkload",
            "property": "mtls"
          }
        ],
        "composition_patterns": []
      },
      "EDGEDeploymentStrategy": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGEWorkloadDeployment",
            "property": "strategy"
          }
        ],
        "composition_patterns": []
      },
      "METRICSOrderDirectionEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSBaseQuery",
            "property": "order_direction"
          },
          {
            "schema": "METRICSBaseQueryRequest",
            "property": "order_direction"
          }
        ],
        "composition_patterns": []
      },
      "METRICSScopeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSDashboard",
            "property": "scope"
          },
          {
            "schema": "METRICSDashboardRequest",
            "property": "scope"
          },
          {
            "schema": "METRICSFolder",
            "property": "scope"
          },
          {
            "schema": "METRICSFolderRequest",
            "property": "scope"
          },
          {
            "schema": "METRICSLibraryReportRequest",
            "property": "scope"
          },
          {
            "schema": "METRICSPatchedDashboardRequest",
            "property": "scope"
          },
          {
            "schema": "METRICSPatchedFolderRequest",
            "property": "scope"
          },
          {
            "schema": "METRICSResponseListDashboard",
            "property": "scope"
          },
          {
            "schema": "METRICSResponseListFolder",
            "property": "scope"
          }
        ],
        "composition_patterns": [
          {
            "type": "shared_component",
            "usage_count": 9,
            "description": "METRICSScopeEnum is widely reused across schemas"
          }
        ]
      },
      "METRICSTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSLibraryReportRequest",
            "property": "type"
          },
          {
            "schema": "METRICSReport",
            "property": "type"
          },
          {
            "schema": "METRICSReportRequest",
            "property": "type"
          },
          {
            "schema": "METRICSResponseListReport",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "METRICSAggregationTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSLibraryReportRequest",
            "property": "aggregation_type"
          },
          {
            "schema": "METRICSReport",
            "property": "aggregation_type"
          },
          {
            "schema": "METRICSReportRequest",
            "property": "aggregation_type"
          },
          {
            "schema": "METRICSResponseListReport",
            "property": "aggregation_type"
          }
        ],
        "composition_patterns": []
      },
      "METRICSDataUnitEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSLibraryReportRequest",
            "property": "data_unit"
          },
          {
            "schema": "METRICSReport",
            "property": "data_unit"
          },
          {
            "schema": "METRICSReportRequest",
            "property": "data_unit"
          },
          {
            "schema": "METRICSResponseListReport",
            "property": "data_unit"
          }
        ],
        "composition_patterns": []
      },
      "METRICSComparisonTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSLibraryReportRequest",
            "property": "comparison_type"
          },
          {
            "schema": "METRICSReport",
            "property": "comparison_type"
          },
          {
            "schema": "METRICSReportRequest",
            "property": "comparison_type"
          },
          {
            "schema": "METRICSResponseListReport",
            "property": "comparison_type"
          }
        ],
        "composition_patterns": []
      },
      "METRICSOrder": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSResponseAsyncOrder",
            "property": "data"
          },
          {
            "schema": "METRICSResponseOrder",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "METRICSRow": {
        "references": [],
        "referenced_by": [
          {
            "schema": "METRICSResponseAsyncRow",
            "property": "data"
          },
          {
            "schema": "METRICSResponseRetrieveRow",
            "property": "data"
          },
          {
            "schema": "METRICSResponseRow",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGESQLOpenAPISchema": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGESQLResponseAsyncOpenAPISchema",
            "property": "data"
          },
          {
            "schema": "EDGESQLResponseOpenAPISchema",
            "property": "data"
          },
          {
            "schema": "EDGESQLResponseRetrieveOpenAPISchema",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "EDGESQLSQLResult": {
        "references": [],
        "referenced_by": [
          {
            "schema": "EDGESQLResponseAsyncSQLResult",
            "property": "data"
          },
          {
            "schema": "EDGESQLResponseSQLResult",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "PAYMENTSCredit": {
        "references": [],
        "referenced_by": [
          {
            "schema": "PAYMENTSResponseAsyncCredit",
            "property": "data"
          },
          {
            "schema": "PAYMENTSResponseCredit",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "PAYMENTSPaymentMethod": {
        "references": [],
        "referenced_by": [
          {
            "schema": "PAYMENTSResponseAsyncPaymentMethod",
            "property": "data"
          },
          {
            "schema": "PAYMENTSResponsePaymentMethod",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "ACCOUNTSTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ACCOUNTSBrand",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSBrandRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSCreateBrandRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSCreateOrganizationRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSCreateResellerRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSCreateWorkspaceRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSOrganization",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSOrganizationRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSPatchedBrandRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSPatchedOrganizationRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSPatchedResellerRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSPatchedWorkspaceRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSReseller",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSResellerRequest",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSWorkspace",
            "property": "type"
          },
          {
            "schema": "ACCOUNTSWorkspaceRequest",
            "property": "type"
          }
        ],
        "composition_patterns": [
          {
            "type": "shared_component",
            "usage_count": 16,
            "description": "ACCOUNTSTypeEnum is widely reused across schemas"
          }
        ]
      },
      "ACCOUNTSCurrencyIsoCodeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ACCOUNTSCreateResellerRequest",
            "property": "currency_iso_code"
          },
          {
            "schema": "ACCOUNTSPatchedResellerRequest",
            "property": "currency_iso_code"
          },
          {
            "schema": "ACCOUNTSReseller",
            "property": "currency_iso_code"
          },
          {
            "schema": "ACCOUNTSResellerRequest",
            "property": "currency_iso_code"
          }
        ],
        "composition_patterns": []
      },
      "ACCOUNTSAccount": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ACCOUNTSResponseAccount",
            "property": "data"
          },
          {
            "schema": "ACCOUNTSResponseAsyncAccount",
            "property": "data"
          },
          {
            "schema": "ACCOUNTSResponseRetrieveAccount",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "ACCOUNTSAccountInfo": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ACCOUNTSResponseAccountInfo",
            "property": "data"
          },
          {
            "schema": "ACCOUNTSResponseAsyncAccountInfo",
            "property": "data"
          },
          {
            "schema": "ACCOUNTSResponseRetrieveAccountInfo",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "STORAGEEdgeAccessEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "STORAGEBucket",
            "property": "edge_access"
          },
          {
            "schema": "STORAGEBucketCreate",
            "property": "edge_access"
          },
          {
            "schema": "STORAGEBucketCreateRequest",
            "property": "edge_access"
          },
          {
            "schema": "STORAGEPatchedBucketRequest",
            "property": "edge_access"
          }
        ],
        "composition_patterns": []
      },
      "STORAGECredential": {
        "references": [],
        "referenced_by": [
          {
            "schema": "STORAGEResponseAsyncCredential",
            "property": "data"
          },
          {
            "schema": "STORAGEResponseCredential",
            "property": "data"
          },
          {
            "schema": "STORAGEResponseRetrieveCredential",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "STORAGEObjectResponseData": {
        "references": [],
        "referenced_by": [
          {
            "schema": "STORAGESuccessObjectOperation",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "STORAGEObjectResponseAsyncData": {
        "references": [],
        "referenced_by": [
          {
            "schema": "STORAGESuccessObjectOperationAsync",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "DATADataSourceEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAInputDataSource",
            "property": "data_source"
          },
          {
            "schema": "DATAInputDataSourceRequest",
            "property": "data_source"
          }
        ],
        "composition_patterns": []
      },
      "DATAInputDataSourceAttributesTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAInputDataSourceAttributes",
            "property": "type"
          },
          {
            "schema": "DATAInputDataSourceAttributesRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "DATAOutputTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAOutput",
            "property": "type"
          },
          {
            "schema": "DATAOutputRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "DATAOutputPolymorphic": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAOutput",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATAOutputPolymorphicRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAOutputRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATADataStream": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAResponseAsyncDataStream",
            "property": "data"
          },
          {
            "schema": "DATAResponseDataStream",
            "property": "data"
          },
          {
            "schema": "DATAResponseRetrieveDataStream",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "DATATemplate": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAResponseAsyncTemplate",
            "property": "data"
          },
          {
            "schema": "DATAResponseRetrieveTemplate",
            "property": "data"
          },
          {
            "schema": "DATAResponseTemplate",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "DATAContentTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATAS3Endpoint",
            "property": "content_type"
          },
          {
            "schema": "DATAS3EndpointRequest",
            "property": "content_type"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformFilterWorkloadsAttributesTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformFilterWorkloadsAttributes",
            "property": "type"
          },
          {
            "schema": "DATATransformFilterWorkloadsAttributesRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformFilterWorkloads": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformFilterWorkloadsAttributes",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformFilterWorkloadsRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformFilterWorkloadsAttributesRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformRenderTemplateAttributesTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformRenderTemplateAttributes",
            "property": "type"
          },
          {
            "schema": "DATATransformRenderTemplateAttributesRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformRenderTemplate": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformRenderTemplateAttributes",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformRenderTemplateRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformRenderTemplateAttributesRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformSamplingAttributesTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformSamplingAttributes",
            "property": "type"
          },
          {
            "schema": "DATATransformSamplingAttributesRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformSampling": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformSamplingAttributes",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "DATATransformSamplingRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DATATransformSamplingAttributesRequest",
            "property": "attributes"
          }
        ],
        "composition_patterns": []
      },
      "ORCHESTRATORStatusEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORNodes",
            "property": "status"
          },
          {
            "schema": "ORCHESTRATORNodesRequest",
            "property": "status"
          },
          {
            "schema": "ORCHESTRATORPatchedNodesRequest",
            "property": "status"
          },
          {
            "schema": "ORCHESTRATORResponseListNodes",
            "property": "status"
          }
        ],
        "composition_patterns": []
      },
      "ORCHESTRATORStateEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORResponseDeleteNodeServiceBind",
            "property": "state"
          },
          {
            "schema": "ORCHESTRATORResponseDeleteNodes",
            "property": "state"
          },
          {
            "schema": "ORCHESTRATORResponseDeleteServices",
            "property": "state"
          },
          {
            "schema": "ORCHESTRATORResponseNodeGroupsById",
            "property": "state"
          },
          {
            "schema": "ORCHESTRATORResponseNodeServices",
            "property": "state"
          },
          {
            "schema": "ORCHESTRATORResponseNodes",
            "property": "state"
          },
          {
            "schema": "ORCHESTRATORResponseServices",
            "property": "state"
          }
        ],
        "composition_patterns": [
          {
            "type": "shared_component",
            "usage_count": 7,
            "description": "ORCHESTRATORStateEnum is widely reused across schemas"
          }
        ]
      },
      "ORCHESTRATORNodeGroupsById": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORResponseNodeGroupsById",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "ORCHESTRATORNodeServices": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORResponseNodeServices",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "ORCHESTRATORNodeServiceBind": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORResponseRetrieveNodeServiceBind",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "ORCHESTRATORServices": {
        "references": [],
        "referenced_by": [
          {
            "schema": "ORCHESTRATORResponseRetrieveServices",
            "property": "data"
          },
          {
            "schema": "ORCHESTRATORResponseServices",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "VCSPlatform": {
        "references": [],
        "referenced_by": [
          {
            "schema": "VCSIntegration",
            "property": "provider"
          },
          {
            "schema": "VCSResponseListIntegration",
            "property": "provider"
          }
        ],
        "composition_patterns": []
      },
      "VCSContinuousDeployment": {
        "references": [],
        "referenced_by": [
          {
            "schema": "VCSResponseAsyncContinuousDeployment",
            "property": "data"
          },
          {
            "schema": "VCSResponseContinuousDeployment",
            "property": "data"
          },
          {
            "schema": "VCSResponseRetrieveContinuousDeployment",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "VCSExecution": {
        "references": [],
        "referenced_by": [
          {
            "schema": "VCSResponseAsyncExecution",
            "property": "data"
          },
          {
            "schema": "VCSResponseExecution",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "VCSExecutor": {
        "references": [],
        "referenced_by": [
          {
            "schema": "VCSResponseAsyncExecutor",
            "property": "data"
          },
          {
            "schema": "VCSResponseExecutor",
            "property": "data"
          },
          {
            "schema": "VCSResponseRetrieveExecutor",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "VCSExecutionScript": {
        "references": [],
        "referenced_by": [
          {
            "schema": "VCSResponseRetrieveExecutionScript",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "DNSAlgType": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DNSDelegationSigner",
            "property": "algorithm_type"
          },
          {
            "schema": "DNSDelegationSigner",
            "property": "digest_type"
          }
        ],
        "composition_patterns": []
      },
      "DNSAlgTypeRequest": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DNSDelegationSignerRequest",
            "property": "algorithm_type"
          },
          {
            "schema": "DNSDelegationSignerRequest",
            "property": "digest_type"
          }
        ],
        "composition_patterns": []
      },
      "DNSTypeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DNSPatchedRecordRequest",
            "property": "type"
          },
          {
            "schema": "DNSRecord",
            "property": "type"
          },
          {
            "schema": "DNSRecordRequest",
            "property": "type"
          }
        ],
        "composition_patterns": []
      },
      "DNSDNSSEC": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DNSResponseAsyncDNSSEC",
            "property": "data"
          },
          {
            "schema": "DNSResponseDNSSEC",
            "property": "data"
          },
          {
            "schema": "DNSResponseRetrieveDNSSEC",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "DNSZone": {
        "references": [],
        "referenced_by": [
          {
            "schema": "DNSResponseAsyncZone",
            "property": "data"
          },
          {
            "schema": "DNSResponseRetrieveZone",
            "property": "data"
          },
          {
            "schema": "DNSResponseZone",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "TLSChallengeEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "TLSCertificateRequestRequest",
            "property": "challenge"
          }
        ],
        "composition_patterns": []
      },
      "TLSAuthorityEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "TLSCertificateRequestRequest",
            "property": "authority"
          }
        ],
        "composition_patterns": []
      },
      "TLSCertificate": {
        "references": [],
        "referenced_by": [
          {
            "schema": "TLSResponseAsyncCertificate",
            "property": "data"
          },
          {
            "schema": "TLSResponseCertificate",
            "property": "data"
          },
          {
            "schema": "TLSResponseRetrieveCertificate",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "TLSCertificateRevocationList": {
        "references": [],
        "referenced_by": [
          {
            "schema": "TLSResponseAsyncCertificateRevocationList",
            "property": "data"
          },
          {
            "schema": "TLSResponseCertificateRevocationList",
            "property": "data"
          },
          {
            "schema": "TLSResponseRetrieveCertificateRevocationList",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "MARKETPLACEStateEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "MARKETPLACEResponsePublisher",
            "property": "state"
          }
        ],
        "composition_patterns": []
      },
      "MARKETPLACEPublisher": {
        "references": [],
        "referenced_by": [
          {
            "schema": "MARKETPLACEResponsePublisher",
            "property": "data"
          },
          {
            "schema": "MARKETPLACEResponseRetrievePublisher",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYStateEnum": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseDeleteFavorite",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseDeleteGrant",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseDeleteGroup",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseDeleteServiceToken",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseDeleteUser",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseFavorite",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseGrant",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseGroup",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseGroupMembers",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseServiceToken",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseServiceTokenCreate",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseServiceTokenRenew",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseUser",
            "property": "state"
          },
          {
            "schema": "IDENTITYResponseUserInfo",
            "property": "state"
          }
        ],
        "composition_patterns": [
          {
            "type": "shared_component",
            "usage_count": 14,
            "description": "IDENTITYStateEnum is widely reused across schemas"
          }
        ]
      },
      "IDENTITYFavorite": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseFavorite",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYGrant": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseGrant",
            "property": "data"
          },
          {
            "schema": "IDENTITYResponseRetrieveGrant",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYGroup": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseGroup",
            "property": "data"
          },
          {
            "schema": "IDENTITYResponseRetrieveGroup",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYGroupMembers": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseGroupMembers",
            "property": "data"
          },
          {
            "schema": "IDENTITYResponseRetrieveGroupMembers",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYServiceToken": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseRetrieveServiceToken",
            "property": "data"
          },
          {
            "schema": "IDENTITYResponseServiceToken",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYUser": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseRetrieveUser",
            "property": "data"
          },
          {
            "schema": "IDENTITYResponseUser",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYUserInfo": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseRetrieveUserInfo",
            "property": "data"
          },
          {
            "schema": "IDENTITYResponseUserInfo",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYServiceTokenCreate": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseServiceTokenCreate",
            "property": "data"
          }
        ],
        "composition_patterns": []
      },
      "IDENTITYServiceTokenRenew": {
        "references": [],
        "referenced_by": [
          {
            "schema": "IDENTITYResponseServiceTokenRenew",
            "property": "data"
          }
        ],
        "composition_patterns": []
      }
    },
    "dependencyMatrix": {
      "field_to_field": {
        "USERSDefaultErrorResponse": {},
        "AUTHDefaultErrorResponse": {},
        "AUTHEffectEnum": {},
        "AUTHJSONAPIErrorObject": {},
        "AUTHJSONAPIErrorResponse": {},
        "AUTHJSONAPIErrorSource": {},
        "AUTHLockoutPolicy": {},
        "AUTHLockoutPolicyRequest": {},
        "AUTHLoginRequest": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ]
        },
        "AUTHLoginResponse": {},
        "AUTHMFAToken": {},
        "AUTHPaginatedPolicyList": {},
        "AUTHPaginatedTOTPDeviceListList": {},
        "AUTHPatchedPolicyRequest": {},
        "AUTHPolicy": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "AUTHPolicyRequest": {},
        "AUTHPolicyRule": {
          "effect": [
            {
              "type": "schema_reference",
              "target": "AUTHEffectEnum",
              "severity": "medium"
            }
          ],
          "condition": [
            {
              "type": "schema_reference",
              "target": "AUTHPolicyRuleCondition",
              "severity": "medium"
            }
          ]
        },
        "AUTHPolicyRuleCondition": {},
        "AUTHPolicyRuleConditionRequest": {},
        "AUTHPolicyRuleRequest": {
          "effect": [
            {
              "type": "schema_reference",
              "target": "AUTHEffectEnum",
              "severity": "medium"
            }
          ],
          "condition": [
            {
              "type": "schema_reference",
              "target": "AUTHPolicyRuleConditionRequest",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncDeletePolicy": {},
        "AUTHResponseAsyncDeleteTOTPDeviceCreate": {},
        "AUTHResponseAsyncLockoutPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHLockoutPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncLogin": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHLoginResponse",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncSessionTimeoutPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHSessionTimeoutPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncTOTPDeviceCreate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHTOTPDeviceCreate",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncToken": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHToken",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseAsyncTokenPair": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHTokenPair",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseBadRequestPolicy": {},
        "AUTHResponseDeletePolicy": {},
        "AUTHResponseDeleteTOTPDeviceCreate": {},
        "AUTHResponseLockoutPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHLockoutPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseLogin": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHLoginResponse",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponsePolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseRetrieveLockoutPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHLockoutPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseRetrievePolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseRetrieveSessionTimeoutPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHSessionTimeoutPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseSessionTimeoutPolicy": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHSessionTimeoutPolicy",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseTOTPDeviceCreate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHTOTPDeviceCreate",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseToken": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHToken",
              "severity": "medium"
            }
          ]
        },
        "AUTHResponseTokenPair": {
          "data": [
            {
              "type": "schema_reference",
              "target": "AUTHTokenPair",
              "severity": "medium"
            }
          ]
        },
        "AUTHSessionTimeoutPolicy": {},
        "AUTHSessionTimeoutPolicyRequest": {},
        "AUTHStateExecutedResponse": {},
        "AUTHStatePendingResponse": {},
        "AUTHTOTPDeviceCreate": {},
        "AUTHTOTPDeviceList": {},
        "AUTHTOTPVerificationRequest": {},
        "AUTHToken": {},
        "AUTHTokenPair": {},
        "AUTHTokenRequest": {},
        "AUTHuser_login_method_response": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEAWS4HMAC": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEAWS4HMACTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEAWS4HMACAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEAWS4HMACAttributes": {},
        "EDGEAWS4HMACAttributesRequest": {},
        "EDGEAWS4HMACRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEAWS4HMACTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEAWS4HMACAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEAWS4HMACTypeEnum": {},
        "EDGEAddress": {},
        "EDGEAddressLoadBalancerModule": {},
        "EDGEAddressLoadBalancerModuleRequest": {},
        "EDGEAddressModules": {
          "load_balancer": [
            {
              "type": "schema_reference",
              "target": "EDGEAddressLoadBalancerModule",
              "severity": "medium"
            }
          ]
        },
        "EDGEAddressModulesRequest": {
          "load_balancer": [
            {
              "type": "schema_reference",
              "target": "EDGEAddressLoadBalancerModuleRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEAddressRequest": {},
        "EDGEApplication": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationModules",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationAcceleratorModule": {},
        "EDGEApplicationAcceleratorModuleRequest": {},
        "EDGEApplicationDeviceGroups": {},
        "EDGEApplicationDeviceGroupsRequest": {},
        "EDGEApplicationFunctionInstance": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationFunctionInstanceRequest": {},
        "EDGEApplicationModules": {},
        "EDGEApplicationModulesRequest": {},
        "EDGEApplicationRequest": {
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationModulesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRequestPhaseRuleEngine": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRequestPhaseRuleEngineOrderRequest": {},
        "EDGEApplicationRequestPhaseRuleEngineRequest": {},
        "EDGEApplicationResponsePhaseRuleEngine": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationResponsePhaseRuleEngineOrderRequest": {},
        "EDGEApplicationResponsePhaseRuleEngineRequest": {},
        "EDGEApplicationRuleEngineAddHeader": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddHeaderAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineAddHeaderAttributes": {},
        "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineAddHeaderRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddHeaderAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineAddHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineAddRequestCookie": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddRequestCookieTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddRequestCookieAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineAddRequestCookieAttributes": {},
        "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {},
        "EDGEApplicationRuleEngineAddRequestCookieRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddRequestCookieTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {},
        "EDGEApplicationRuleEngineAddResponseHeader": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddResponseHeaderAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {},
        "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineCaptureMatchGroups": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {},
        "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {},
        "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {},
        "EDGEApplicationRuleEngineFilterHeader": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterHeaderAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineFilterHeaderAttributes": {},
        "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineFilterHeaderRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterHeaderAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineFilterRequestCookie": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterRequestCookieAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {},
        "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {},
        "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {},
        "EDGEApplicationRuleEngineFilterResponseHeader": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterResponseHeaderAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {},
        "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineNoArgs": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineNoArgsTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineNoArgsRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineNoArgsTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineNoArgsTypeEnum": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviors": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsShared": {},
        "EDGEApplicationRuleEngineResponseNoArgs": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineResponseNoArgsTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineResponseNoArgsRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineResponseNoArgsTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviors": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsShared": {},
        "EDGEApplicationRuleEngineResponseString": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineResponseStringTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineResponseStringAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineResponseStringAttributes": {},
        "EDGEApplicationRuleEngineResponseStringAttributesRequest": {},
        "EDGEApplicationRuleEngineResponseStringRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineResponseStringTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineResponseStringAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineResponseStringTypeEnum": {},
        "EDGEApplicationRuleEngineRewriteRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGETypeF11Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineRewriteRequestAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineRewriteRequestAttributes": {},
        "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {},
        "EDGEApplicationRuleEngineRewriteRequestRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGETypeF11Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineRewriteRequestAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineRunFunction": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType689Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineRunFunctionAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineRunFunctionAttributes": {},
        "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {},
        "EDGEApplicationRuleEngineRunFunctionRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType689Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineRunFunctionAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineRunFunctionResponse": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType689Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineRunFunctionResponseAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {},
        "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {},
        "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType689Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetCachePolicy": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCachePolicyTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCachePolicyAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetCachePolicyAttributes": {},
        "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {},
        "EDGEApplicationRuleEngineSetCachePolicyRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCachePolicyTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {},
        "EDGEApplicationRuleEngineSetConnector": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetConnectorTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetConnectorAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetConnectorAttributes": {},
        "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {},
        "EDGEApplicationRuleEngineSetConnectorRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetConnectorTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetConnectorAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetConnectorTypeEnum": {},
        "EDGEApplicationRuleEngineSetCookie": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCookieTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCookieAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetCookieAttributes": {},
        "EDGEApplicationRuleEngineSetCookieAttributesRequest": {},
        "EDGEApplicationRuleEngineSetCookieRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCookieTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetCookieAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetCookieTypeEnum": {},
        "EDGEApplicationRuleEngineSetOrigin": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetOriginTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetOriginAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetOriginAttributes": {},
        "EDGEApplicationRuleEngineSetOriginAttributesRequest": {},
        "EDGEApplicationRuleEngineSetOriginRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetOriginTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineSetOriginAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineSetOriginTypeEnum": {},
        "EDGEApplicationRuleEngineString": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineStringTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineStringAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineStringAttributes": {},
        "EDGEApplicationRuleEngineStringAttributesRequest": {},
        "EDGEApplicationRuleEngineStringRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineStringTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRuleEngineStringAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEApplicationRuleEngineStringTypeEnum": {},
        "EDGEBehaviorA69Enum": {},
        "EDGEBlankEnum": {},
        "EDGEBrowserCacheModule": {},
        "EDGEBrowserCacheModuleBehaviorEnum": {},
        "EDGEBrowserCacheModuleRequest": {},
        "EDGECacheModule": {},
        "EDGECacheModuleRequest": {},
        "EDGECacheSetting": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEBrowserCacheModule",
              "severity": "medium"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsModules",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingRequest": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEBrowserCacheModuleRequest",
              "severity": "medium"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsModulesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsApplicationAcceleratorModule": {
          "cache_vary_by_querystring": [
            {
              "type": "schema_reference",
              "target": "EDGECacheVaryByQuerystringModule",
              "severity": "medium"
            }
          ],
          "cache_vary_by_cookies": [
            {
              "type": "schema_reference",
              "target": "EDGECacheVaryByCookiesModule",
              "severity": "medium"
            }
          ],
          "cache_vary_by_devices": [
            {
              "type": "schema_reference",
              "target": "EDGECacheVaryByDevicesModule",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
          "cache_vary_by_querystring": [
            {
              "type": "schema_reference",
              "target": "EDGECacheVaryByQuerystringModuleRequest",
              "severity": "medium"
            }
          ],
          "cache_vary_by_cookies": [
            {
              "type": "schema_reference",
              "target": "EDGECacheVaryByCookiesModuleRequest",
              "severity": "medium"
            }
          ],
          "cache_vary_by_devices": [
            {
              "type": "schema_reference",
              "target": "EDGECacheVaryByDevicesModuleRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsEdgeCacheModule": {
          "stale_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEStateCacheModule",
              "severity": "medium"
            }
          ],
          "large_file_cache": [
            {
              "type": "schema_reference",
              "target": "EDGELargeFileCacheModule",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsEdgeCacheModuleBehaviorEnum": {},
        "EDGECacheSettingsEdgeCacheModuleRequest": {
          "stale_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEStateCacheModuleRequest",
              "severity": "medium"
            }
          ],
          "large_file_cache": [
            {
              "type": "schema_reference",
              "target": "EDGELargeFileCacheModuleRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsModules": {
          "edge_cache": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsEdgeCacheModule",
              "severity": "medium"
            }
          ],
          "application_accelerator": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsApplicationAcceleratorModule",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsModulesRequest": {
          "edge_cache": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsEdgeCacheModuleRequest",
              "severity": "medium"
            }
          ],
          "application_accelerator": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsApplicationAcceleratorModuleRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsTieredCacheModule": {
          "topology": [
            {
              "type": "schema_reference",
              "target": "EDGETopologyEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheSettingsTieredCacheModuleBehaviorEnum": {},
        "EDGECacheSettingsTieredCacheModuleRequest": {
          "topology": [
            {
              "type": "schema_reference",
              "target": "EDGETopologyEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGECacheVaryByCookiesModule": {},
        "EDGECacheVaryByCookiesModuleRequest": {},
        "EDGECacheVaryByDevicesModule": {},
        "EDGECacheVaryByDevicesModuleBehaviorEnum": {},
        "EDGECacheVaryByDevicesModuleRequest": {},
        "EDGECacheVaryByMethodEnum": {},
        "EDGECacheVaryByQuerystringModule": {},
        "EDGECacheVaryByQuerystringModuleRequest": {},
        "EDGECiphersEnum": {},
        "EDGECloneApplicationRequest": {},
        "EDGECloneFirewallRequest": {},
        "EDGECloneWAFRequest": {},
        "EDGECodeEnum": {},
        "EDGEConditionalEnum": {},
        "EDGEConnectorHTTP": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorHTTPAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorHTTPAttributes": {},
        "EDGEConnectorHTTPAttributesRequest": {},
        "EDGEConnectorHTTPRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorHTTPAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorLiveIngest": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorLiveIngestAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorLiveIngestAttributes": {
          "region": [
            {
              "type": "schema_reference",
              "target": "EDGERegionEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorLiveIngestAttributesRequest": {
          "region": [
            {
              "type": "schema_reference",
              "target": "EDGERegionEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorLiveIngestRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorLiveIngestAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorPolymorphic": {},
        "EDGEConnectorPolymorphicRequest": {},
        "EDGEConnectorStorage": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorStorageAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEConnectorStorageAttributes": {},
        "EDGEConnectorStorageAttributesRequest": {},
        "EDGEConnectorStorageRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorStorageAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGECustomPage": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGECustomPageRequest": {},
        "EDGEDefaultDeploymentStrategy": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEDefaultDeploymentStrategyAttrs",
              "severity": "medium"
            }
          ]
        },
        "EDGEDefaultDeploymentStrategyAttrs": {},
        "EDGEDefaultDeploymentStrategyAttrsRequest": {},
        "EDGEDefaultDeploymentStrategyRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEDefaultDeploymentStrategyAttrsRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEDefaultErrorResponse": {},
        "EDGEDeploymentStrategy": {},
        "EDGEDeploymentStrategyDefaultDeploymentStrategy": {},
        "EDGEDeploymentStrategyDefaultDeploymentStrategyRequest": {},
        "EDGEDeploymentStrategyRequest": {},
        "EDGEDeploymentStrategyShared": {},
        "EDGEDnsResolutionEnum": {},
        "EDGEEdgeApplicationCriterionField": {
          "conditional": [
            {
              "type": "schema_reference",
              "target": "EDGEConditionalEnum",
              "severity": "medium"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeApplicationCriterionFieldVariableEnum",
              "severity": "medium"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "target": "EDGEOperator565Enum",
              "severity": "medium"
            }
          ]
        },
        "EDGEEdgeApplicationCriterionFieldRequest": {
          "conditional": [
            {
              "type": "schema_reference",
              "target": "EDGEConditionalEnum",
              "severity": "medium"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeApplicationCriterionFieldVariableEnum",
              "severity": "medium"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "target": "EDGEOperator565Enum",
              "severity": "medium"
            }
          ]
        },
        "EDGEEdgeApplicationCriterionFieldVariableEnum": {},
        "EDGEEdgeApplicationCriterionPolymorphicArgument": {},
        "EDGEEdgeApplicationCriterionPolymorphicArgumentRequest": {},
        "EDGEEdgeFirewallCriterionField": {
          "conditional": [
            {
              "type": "schema_reference",
              "target": "EDGEConditionalEnum",
              "severity": "medium"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeFirewallCriterionFieldVariableEnum",
              "severity": "medium"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "target": "EDGEOperator565Enum",
              "severity": "medium"
            }
          ]
        },
        "EDGEEdgeFirewallCriterionFieldRequest": {
          "conditional": [
            {
              "type": "schema_reference",
              "target": "EDGEConditionalEnum",
              "severity": "medium"
            }
          ],
          "variable": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeFirewallCriterionFieldVariableEnum",
              "severity": "medium"
            }
          ],
          "operator": [
            {
              "type": "schema_reference",
              "target": "EDGEOperator565Enum",
              "severity": "medium"
            }
          ]
        },
        "EDGEEdgeFirewallCriterionFieldVariableEnum": {},
        "EDGEEdgeFirewallCriterionPolymorphicArgument": {},
        "EDGEEdgeFirewallCriterionPolymorphicArgumentRequest": {},
        "EDGEEdgeFunctionModule": {},
        "EDGEEdgeFunctionModuleRequest": {},
        "EDGEEdgeFunctions": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEEdgeFunctionsRequest": {},
        "EDGEEngineVersionEnum": {},
        "EDGEExecutionEnvironmentEnum": {},
        "EDGEFirewall": {
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallModules",
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorNoArguments": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorNoArgumentsTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorNoArgumentsRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorNoArgumentsTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorNoArgumentsTypeEnum": {},
        "EDGEFirewallBehaviorRunFunction": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType689Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorRunFunctionAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorRunFunctionAttributes": {},
        "EDGEFirewallBehaviorRunFunctionAttributesRequest": {},
        "EDGEFirewallBehaviorRunFunctionRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType689Enum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorRunFunctionAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetCustomResponse": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetCustomResponseTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetCustomResponseAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetCustomResponseAttributes": {},
        "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {},
        "EDGEFirewallBehaviorSetCustomResponseRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetCustomResponseTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetCustomResponseAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {},
        "EDGEFirewallBehaviorSetRateLimit": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetRateLimitTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetRateLimitAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetRateLimitAttributes": {
          "limit_by": [
            {
              "type": "schema_reference",
              "target": "EDGELimitByEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
          "limit_by": [
            {
              "type": "schema_reference",
              "target": "EDGELimitByEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetRateLimitAttributesTypeEnum": {},
        "EDGEFirewallBehaviorSetRateLimitRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetRateLimitTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetRateLimitAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetRateLimitTypeEnum": {},
        "EDGEFirewallBehaviorSetWaf": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetWafTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetWafAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetWafAttributes": {
          "mode": [
            {
              "type": "schema_reference",
              "target": "EDGEModeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetWafAttributesRequest": {
          "mode": [
            {
              "type": "schema_reference",
              "target": "EDGEModeEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetWafRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetWafTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorSetWafAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorSetWafTypeEnum": {},
        "EDGEFirewallBehaviorTagEvent": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorTagEventTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorTagEventAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorTagEventAttributes": {},
        "EDGEFirewallBehaviorTagEventAttributesRequest": {},
        "EDGEFirewallBehaviorTagEventRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorTagEventTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallBehaviorTagEventAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallBehaviorTagEventTypeEnum": {},
        "EDGEFirewallBehaviors": {},
        "EDGEFirewallBehaviorsFirewallBehaviorNoArguments": {},
        "EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorRunFunction": {},
        "EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetWaf": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorTagEvent": {},
        "EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest": {},
        "EDGEFirewallBehaviorsRequest": {},
        "EDGEFirewallBehaviorsShared": {},
        "EDGEFirewallFunctionInstance": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallFunctionInstanceRequest": {},
        "EDGEFirewallModule": {},
        "EDGEFirewallModuleRequest": {},
        "EDGEFirewallModules": {},
        "EDGEFirewallModulesRequest": {},
        "EDGEFirewallRequest": {
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallModulesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallRuleEngine": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEFirewallRuleEngineOrderRequest": {},
        "EDGEFirewallRuleEngineRequest": {},
        "EDGEHMAC": {},
        "EDGEHMACPolymorphic": {},
        "EDGEHMACPolymorphicRequest": {},
        "EDGEHMACRequest": {},
        "EDGEHTTPConnectionOptions": {},
        "EDGEHTTPConnectionOptionsRequest": {},
        "EDGEHTTPModules": {},
        "EDGEHTTPModulesRequest": {},
        "EDGEHttpProtocol": {},
        "EDGEHttpProtocolRequest": {},
        "EDGEHttpVersionPolicyEnum": {},
        "EDGEImageProcessorModule": {},
        "EDGEImageProcessorModuleRequest": {},
        "EDGEInfrastructureEnum": {},
        "EDGEJSONAPIErrorObject": {},
        "EDGEJSONAPIErrorResponse": {},
        "EDGEJSONAPIErrorSource": {},
        "EDGELargeFileCacheModule": {},
        "EDGELargeFileCacheModuleRequest": {},
        "EDGELayerEnum": {},
        "EDGELimitByEnum": {},
        "EDGELoadBalancerModule": {},
        "EDGELoadBalancerModuleConfig": {},
        "EDGELoadBalancerModuleConfigRequest": {},
        "EDGELoadBalancerModuleRequest": {},
        "EDGEMTLS": {},
        "EDGEMTLSRequest": {},
        "EDGEMethodEnum": {},
        "EDGEMinimumVersionEnum": {},
        "EDGEModeEnum": {},
        "EDGENetworkList": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType528Enum",
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGENetworkListDetail": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType528Enum",
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGENetworkListDetailRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType528Enum",
              "severity": "medium"
            }
          ]
        },
        "EDGENullEnum": {},
        "EDGEOperator565Enum": {},
        "EDGEOriginIPACL": {},
        "EDGEOriginIPACLRequest": {},
        "EDGEOriginShieldConfig": {
          "origin_ip_acl": [
            {
              "type": "schema_reference",
              "target": "EDGEOriginIPACL",
              "severity": "medium"
            }
          ],
          "hmac": [
            {
              "type": "schema_reference",
              "target": "EDGEHMAC",
              "severity": "medium"
            }
          ]
        },
        "EDGEOriginShieldConfigRequest": {
          "origin_ip_acl": [
            {
              "type": "schema_reference",
              "target": "EDGEOriginIPACLRequest",
              "severity": "medium"
            }
          ],
          "hmac": [
            {
              "type": "schema_reference",
              "target": "EDGEHMACRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEOriginShieldModule": {},
        "EDGEOriginShieldModuleRequest": {},
        "EDGEPage": {
          "code": [
            {
              "type": "schema_reference",
              "target": "EDGECodeEnum",
              "severity": "medium"
            }
          ],
          "page": [
            {
              "type": "schema_reference",
              "target": "EDGEPagePolymorphic",
              "severity": "medium"
            }
          ]
        },
        "EDGEPageConnector": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEPageConnectorAttributes",
              "severity": "medium"
            }
          ]
        },
        "EDGEPageConnectorAttributes": {},
        "EDGEPageConnectorAttributesRequest": {},
        "EDGEPageConnectorRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEPageConnectorAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPagePolymorphic": {},
        "EDGEPagePolymorphicRequest": {},
        "EDGEPageRequest": {
          "code": [
            {
              "type": "schema_reference",
              "target": "EDGECodeEnum",
              "severity": "medium"
            }
          ],
          "page": [
            {
              "type": "schema_reference",
              "target": "EDGEPagePolymorphicRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPaginatedApplicationDeviceGroupsList": {},
        "EDGEPaginatedApplicationFunctionInstanceList": {},
        "EDGEPaginatedApplicationList": {},
        "EDGEPaginatedApplicationRequestPhaseRuleEngineList": {},
        "EDGEPaginatedApplicationResponsePhaseRuleEngineList": {},
        "EDGEPaginatedConnectorPolymorphicList": {},
        "EDGEPaginatedCustomPageList": {},
        "EDGEPaginatedEdgeFunctionsList": {},
        "EDGEPaginatedFirewallFunctionInstanceList": {},
        "EDGEPaginatedFirewallList": {},
        "EDGEPaginatedFirewallRuleEngineList": {},
        "EDGEPaginatedNetworkListList": {},
        "EDGEPaginatedResponseListCacheSettingList": {},
        "EDGEPaginatedWAFList": {},
        "EDGEPaginatedWAFRuleList": {},
        "EDGEPaginatedWorkloadDeploymentList": {},
        "EDGEPaginatedWorkloadList": {},
        "EDGEPatchedApplicationDeviceGroupsRequest": {},
        "EDGEPatchedApplicationFunctionInstanceRequest": {},
        "EDGEPatchedApplicationRequest": {
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationModulesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedApplicationRequestPhaseRuleEngineRequest": {},
        "EDGEPatchedApplicationResponsePhaseRuleEngineRequest": {},
        "EDGEPatchedCacheSettingRequest": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEBrowserCacheModuleRequest",
              "severity": "medium"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsModulesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedConnectorHTTPRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorHTTPAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedConnectorLiveIngestRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorLiveIngestAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedConnectorPolymorphicRequest": {},
        "EDGEPatchedConnectorStorageRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorStorageAttributesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedCustomPageRequest": {},
        "EDGEPatchedEdgeFunctionsRequest": {},
        "EDGEPatchedFirewallFunctionInstanceRequest": {},
        "EDGEPatchedFirewallRequest": {
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallModulesRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedFirewallRuleEngineRequest": {},
        "EDGEPatchedNetworkListDetailRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "EDGEType528Enum",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedWAFRequest": {
          "engine_settings": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFEngineSettingsFieldRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedWAFRuleRequest": {},
        "EDGEPatchedWorkloadDeploymentRequest": {
          "strategy": [
            {
              "type": "schema_reference",
              "target": "EDGEDeploymentStrategyRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEPatchedWorkloadRequest": {
          "mtls": [
            {
              "type": "schema_reference",
              "target": "EDGEMTLSRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEProtocols": {},
        "EDGEProtocolsRequest": {},
        "EDGEPurgeInput": {},
        "EDGEPurgeInputRequest": {},
        "EDGERegionEnum": {},
        "EDGEResponseApplication": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplication",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseApplicationDeviceGroups": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationDeviceGroups",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseApplicationFunctionInstance": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationFunctionInstance",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseApplicationRequestPhaseRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRequestPhaseRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseApplicationResponsePhaseRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationResponsePhaseRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncApplication": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplication",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncApplicationDeviceGroups": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationDeviceGroups",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncApplicationFunctionInstance": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationFunctionInstance",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRequestPhaseRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationResponsePhaseRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncCacheSetting": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSetting",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncConnectorPolymorphic": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorPolymorphic",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncCustomPage": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGECustomPage",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncDeleteApplication": {},
        "EDGEResponseAsyncDeleteApplicationDeviceGroups": {},
        "EDGEResponseAsyncDeleteApplicationFunctionInstance": {},
        "EDGEResponseAsyncDeleteApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseAsyncDeleteApplicationResponsePhaseRuleEngine": {},
        "EDGEResponseAsyncDeleteCacheSetting": {},
        "EDGEResponseAsyncDeleteConnectorPolymorphic": {},
        "EDGEResponseAsyncDeleteCustomPage": {},
        "EDGEResponseAsyncDeleteFirewall": {},
        "EDGEResponseAsyncDeleteFirewallFunctionInstance": {},
        "EDGEResponseAsyncDeleteFirewallRuleEngine": {},
        "EDGEResponseAsyncDeleteFunctionsDoc": {},
        "EDGEResponseAsyncDeleteNetworkListDetail": {},
        "EDGEResponseAsyncDeleteWAF": {},
        "EDGEResponseAsyncDeleteWAFRule": {},
        "EDGEResponseAsyncDeleteWorkload": {},
        "EDGEResponseAsyncDeleteWorkloadDeployment": {},
        "EDGEResponseAsyncFirewall": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewall",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncFirewallFunctionInstance": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallFunctionInstance",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncFirewallRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncFunctionsDoc": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeFunctions",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncNetworkListDetail": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGENetworkListDetail",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncPurgeInput": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEPurgeInput",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncWAF": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWAF",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncWAFRule": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFRule",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncWorkload": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWorkload",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseAsyncWorkloadDeployment": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWorkloadDeployment",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseBadRequestApplication": {
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestSerializerMetaclassModulesField",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseBadRequestCacheSetting": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField",
              "severity": "medium"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestSerializerMetaclassModulesField",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {},
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {},
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {},
        "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {},
        "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {},
        "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
          "cache_vary_by_querystring": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField",
              "severity": "medium"
            }
          ],
          "cache_vary_by_cookies": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField",
              "severity": "medium"
            }
          ],
          "cache_vary_by_devices": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
          "stale_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField",
              "severity": "medium"
            }
          ],
          "large_file_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {},
        "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {},
        "EDGEResponseBadRequestSerializerMetaclassModulesField": {
          "edge_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField",
              "severity": "medium"
            }
          ],
          "tiered_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField",
              "severity": "medium"
            }
          ],
          "application_accelerator": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseBadRequestSerializerMetaclassStrategyField": {},
        "EDGEResponseBadRequestWorkloadDeployment": {
          "strategy": [
            {
              "type": "schema_reference",
              "target": "EDGEResponseBadRequestSerializerMetaclassStrategyField",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseConnectorPolymorphic": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorPolymorphic",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseCustomPage": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGECustomPage",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseDeleteApplication": {},
        "EDGEResponseDeleteApplicationFunctionInstance": {},
        "EDGEResponseDeleteApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseDeleteApplicationResponsePhaseRuleEngine": {},
        "EDGEResponseDeleteConnectorPolymorphic": {},
        "EDGEResponseDeleteCustomPage": {},
        "EDGEResponseDeleteFirewall": {},
        "EDGEResponseDeleteFirewallFunctionInstance": {},
        "EDGEResponseDeleteFirewallRuleEngine": {},
        "EDGEResponseDeleteFunctionsDoc": {},
        "EDGEResponseDeleteNetworkListDetail": {},
        "EDGEResponseDeleteWAF": {},
        "EDGEResponseDeleteWAFRule": {},
        "EDGEResponseFirewall": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewall",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseFirewallFunctionInstance": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallFunctionInstance",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseFirewallRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseFunctionsDoc": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeFunctions",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseListCacheSetting": {
          "browser_cache": [
            {
              "type": "schema_reference",
              "target": "EDGEBrowserCacheModule",
              "severity": "medium"
            }
          ],
          "modules": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSettingsModules",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseNetworkListDetail": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGENetworkListDetail",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponsePurgeInput": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEPurgeInput",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveApplication": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplication",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveApplicationDeviceGroups": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationDeviceGroups",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveApplicationFunctionInstance": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationFunctionInstance",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEApplicationRequestPhaseRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveCacheSetting": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGECacheSetting",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveConnectorPolymorphic": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEConnectorPolymorphic",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveCustomPage": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGECustomPage",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveFirewall": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewall",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveFirewallFunctionInstance": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallFunctionInstance",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveFirewallRuleEngine": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEFirewallRuleEngine",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveFunctionsDoc": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEEdgeFunctions",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveNetworkListDetail": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGENetworkListDetail",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveWAF": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWAF",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveWAFRule": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFRule",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveWorkload": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWorkload",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseRetrieveWorkloadDeployment": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWorkloadDeployment",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseWAF": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWAF",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseWAFRule": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFRule",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseWorkload": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWorkload",
              "severity": "medium"
            }
          ]
        },
        "EDGEResponseWorkloadDeployment": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGEWorkloadDeployment",
              "severity": "medium"
            }
          ]
        },
        "EDGERuleIdEnum": {},
        "EDGERulesetsEnum": {},
        "EDGERuntimeEnum": {},
        "EDGESensitivityEnum": {},
        "EDGEServerRoleEnum": {},
        "EDGEStateCacheModule": {},
        "EDGEStateCacheModuleRequest": {},
        "EDGETLSWorkload": {},
        "EDGETLSWorkloadRequest": {},
        "EDGEThreatEnum": {},
        "EDGEThresholdsConfigField": {
          "threat": [
            {
              "type": "schema_reference",
              "target": "EDGEThreatEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEThresholdsConfigFieldRequest": {
          "threat": [
            {
              "type": "schema_reference",
              "target": "EDGEThreatEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGETieredCacheModule": {},
        "EDGETieredCacheModuleRequest": {},
        "EDGETopologyEnum": {},
        "EDGETransportPolicyEnum": {},
        "EDGEType15cEnum": {},
        "EDGEType528Enum": {},
        "EDGEType689Enum": {},
        "EDGETypeF11Enum": {},
        "EDGEVerificationEnum": {},
        "EDGEWAF": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "engine_settings": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFEngineSettingsField",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFEngineSettingsAttributesField": {},
        "EDGEWAFEngineSettingsAttributesFieldRequest": {},
        "EDGEWAFEngineSettingsField": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFEngineSettingsAttributesField",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFEngineSettingsFieldRequest": {
          "attributes": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFEngineSettingsAttributesFieldRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFEngineSettingsFieldTypeEnum": {},
        "EDGEWAFExceptionGenericCondition": {
          "match": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFExceptionGenericConditionMatchEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFExceptionGenericConditionMatchEnum": {},
        "EDGEWAFExceptionGenericConditionRequest": {
          "match": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFExceptionGenericConditionMatchEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFExceptionPolymorphicCondition": {},
        "EDGEWAFExceptionPolymorphicConditionRequest": {},
        "EDGEWAFExceptionSpecificConditionOnName": {
          "match": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFExceptionSpecificConditionOnNameMatchEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {},
        "EDGEWAFExceptionSpecificConditionOnNameRequest": {
          "match": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFExceptionSpecificConditionOnNameMatchEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFExceptionSpecificConditionOnValue": {
          "match": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFExceptionSpecificConditionOnValueMatchEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {},
        "EDGEWAFExceptionSpecificConditionOnValueRequest": {
          "match": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFExceptionSpecificConditionOnValueMatchEnum",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFRequest": {
          "engine_settings": [
            {
              "type": "schema_reference",
              "target": "EDGEWAFEngineSettingsFieldRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFRule": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEWAFRuleOperatorEnum": {},
        "EDGEWAFRuleRequest": {},
        "EDGEWorkload": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "mtls": [
            {
              "type": "schema_reference",
              "target": "EDGEMTLS",
              "severity": "medium"
            }
          ]
        },
        "EDGEWorkloadDeployment": {
          "strategy": [
            {
              "type": "schema_reference",
              "target": "EDGEDeploymentStrategy",
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGEWorkloadDeploymentRequest": {
          "strategy": [
            {
              "type": "schema_reference",
              "target": "EDGEDeploymentStrategyRequest",
              "severity": "medium"
            }
          ]
        },
        "EDGEWorkloadRequest": {
          "mtls": [
            {
              "type": "schema_reference",
              "target": "EDGEMTLSRequest",
              "severity": "medium"
            }
          ]
        },
        "METRICSAggregatedField": {},
        "METRICSAggregatedFieldRequest": {},
        "METRICSAggregationTypeEnum": {},
        "METRICSBaseQuery": {
          "order_direction": [
            {
              "type": "schema_reference",
              "target": "METRICSOrderDirectionEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSBaseQueryRequest": {
          "order_direction": [
            {
              "type": "schema_reference",
              "target": "METRICSOrderDirectionEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSComparisonTypeEnum": {},
        "METRICSDashboard": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSDashboardRequest": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSDataUnitEnum": {},
        "METRICSFolder": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSFolderRequest": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSJSONAPIErrorObject": {},
        "METRICSJSONAPIErrorResponse": {},
        "METRICSJSONAPIErrorSource": {},
        "METRICSLibraryReportRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "METRICSTypeEnum",
              "severity": "medium"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "target": "METRICSAggregationTypeEnum",
              "severity": "medium"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "target": "METRICSDataUnitEnum",
              "severity": "medium"
            }
          ],
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "target": "METRICSComparisonTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSOrder": {},
        "METRICSOrderDirectionEnum": {},
        "METRICSOrderRequest": {},
        "METRICSPaginatedResponseListDashboardList": {},
        "METRICSPaginatedResponseListFolderList": {},
        "METRICSPaginatedResponseListReportList": {},
        "METRICSPaginatedResponseListRowList": {},
        "METRICSPatchedDashboardRequest": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSPatchedFolderRequest": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSRecommendationRequest": {},
        "METRICSReport": {
          "type": [
            {
              "type": "schema_reference",
              "target": "METRICSTypeEnum",
              "severity": "medium"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "target": "METRICSAggregationTypeEnum",
              "severity": "medium"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "target": "METRICSDataUnitEnum",
              "severity": "medium"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "target": "METRICSComparisonTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSReportRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "METRICSTypeEnum",
              "severity": "medium"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "target": "METRICSAggregationTypeEnum",
              "severity": "medium"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "target": "METRICSDataUnitEnum",
              "severity": "medium"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "target": "METRICSComparisonTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseAsyncDashboard": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSDashboard",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseAsyncDeleteDashboard": {},
        "METRICSResponseAsyncDeleteFolder": {},
        "METRICSResponseAsyncDeleteReport": {},
        "METRICSResponseAsyncDeleteRow": {},
        "METRICSResponseAsyncFolder": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSFolder",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseAsyncOrder": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSOrder",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseAsyncReport": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSReport",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseAsyncRow": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSRow",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseDashboard": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSDashboard",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseDeleteDashboard": {},
        "METRICSResponseDeleteFolder": {},
        "METRICSResponseDeleteReport": {},
        "METRICSResponseDeleteRow": {},
        "METRICSResponseFolder": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSFolder",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseListDashboard": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseListFolder": {
          "scope": [
            {
              "type": "schema_reference",
              "target": "METRICSScopeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseListReport": {
          "type": [
            {
              "type": "schema_reference",
              "target": "METRICSTypeEnum",
              "severity": "medium"
            }
          ],
          "aggregation_type": [
            {
              "type": "schema_reference",
              "target": "METRICSAggregationTypeEnum",
              "severity": "medium"
            }
          ],
          "data_unit": [
            {
              "type": "schema_reference",
              "target": "METRICSDataUnitEnum",
              "severity": "medium"
            }
          ],
          "comparison_type": [
            {
              "type": "schema_reference",
              "target": "METRICSComparisonTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseListRow": {},
        "METRICSResponseOrder": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSOrder",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseReport": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSReport",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseRetrieveDashboard": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSDashboard",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseRetrieveFolder": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSFolder",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseRetrieveReport": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSReport",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseRetrieveRow": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSRow",
              "severity": "medium"
            }
          ]
        },
        "METRICSResponseRow": {
          "data": [
            {
              "type": "schema_reference",
              "target": "METRICSRow",
              "severity": "medium"
            }
          ]
        },
        "METRICSRow": {},
        "METRICSRowRequest": {},
        "METRICSScopeEnum": {},
        "METRICSTypeEnum": {},
        "EDGESQLDatabaseRequest": {},
        "EDGESQLJSONAPIErrorObject": {},
        "EDGESQLJSONAPIErrorResponse": {},
        "EDGESQLJSONAPIErrorSource": {},
        "EDGESQLOpenAPISchema": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "EDGESQLPaginatedOpenAPISchemaList": {},
        "EDGESQLResponseAsyncDeleteOpenAPISchema": {},
        "EDGESQLResponseAsyncOpenAPISchema": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGESQLOpenAPISchema",
              "severity": "medium"
            }
          ]
        },
        "EDGESQLResponseAsyncSQLResult": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGESQLSQLResult",
              "severity": "medium"
            }
          ]
        },
        "EDGESQLResponseDeleteOpenAPISchema": {},
        "EDGESQLResponseOpenAPISchema": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGESQLOpenAPISchema",
              "severity": "medium"
            }
          ]
        },
        "EDGESQLResponseRetrieveOpenAPISchema": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGESQLOpenAPISchema",
              "severity": "medium"
            }
          ]
        },
        "EDGESQLResponseSQLResult": {
          "data": [
            {
              "type": "schema_reference",
              "target": "EDGESQLSQLResult",
              "severity": "medium"
            }
          ]
        },
        "EDGESQLSQLResult": {},
        "EDGESQLSQLStatementsRequest": {},
        "EDGESQLStatusEnum": {},
        "PAYMENTSCredit": {},
        "PAYMENTSCreditRequest": {},
        "PAYMENTSJSONAPIErrorObject": {},
        "PAYMENTSJSONAPIErrorResponse": {},
        "PAYMENTSJSONAPIErrorSource": {},
        "PAYMENTSPaginatedPaymentHistoryList": {},
        "PAYMENTSPaginatedResponsePaymentMethodList": {},
        "PAYMENTSPatchedPartialUpdateRequest": {},
        "PAYMENTSPaymentHistory": {},
        "PAYMENTSPaymentMethod": {},
        "PAYMENTSPaymentMethodRequest": {},
        "PAYMENTSResponseAsyncCredit": {
          "data": [
            {
              "type": "schema_reference",
              "target": "PAYMENTSCredit",
              "severity": "medium"
            }
          ]
        },
        "PAYMENTSResponseAsyncDeletePaymentMethod": {},
        "PAYMENTSResponseAsyncPaymentMethod": {
          "data": [
            {
              "type": "schema_reference",
              "target": "PAYMENTSPaymentMethod",
              "severity": "medium"
            }
          ]
        },
        "PAYMENTSResponseCredit": {
          "data": [
            {
              "type": "schema_reference",
              "target": "PAYMENTSCredit",
              "severity": "medium"
            }
          ]
        },
        "PAYMENTSResponseDeletePaymentMethod": {},
        "PAYMENTSResponsePaymentMethod": {
          "data": [
            {
              "type": "schema_reference",
              "target": "PAYMENTSPaymentMethod",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSAccount": {},
        "ACCOUNTSAccountInfo": {},
        "ACCOUNTSAccountRequest": {},
        "ACCOUNTSBrand": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSBrandRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSCreateAccountRequest": {},
        "ACCOUNTSCreateBrandRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSCreateOrganizationRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSCreateResellerRequest": {
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSCurrencyIsoCodeEnum",
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSCreateWorkspaceRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSCurrencyIsoCodeEnum": {},
        "ACCOUNTSJSONAPIErrorObject": {},
        "ACCOUNTSJSONAPIErrorResponse": {},
        "ACCOUNTSJSONAPIErrorSource": {},
        "ACCOUNTSOrganization": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSOrganizationRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSPaginatedResponseListAccountList": {},
        "ACCOUNTSPatchedAccountRequest": {},
        "ACCOUNTSPatchedBrandRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSPatchedOrganizationRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSPatchedResellerRequest": {
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSCurrencyIsoCodeEnum",
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSPatchedWorkspaceRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSReasonEnum": {},
        "ACCOUNTSReseller": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSCurrencyIsoCodeEnum",
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResellerRequest": {
          "currency_iso_code": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSCurrencyIsoCodeEnum",
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResponseAccount": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSAccount",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResponseAccountInfo": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSAccountInfo",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResponseAsyncAccount": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSAccount",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResponseAsyncAccountInfo": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSAccountInfo",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResponseListAccount": {},
        "ACCOUNTSResponseRetrieveAccount": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSAccount",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSResponseRetrieveAccountInfo": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSAccountInfo",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSStatusEnum": {},
        "ACCOUNTSTypeEnum": {},
        "ACCOUNTSWorkspace": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "ACCOUNTSWorkspaceRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "ACCOUNTSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "STORAGEBucket": {
          "edge_access": [
            {
              "type": "schema_reference",
              "target": "STORAGEEdgeAccessEnum",
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "STORAGEBucketCreate": {
          "edge_access": [
            {
              "type": "schema_reference",
              "target": "STORAGEEdgeAccessEnum",
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "STORAGEBucketCreateRequest": {
          "edge_access": [
            {
              "type": "schema_reference",
              "target": "STORAGEEdgeAccessEnum",
              "severity": "medium"
            }
          ]
        },
        "STORAGEBucketObject": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "STORAGECapabilitiesEnum": {},
        "STORAGECredential": {
          "expiration_date": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "STORAGECredentialCreateRequest": {
          "expiration_date": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "STORAGEDefaultErrorResponse": {},
        "STORAGEEdgeAccessEnum": {},
        "STORAGEJSONAPIErrorObject": {},
        "STORAGEJSONAPIErrorResponse": {},
        "STORAGEJSONAPIErrorSource": {},
        "STORAGEObjectResponseAsyncData": {},
        "STORAGEObjectResponseData": {},
        "STORAGEPaginatedBucketList": {},
        "STORAGEPaginatedResponseListCredentialList": {},
        "STORAGEPatchedBucketRequest": {
          "edge_access": [
            {
              "type": "schema_reference",
              "target": "STORAGEEdgeAccessEnum",
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseAsyncBucketCreate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGEBucketCreate",
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseAsyncCredential": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGECredential",
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseAsyncDeleteBucketCreate": {},
        "STORAGEResponseAsyncDeleteBucketObject": {},
        "STORAGEResponseAsyncDeleteCredential": {},
        "STORAGEResponseBadRequestBucket": {},
        "STORAGEResponseBadRequestCredential": {},
        "STORAGEResponseBucketCreate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGEBucketCreate",
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseBucketObject": {},
        "STORAGEResponseCredential": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGECredential",
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseDeleteBucketCreate": {},
        "STORAGEResponseDeleteBucketObject": {},
        "STORAGEResponseListCredential": {
          "expiration_date": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseRetrieveBucket": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGEBucket",
              "severity": "medium"
            }
          ]
        },
        "STORAGEResponseRetrieveCredential": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGECredential",
              "severity": "medium"
            }
          ]
        },
        "STORAGESuccessObjectOperation": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGEObjectResponseData",
              "severity": "medium"
            }
          ]
        },
        "STORAGESuccessObjectOperationAsync": {
          "data": [
            {
              "type": "schema_reference",
              "target": "STORAGEObjectResponseAsyncData",
              "severity": "medium"
            }
          ]
        },
        "DATAAWSKinesisFirehoseEndpoint": {},
        "DATAAWSKinesisFirehoseEndpointRequest": {},
        "DATAAzureBlobStorageEndpoint": {},
        "DATAAzureBlobStorageEndpointRequest": {},
        "DATAAzureMonitorEndpoint": {},
        "DATAAzureMonitorEndpointRequest": {},
        "DATABigQueryEndpoint": {},
        "DATABigQueryEndpointRequest": {},
        "DATAContentTypeEnum": {},
        "DATADataSourceEnum": {},
        "DATADataStream": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATADataStreamRequest": {},
        "DATADatadogEndpoint": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATADatadogEndpointRequest": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAElasticsearchEndpoint": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAElasticsearchEndpointRequest": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAHttpPostEndpoint": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAHttpPostEndpointRequest": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAInputDataSource": {
          "data_source": [
            {
              "type": "schema_reference",
              "target": "DATADataSourceEnum",
              "severity": "medium"
            }
          ]
        },
        "DATAInputDataSourceAttributes": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATAInputDataSourceAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATAInputDataSource",
              "severity": "medium"
            }
          ]
        },
        "DATAInputDataSourceAttributesRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATAInputDataSourceAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATAInputDataSourceRequest",
              "severity": "medium"
            }
          ]
        },
        "DATAInputDataSourceAttributesTypeEnum": {},
        "DATAInputDataSourceRequest": {
          "data_source": [
            {
              "type": "schema_reference",
              "target": "DATADataSourceEnum",
              "severity": "medium"
            }
          ]
        },
        "DATAInputPolymorphic": {},
        "DATAInputPolymorphicInputDataSourceAttributes": {},
        "DATAInputPolymorphicInputDataSourceAttributesRequest": {},
        "DATAInputPolymorphicRequest": {},
        "DATAInputPolymorphicShared": {},
        "DATAJSONAPIErrorObject": {},
        "DATAJSONAPIErrorResponse": {},
        "DATAJSONAPIErrorSource": {},
        "DATAKafkaEndpoint": {},
        "DATAKafkaEndpointRequest": {},
        "DATAOutput": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATAOutputTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATAOutputPolymorphic",
              "severity": "medium"
            }
          ]
        },
        "DATAOutputPolymorphic": {},
        "DATAOutputPolymorphicRequest": {},
        "DATAOutputRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATAOutputTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATAOutputPolymorphicRequest",
              "severity": "medium"
            }
          ]
        },
        "DATAOutputTypeEnum": {},
        "DATAPaginatedResponseListDataSourceList": {},
        "DATAPaginatedResponseListDataStreamList": {},
        "DATAPaginatedResponseListTemplateList": {},
        "DATAPatchedDataStreamRequest": {},
        "DATAPatchedTemplateRequest": {},
        "DATAQRadarEndpoint": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAQRadarEndpointRequest": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAResponseAsyncDataStream": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DATADataStream",
              "severity": "medium"
            }
          ]
        },
        "DATAResponseAsyncDeleteDataStream": {},
        "DATAResponseAsyncDeleteTemplate": {},
        "DATAResponseAsyncTemplate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DATATemplate",
              "severity": "medium"
            }
          ]
        },
        "DATAResponseDataStream": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DATADataStream",
              "severity": "medium"
            }
          ]
        },
        "DATAResponseDeleteDataStream": {},
        "DATAResponseDeleteTemplate": {},
        "DATAResponseListDataSource": {},
        "DATAResponseListDataStream": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAResponseListTemplate": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAResponseRetrieveDataStream": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DATADataStream",
              "severity": "medium"
            }
          ]
        },
        "DATAResponseRetrieveTemplate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DATATemplate",
              "severity": "medium"
            }
          ]
        },
        "DATAResponseTemplate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DATATemplate",
              "severity": "medium"
            }
          ]
        },
        "DATAS3Endpoint": {
          "content_type": [
            {
              "type": "schema_reference",
              "target": "DATAContentTypeEnum",
              "severity": "medium"
            }
          ],
          "host_url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATAS3EndpointRequest": {
          "content_type": [
            {
              "type": "schema_reference",
              "target": "DATAContentTypeEnum",
              "severity": "medium"
            }
          ],
          "host_url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATASplunkEndpoint": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATASplunkEndpointRequest": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATATemplate": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "DATATemplateRequest": {},
        "DATATransformFilterWorkloads": {},
        "DATATransformFilterWorkloadsAttributes": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATATransformFilterWorkloadsAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATATransformFilterWorkloads",
              "severity": "medium"
            }
          ]
        },
        "DATATransformFilterWorkloadsAttributesRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATATransformFilterWorkloadsAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATATransformFilterWorkloadsRequest",
              "severity": "medium"
            }
          ]
        },
        "DATATransformFilterWorkloadsAttributesTypeEnum": {},
        "DATATransformFilterWorkloadsRequest": {},
        "DATATransformPolymorphic": {},
        "DATATransformPolymorphicRequest": {},
        "DATATransformPolymorphicShared": {},
        "DATATransformPolymorphicTransformFilterWorkloadsAttributes": {},
        "DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest": {},
        "DATATransformPolymorphicTransformRenderTemplateAttributes": {},
        "DATATransformPolymorphicTransformRenderTemplateAttributesRequest": {},
        "DATATransformPolymorphicTransformSamplingAttributes": {},
        "DATATransformPolymorphicTransformSamplingAttributesRequest": {},
        "DATATransformRenderTemplate": {},
        "DATATransformRenderTemplateAttributes": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATATransformRenderTemplateAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATATransformRenderTemplate",
              "severity": "medium"
            }
          ]
        },
        "DATATransformRenderTemplateAttributesRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATATransformRenderTemplateAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATATransformRenderTemplateRequest",
              "severity": "medium"
            }
          ]
        },
        "DATATransformRenderTemplateAttributesTypeEnum": {},
        "DATATransformRenderTemplateRequest": {},
        "DATATransformSampling": {},
        "DATATransformSamplingAttributes": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATATransformSamplingAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATATransformSampling",
              "severity": "medium"
            }
          ]
        },
        "DATATransformSamplingAttributesRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DATATransformSamplingAttributesTypeEnum",
              "severity": "medium"
            }
          ],
          "attributes": [
            {
              "type": "schema_reference",
              "target": "DATATransformSamplingRequest",
              "severity": "medium"
            }
          ]
        },
        "DATATransformSamplingAttributesTypeEnum": {},
        "DATATransformSamplingRequest": {},
        "DATAType4f5Enum": {},
        "ORCHESTRATORBlankEnum": {},
        "ORCHESTRATORContent": {},
        "ORCHESTRATORContentRequest": {},
        "ORCHESTRATORDefaultErrorResponse": {},
        "ORCHESTRATORNodeGroups": {},
        "ORCHESTRATORNodeGroupsById": {},
        "ORCHESTRATORNodeGroupsByIdRequest": {},
        "ORCHESTRATORNodeGroupsRequest": {},
        "ORCHESTRATORNodeServiceBind": {},
        "ORCHESTRATORNodeServices": {},
        "ORCHESTRATORNodeServicesRequest": {},
        "ORCHESTRATORNodes": {
          "status": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStatusEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORNodesRequest": {
          "status": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStatusEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORPaginatedNodeGroupsList": {},
        "ORCHESTRATORPaginatedResponseListNodeGroupsByIdList": {},
        "ORCHESTRATORPaginatedResponseListNodeServicesList": {},
        "ORCHESTRATORPaginatedResponseListNodesList": {},
        "ORCHESTRATORPaginatedResponseListServicesList": {},
        "ORCHESTRATORPaginatedServiceResourceList": {},
        "ORCHESTRATORPatchedNodesRequest": {
          "status": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStatusEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORPatchedServicesRequest": {},
        "ORCHESTRATORResponseBadRequestNodeGroupsById": {},
        "ORCHESTRATORResponseBadRequestNodeServiceBind": {},
        "ORCHESTRATORResponseBadRequestNodeServices": {},
        "ORCHESTRATORResponseBadRequestNodes": {},
        "ORCHESTRATORResponseBadRequestServices": {},
        "ORCHESTRATORResponseDeleteNodeServiceBind": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseDeleteNodes": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseDeleteServices": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseListNodeGroupsById": {},
        "ORCHESTRATORResponseListNodeServices": {},
        "ORCHESTRATORResponseListNodes": {
          "status": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStatusEnum",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseListServices": {},
        "ORCHESTRATORResponseNodeGroupsById": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORNodeGroupsById",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseNodeServices": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORNodeServices",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseNodes": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORNodes",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseRetrieveNodeServiceBind": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORNodeServiceBind",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseRetrieveNodes": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORNodes",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseRetrieveServices": {
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORServices",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORResponseServices": {
          "state": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "ORCHESTRATORServices",
              "severity": "medium"
            }
          ]
        },
        "ORCHESTRATORServiceResource": {},
        "ORCHESTRATORServiceResourceId": {},
        "ORCHESTRATORServiceResourceIdRequest": {},
        "ORCHESTRATORServiceResourceRequest": {},
        "ORCHESTRATORServices": {},
        "ORCHESTRATORServicesRequest": {},
        "ORCHESTRATORStateEnum": {},
        "ORCHESTRATORStatusEnum": {},
        "ORCHESTRATORTriggerEnum": {},
        "VCSBuildContextField": {},
        "VCSBuildContextFieldRequest": {},
        "VCSContinuousDeployment": {
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "VCSContinuousDeploymentRequest": {},
        "VCSExecution": {
          "created_at": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "updated_at": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "VCSExecutionScript": {},
        "VCSExecutionScriptRequest": {},
        "VCSExecutor": {},
        "VCSIntegration": {
          "provider": [
            {
              "type": "schema_reference",
              "target": "VCSPlatform",
              "severity": "medium"
            }
          ]
        },
        "VCSJSONAPIErrorObject": {},
        "VCSJSONAPIErrorResponse": {},
        "VCSJSONAPIErrorSource": {},
        "VCSPaginatedResponseListContinuousDeploymentList": {},
        "VCSPaginatedResponseListExecutionList": {},
        "VCSPaginatedResponseListExecutionScriptList": {},
        "VCSPaginatedResponseListIntegrationList": {},
        "VCSPaginatedResponseListPlatformList": {},
        "VCSPaginatedResponseListRepositoryList": {},
        "VCSPatchedContinuousDeploymentRequest": {},
        "VCSPlatform": {},
        "VCSResponseAsyncContinuousDeployment": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSContinuousDeployment",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseAsyncDeleteContinuousDeployment": {},
        "VCSResponseAsyncDeleteIntegration": {},
        "VCSResponseAsyncExecution": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSExecution",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseAsyncExecutor": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSExecutor",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseContinuousDeployment": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSContinuousDeployment",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseDeleteContinuousDeployment": {},
        "VCSResponseDeleteIntegration": {},
        "VCSResponseExecution": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSExecution",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseExecutor": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSExecutor",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseListContinuousDeployment": {
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "VCSResponseListExecution": {
          "created_at": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "updated_at": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "VCSResponseListExecutionScript": {},
        "VCSResponseListIntegration": {
          "provider": [
            {
              "type": "schema_reference",
              "target": "VCSPlatform",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseListPlatform": {},
        "VCSResponseListRepository": {
          "url": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "VCSResponseRetrieveContinuousDeployment": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSContinuousDeployment",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseRetrieveExecutionScript": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSExecutionScript",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseRetrieveExecutor": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSExecutor",
              "severity": "medium"
            }
          ]
        },
        "VCSResponseRetrieveIntegration": {
          "data": [
            {
              "type": "schema_reference",
              "target": "VCSIntegration",
              "severity": "medium"
            }
          ]
        },
        "DNSAlgType": {},
        "DNSAlgTypeRequest": {},
        "DNSDNSSEC": {},
        "DNSDNSSECRequest": {},
        "DNSDelegationSigner": {
          "algorithm_type": [
            {
              "type": "schema_reference",
              "target": "DNSAlgType",
              "severity": "medium"
            }
          ],
          "digest_type": [
            {
              "type": "schema_reference",
              "target": "DNSAlgType",
              "severity": "medium"
            }
          ]
        },
        "DNSDelegationSignerRequest": {
          "algorithm_type": [
            {
              "type": "schema_reference",
              "target": "DNSAlgTypeRequest",
              "severity": "medium"
            }
          ],
          "digest_type": [
            {
              "type": "schema_reference",
              "target": "DNSAlgTypeRequest",
              "severity": "medium"
            }
          ]
        },
        "DNSJSONAPIErrorObject": {},
        "DNSJSONAPIErrorResponse": {},
        "DNSJSONAPIErrorSource": {},
        "DNSPaginatedRecordList": {},
        "DNSPaginatedZoneList": {},
        "DNSPatchedDNSSECRequest": {},
        "DNSPatchedRecordRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DNSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "DNSPatchedUpdateZoneRequest": {},
        "DNSPolicyEnum": {},
        "DNSRecord": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DNSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "DNSRecordRequest": {
          "type": [
            {
              "type": "schema_reference",
              "target": "DNSTypeEnum",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseAsyncDNSSEC": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSDNSSEC",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseAsyncDeleteRecord": {},
        "DNSResponseAsyncDeleteZone": {},
        "DNSResponseAsyncRecord": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSRecord",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseAsyncZone": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSZone",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseDNSSEC": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSDNSSEC",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseDeleteRecord": {},
        "DNSResponseDeleteZone": {},
        "DNSResponseRecord": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSRecord",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseRetrieveDNSSEC": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSDNSSEC",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseRetrieveRecord": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSRecord",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseRetrieveZone": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSZone",
              "severity": "medium"
            }
          ]
        },
        "DNSResponseZone": {
          "data": [
            {
              "type": "schema_reference",
              "target": "DNSZone",
              "severity": "medium"
            }
          ]
        },
        "DNSStatusEnum": {},
        "DNSTypeEnum": {},
        "DNSUpdateZoneRequest": {},
        "DNSZone": {},
        "DNSZoneRequest": {},
        "BILLINGJSONAPIErrorObject": {},
        "BILLINGJSONAPIErrorResponse": {},
        "BILLINGJSONAPIErrorSource": {},
        "TLSAuthorityEnum": {},
        "TLSCertificate": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "renewed_at": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "TLSCertificateRequest": {},
        "TLSCertificateRequestRequest": {
          "challenge": [
            {
              "type": "schema_reference",
              "target": "TLSChallengeEnum",
              "severity": "medium"
            }
          ],
          "authority": [
            {
              "type": "schema_reference",
              "target": "TLSAuthorityEnum",
              "severity": "medium"
            }
          ]
        },
        "TLSCertificateRevocationList": {
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_update": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "next_update": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "TLSCertificateRevocationListRequest": {},
        "TLSCertificateSigningRequestRequest": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ]
        },
        "TLSChallengeEnum": {},
        "TLSDefaultErrorResponse": {},
        "TLSJSONAPIErrorObject": {},
        "TLSJSONAPIErrorResponse": {},
        "TLSJSONAPIErrorSource": {},
        "TLSKeyAlgorithmEnum": {},
        "TLSNullEnum": {},
        "TLSPaginatedCertificateList": {},
        "TLSPaginatedCertificateRevocationListList": {},
        "TLSPatchedCertificateRequest": {},
        "TLSPatchedCertificateRevocationListRequest": {},
        "TLSResponseAsyncCertificate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "TLSCertificate",
              "severity": "medium"
            }
          ]
        },
        "TLSResponseAsyncCertificateRevocationList": {
          "data": [
            {
              "type": "schema_reference",
              "target": "TLSCertificateRevocationList",
              "severity": "medium"
            }
          ]
        },
        "TLSResponseAsyncDeleteCertificate": {},
        "TLSResponseAsyncDeleteCertificateRevocationList": {},
        "TLSResponseBadRequestCertificate": {},
        "TLSResponseCertificate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "TLSCertificate",
              "severity": "medium"
            }
          ]
        },
        "TLSResponseCertificateRevocationList": {
          "data": [
            {
              "type": "schema_reference",
              "target": "TLSCertificateRevocationList",
              "severity": "medium"
            }
          ]
        },
        "TLSResponseDeleteCertificate": {},
        "TLSResponseDeleteCertificateRevocationList": {},
        "TLSResponseRetrieveCertificate": {
          "data": [
            {
              "type": "schema_reference",
              "target": "TLSCertificate",
              "severity": "medium"
            }
          ]
        },
        "TLSResponseRetrieveCertificateRevocationList": {
          "data": [
            {
              "type": "schema_reference",
              "target": "TLSCertificateRevocationList",
              "severity": "medium"
            }
          ]
        },
        "TLSStatusEnum": {},
        "TLSTypeEnum": {},
        "MARKETPLACEDefaultErrorResponse": {},
        "MARKETPLACEPublisher": {
          "icon": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "MARKETPLACEPublisherRequest": {
          "icon": [
            {
              "type": "format_dependency",
              "target": [
                "protocol",
                "host",
                "path"
              ],
              "severity": "medium"
            }
          ]
        },
        "MARKETPLACEResponseBadRequestPublisher": {},
        "MARKETPLACEResponsePublisher": {
          "state": [
            {
              "type": "schema_reference",
              "target": "MARKETPLACEStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "MARKETPLACEPublisher",
              "severity": "medium"
            }
          ]
        },
        "MARKETPLACEResponseRetrievePublisher": {
          "data": [
            {
              "type": "schema_reference",
              "target": "MARKETPLACEPublisher",
              "severity": "medium"
            }
          ]
        },
        "MARKETPLACEStateEnum": {},
        "IDENTITYDefaultErrorResponse": {},
        "IDENTITYFavorite": {},
        "IDENTITYFavoriteRequest": {},
        "IDENTITYGrant": {
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYGrantRequest": {
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYGroup": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYGroupMembers": {},
        "IDENTITYGroupMembersRequest": {},
        "IDENTITYGroupRequest": {},
        "IDENTITYPaginatedResponseListFavoriteList": {},
        "IDENTITYPaginatedResponseListGrantList": {},
        "IDENTITYPaginatedResponseListGroupList": {},
        "IDENTITYPaginatedResponseListServiceTokenList": {},
        "IDENTITYPaginatedResponseListUserList": {},
        "IDENTITYPatchedGrantRequest": {
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYPatchedGroupRequest": {},
        "IDENTITYPatchedServiceTokenUpdateRequest": {},
        "IDENTITYPatchedUserRequest": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseBadRequestFavorite": {},
        "IDENTITYResponseBadRequestGrant": {},
        "IDENTITYResponseBadRequestGroup": {},
        "IDENTITYResponseBadRequestGroupMembers": {},
        "IDENTITYResponseBadRequestServiceToken": {},
        "IDENTITYResponseBadRequestServiceTokenRenew": {},
        "IDENTITYResponseBadRequestUser": {},
        "IDENTITYResponseBadRequestUserInfo": {},
        "IDENTITYResponseDeleteFavorite": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseDeleteGrant": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseDeleteGroup": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseDeleteServiceToken": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseDeleteUser": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseFavorite": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYFavorite",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseGrant": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYGrant",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseGroup": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYGroup",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseGroupMembers": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYGroupMembers",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseListFavorite": {},
        "IDENTITYResponseListGrant": {
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseListGroup": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseListServiceToken": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseListUser": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_login": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseRetrieveGrant": {
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYGrant",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseRetrieveGroup": {
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYGroup",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseRetrieveGroupMembers": {
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYGroupMembers",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseRetrieveServiceToken": {
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYServiceToken",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseRetrieveUser": {
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYUser",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseRetrieveUserInfo": {
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYUserInfo",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseServiceToken": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYServiceToken",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseServiceTokenCreate": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYServiceTokenCreate",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseServiceTokenRenew": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYServiceTokenRenew",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseUser": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYUser",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYResponseUserInfo": {
          "state": [
            {
              "type": "schema_reference",
              "target": "IDENTITYStateEnum",
              "severity": "medium"
            }
          ],
          "data": [
            {
              "type": "schema_reference",
              "target": "IDENTITYUserInfo",
              "severity": "medium"
            }
          ]
        },
        "IDENTITYServiceToken": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYServiceTokenCreate": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYServiceTokenCreateRequest": {
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYServiceTokenRenew": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_used": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYServiceTokenRenewRequest": {
          "expires": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYServiceTokenUpdateRequest": {},
        "IDENTITYStateEnum": {},
        "IDENTITYUser": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ],
          "created": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_modified": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ],
          "last_login": [
            {
              "type": "format_dependency",
              "target": [
                "timezone"
              ],
              "severity": "medium"
            }
          ]
        },
        "IDENTITYUserInfo": {},
        "IDENTITYUserRequest": {
          "email": [
            {
              "type": "format_dependency",
              "target": [
                "domain",
                "local_part"
              ],
              "severity": "medium"
            }
          ]
        }
      },
      "module_to_fields": {
        "USERSDefaultErrorResponse": {},
        "AUTHDefaultErrorResponse": {},
        "AUTHEffectEnum": {},
        "AUTHJSONAPIErrorObject": {},
        "AUTHJSONAPIErrorResponse": {},
        "AUTHJSONAPIErrorSource": {},
        "AUTHLockoutPolicy": {},
        "AUTHLockoutPolicyRequest": {},
        "AUTHLoginRequest": {},
        "AUTHLoginResponse": {},
        "AUTHMFAToken": {},
        "AUTHPaginatedPolicyList": {},
        "AUTHPaginatedTOTPDeviceListList": {},
        "AUTHPatchedPolicyRequest": {},
        "AUTHPolicy": {},
        "AUTHPolicyRequest": {},
        "AUTHPolicyRule": {},
        "AUTHPolicyRuleCondition": {},
        "AUTHPolicyRuleConditionRequest": {},
        "AUTHPolicyRuleRequest": {},
        "AUTHResponseAsyncDeletePolicy": {},
        "AUTHResponseAsyncDeleteTOTPDeviceCreate": {},
        "AUTHResponseAsyncLockoutPolicy": {},
        "AUTHResponseAsyncLogin": {},
        "AUTHResponseAsyncPolicy": {},
        "AUTHResponseAsyncSessionTimeoutPolicy": {},
        "AUTHResponseAsyncTOTPDeviceCreate": {},
        "AUTHResponseAsyncToken": {},
        "AUTHResponseAsyncTokenPair": {},
        "AUTHResponseBadRequestPolicy": {},
        "AUTHResponseDeletePolicy": {},
        "AUTHResponseDeleteTOTPDeviceCreate": {},
        "AUTHResponseLockoutPolicy": {},
        "AUTHResponseLogin": {},
        "AUTHResponsePolicy": {},
        "AUTHResponseRetrieveLockoutPolicy": {},
        "AUTHResponseRetrievePolicy": {},
        "AUTHResponseRetrieveSessionTimeoutPolicy": {},
        "AUTHResponseSessionTimeoutPolicy": {},
        "AUTHResponseTOTPDeviceCreate": {},
        "AUTHResponseToken": {},
        "AUTHResponseTokenPair": {},
        "AUTHSessionTimeoutPolicy": {},
        "AUTHSessionTimeoutPolicyRequest": {},
        "AUTHStateExecutedResponse": {},
        "AUTHStatePendingResponse": {},
        "AUTHTOTPDeviceCreate": {},
        "AUTHTOTPDeviceList": {},
        "AUTHTOTPVerificationRequest": {},
        "AUTHToken": {},
        "AUTHTokenPair": {},
        "AUTHTokenRequest": {},
        "AUTHuser_login_method_response": {},
        "EDGEAWS4HMAC": {},
        "EDGEAWS4HMACAttributes": {},
        "EDGEAWS4HMACAttributesRequest": {},
        "EDGEAWS4HMACRequest": {},
        "EDGEAWS4HMACTypeEnum": {},
        "EDGEAddress": {},
        "EDGEAddressLoadBalancerModule": {},
        "EDGEAddressLoadBalancerModuleRequest": {},
        "EDGEAddressModules": {},
        "EDGEAddressModulesRequest": {},
        "EDGEAddressRequest": {},
        "EDGEApplication": {},
        "EDGEApplicationAcceleratorModule": {},
        "EDGEApplicationAcceleratorModuleRequest": {},
        "EDGEApplicationDeviceGroups": {},
        "EDGEApplicationDeviceGroupsRequest": {},
        "EDGEApplicationFunctionInstance": {},
        "EDGEApplicationFunctionInstanceRequest": {},
        "EDGEApplicationModules": {},
        "EDGEApplicationModulesRequest": {},
        "EDGEApplicationRequest": {},
        "EDGEApplicationRequestPhaseRuleEngine": {},
        "EDGEApplicationRequestPhaseRuleEngineOrderRequest": {},
        "EDGEApplicationRequestPhaseRuleEngineRequest": {},
        "EDGEApplicationResponsePhaseRuleEngine": {},
        "EDGEApplicationResponsePhaseRuleEngineOrderRequest": {},
        "EDGEApplicationResponsePhaseRuleEngineRequest": {},
        "EDGEApplicationRuleEngineAddHeader": {},
        "EDGEApplicationRuleEngineAddHeaderAttributes": {},
        "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineAddHeaderRequest": {},
        "EDGEApplicationRuleEngineAddHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineAddRequestCookie": {},
        "EDGEApplicationRuleEngineAddRequestCookieAttributes": {},
        "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {},
        "EDGEApplicationRuleEngineAddRequestCookieRequest": {},
        "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {},
        "EDGEApplicationRuleEngineAddResponseHeader": {},
        "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {},
        "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineAddResponseHeaderRequest": {},
        "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineCaptureMatchGroups": {},
        "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {},
        "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {},
        "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {},
        "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {},
        "EDGEApplicationRuleEngineFilterHeader": {},
        "EDGEApplicationRuleEngineFilterHeaderAttributes": {},
        "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineFilterHeaderRequest": {},
        "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineFilterRequestCookie": {},
        "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {},
        "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {},
        "EDGEApplicationRuleEngineFilterRequestCookieRequest": {},
        "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {},
        "EDGEApplicationRuleEngineFilterResponseHeader": {},
        "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {},
        "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {},
        "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {},
        "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {},
        "EDGEApplicationRuleEngineNoArgs": {},
        "EDGEApplicationRuleEngineNoArgsRequest": {},
        "EDGEApplicationRuleEngineNoArgsTypeEnum": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviors": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeader": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddHeaderRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookie": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineAddRequestCookieRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeader": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterHeaderRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookie": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineFilterRequestCookieRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgs": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineNoArgsRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRewriteRequestRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunction": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineRunFunctionRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicy": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetCachePolicyRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnector": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetConnectorRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOrigin": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineSetOriginRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineString": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsApplicationRuleEngineStringRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsRequest": {},
        "EDGEApplicationRuleEngineRequestPhaseBehaviorsShared": {},
        "EDGEApplicationRuleEngineResponseNoArgs": {},
        "EDGEApplicationRuleEngineResponseNoArgsRequest": {},
        "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviors": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeader": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineAddResponseHeaderRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroups": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineCaptureMatchGroupsRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeader": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineFilterResponseHeaderRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgs": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseNoArgsRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseString": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineResponseStringRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponse": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineRunFunctionResponseRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookie": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsApplicationRuleEngineSetCookieRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsRequest": {},
        "EDGEApplicationRuleEngineResponsePhaseBehaviorsShared": {},
        "EDGEApplicationRuleEngineResponseString": {},
        "EDGEApplicationRuleEngineResponseStringAttributes": {},
        "EDGEApplicationRuleEngineResponseStringAttributesRequest": {},
        "EDGEApplicationRuleEngineResponseStringRequest": {},
        "EDGEApplicationRuleEngineResponseStringTypeEnum": {},
        "EDGEApplicationRuleEngineRewriteRequest": {},
        "EDGEApplicationRuleEngineRewriteRequestAttributes": {},
        "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {},
        "EDGEApplicationRuleEngineRewriteRequestRequest": {},
        "EDGEApplicationRuleEngineRunFunction": {},
        "EDGEApplicationRuleEngineRunFunctionAttributes": {},
        "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {},
        "EDGEApplicationRuleEngineRunFunctionRequest": {},
        "EDGEApplicationRuleEngineRunFunctionResponse": {},
        "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {},
        "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {},
        "EDGEApplicationRuleEngineRunFunctionResponseRequest": {},
        "EDGEApplicationRuleEngineSetCachePolicy": {},
        "EDGEApplicationRuleEngineSetCachePolicyAttributes": {},
        "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {},
        "EDGEApplicationRuleEngineSetCachePolicyRequest": {},
        "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {},
        "EDGEApplicationRuleEngineSetConnector": {},
        "EDGEApplicationRuleEngineSetConnectorAttributes": {},
        "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {},
        "EDGEApplicationRuleEngineSetConnectorRequest": {},
        "EDGEApplicationRuleEngineSetConnectorTypeEnum": {},
        "EDGEApplicationRuleEngineSetCookie": {},
        "EDGEApplicationRuleEngineSetCookieAttributes": {},
        "EDGEApplicationRuleEngineSetCookieAttributesRequest": {},
        "EDGEApplicationRuleEngineSetCookieRequest": {},
        "EDGEApplicationRuleEngineSetCookieTypeEnum": {},
        "EDGEApplicationRuleEngineSetOrigin": {},
        "EDGEApplicationRuleEngineSetOriginAttributes": {},
        "EDGEApplicationRuleEngineSetOriginAttributesRequest": {},
        "EDGEApplicationRuleEngineSetOriginRequest": {},
        "EDGEApplicationRuleEngineSetOriginTypeEnum": {},
        "EDGEApplicationRuleEngineString": {},
        "EDGEApplicationRuleEngineStringAttributes": {},
        "EDGEApplicationRuleEngineStringAttributesRequest": {},
        "EDGEApplicationRuleEngineStringRequest": {},
        "EDGEApplicationRuleEngineStringTypeEnum": {},
        "EDGEBehaviorA69Enum": {},
        "EDGEBlankEnum": {},
        "EDGEBrowserCacheModule": {},
        "EDGEBrowserCacheModuleBehaviorEnum": {},
        "EDGEBrowserCacheModuleRequest": {},
        "EDGECacheModule": {},
        "EDGECacheModuleRequest": {},
        "EDGECacheSetting": {},
        "EDGECacheSettingRequest": {},
        "EDGECacheSettingsApplicationAcceleratorModule": {},
        "EDGECacheSettingsApplicationAcceleratorModuleRequest": {},
        "EDGECacheSettingsEdgeCacheModule": {},
        "EDGECacheSettingsEdgeCacheModuleBehaviorEnum": {},
        "EDGECacheSettingsEdgeCacheModuleRequest": {},
        "EDGECacheSettingsModules": {},
        "EDGECacheSettingsModulesRequest": {},
        "EDGECacheSettingsTieredCacheModule": {},
        "EDGECacheSettingsTieredCacheModuleBehaviorEnum": {},
        "EDGECacheSettingsTieredCacheModuleRequest": {},
        "EDGECacheVaryByCookiesModule": {},
        "EDGECacheVaryByCookiesModuleRequest": {},
        "EDGECacheVaryByDevicesModule": {},
        "EDGECacheVaryByDevicesModuleBehaviorEnum": {},
        "EDGECacheVaryByDevicesModuleRequest": {},
        "EDGECacheVaryByMethodEnum": {},
        "EDGECacheVaryByQuerystringModule": {
          "sort": {
            "toggle": "sort_enabled",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "EDGECacheVaryByQuerystringModuleRequest": {
          "sort": {
            "toggle": "sort_enabled",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "EDGECiphersEnum": {},
        "EDGECloneApplicationRequest": {},
        "EDGECloneFirewallRequest": {},
        "EDGECloneWAFRequest": {},
        "EDGECodeEnum": {},
        "EDGEConditionalEnum": {},
        "EDGEConnectorHTTP": {},
        "EDGEConnectorHTTPAttributes": {},
        "EDGEConnectorHTTPAttributesRequest": {},
        "EDGEConnectorHTTPRequest": {},
        "EDGEConnectorLiveIngest": {},
        "EDGEConnectorLiveIngestAttributes": {},
        "EDGEConnectorLiveIngestAttributesRequest": {},
        "EDGEConnectorLiveIngestRequest": {},
        "EDGEConnectorPolymorphic": {},
        "EDGEConnectorPolymorphicRequest": {},
        "EDGEConnectorStorage": {},
        "EDGEConnectorStorageAttributes": {},
        "EDGEConnectorStorageAttributesRequest": {},
        "EDGEConnectorStorageRequest": {},
        "EDGECustomPage": {},
        "EDGECustomPageRequest": {},
        "EDGEDefaultDeploymentStrategy": {},
        "EDGEDefaultDeploymentStrategyAttrs": {},
        "EDGEDefaultDeploymentStrategyAttrsRequest": {},
        "EDGEDefaultDeploymentStrategyRequest": {},
        "EDGEDefaultErrorResponse": {},
        "EDGEDeploymentStrategy": {},
        "EDGEDeploymentStrategyDefaultDeploymentStrategy": {},
        "EDGEDeploymentStrategyDefaultDeploymentStrategyRequest": {},
        "EDGEDeploymentStrategyRequest": {},
        "EDGEDeploymentStrategyShared": {},
        "EDGEDnsResolutionEnum": {},
        "EDGEEdgeApplicationCriterionField": {},
        "EDGEEdgeApplicationCriterionFieldRequest": {},
        "EDGEEdgeApplicationCriterionFieldVariableEnum": {},
        "EDGEEdgeApplicationCriterionPolymorphicArgument": {},
        "EDGEEdgeApplicationCriterionPolymorphicArgumentRequest": {},
        "EDGEEdgeFirewallCriterionField": {},
        "EDGEEdgeFirewallCriterionFieldRequest": {},
        "EDGEEdgeFirewallCriterionFieldVariableEnum": {},
        "EDGEEdgeFirewallCriterionPolymorphicArgument": {},
        "EDGEEdgeFirewallCriterionPolymorphicArgumentRequest": {},
        "EDGEEdgeFunctionModule": {},
        "EDGEEdgeFunctionModuleRequest": {},
        "EDGEEdgeFunctions": {},
        "EDGEEdgeFunctionsRequest": {},
        "EDGEEngineVersionEnum": {},
        "EDGEExecutionEnvironmentEnum": {},
        "EDGEFirewall": {},
        "EDGEFirewallBehaviorNoArguments": {},
        "EDGEFirewallBehaviorNoArgumentsRequest": {},
        "EDGEFirewallBehaviorNoArgumentsTypeEnum": {},
        "EDGEFirewallBehaviorRunFunction": {},
        "EDGEFirewallBehaviorRunFunctionAttributes": {},
        "EDGEFirewallBehaviorRunFunctionAttributesRequest": {},
        "EDGEFirewallBehaviorRunFunctionRequest": {},
        "EDGEFirewallBehaviorSetCustomResponse": {},
        "EDGEFirewallBehaviorSetCustomResponseAttributes": {},
        "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {},
        "EDGEFirewallBehaviorSetCustomResponseRequest": {},
        "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {},
        "EDGEFirewallBehaviorSetRateLimit": {},
        "EDGEFirewallBehaviorSetRateLimitAttributes": {},
        "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {},
        "EDGEFirewallBehaviorSetRateLimitAttributesTypeEnum": {},
        "EDGEFirewallBehaviorSetRateLimitRequest": {},
        "EDGEFirewallBehaviorSetRateLimitTypeEnum": {},
        "EDGEFirewallBehaviorSetWaf": {},
        "EDGEFirewallBehaviorSetWafAttributes": {},
        "EDGEFirewallBehaviorSetWafAttributesRequest": {},
        "EDGEFirewallBehaviorSetWafRequest": {},
        "EDGEFirewallBehaviorSetWafTypeEnum": {},
        "EDGEFirewallBehaviorTagEvent": {},
        "EDGEFirewallBehaviorTagEventAttributes": {},
        "EDGEFirewallBehaviorTagEventAttributesRequest": {},
        "EDGEFirewallBehaviorTagEventRequest": {},
        "EDGEFirewallBehaviorTagEventTypeEnum": {},
        "EDGEFirewallBehaviors": {},
        "EDGEFirewallBehaviorsFirewallBehaviorNoArguments": {},
        "EDGEFirewallBehaviorsFirewallBehaviorNoArgumentsRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorRunFunction": {},
        "EDGEFirewallBehaviorsFirewallBehaviorRunFunctionRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponse": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetCustomResponseRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimit": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetRateLimitRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetWaf": {},
        "EDGEFirewallBehaviorsFirewallBehaviorSetWafRequest": {},
        "EDGEFirewallBehaviorsFirewallBehaviorTagEvent": {},
        "EDGEFirewallBehaviorsFirewallBehaviorTagEventRequest": {},
        "EDGEFirewallBehaviorsRequest": {},
        "EDGEFirewallBehaviorsShared": {},
        "EDGEFirewallFunctionInstance": {},
        "EDGEFirewallFunctionInstanceRequest": {},
        "EDGEFirewallModule": {},
        "EDGEFirewallModuleRequest": {},
        "EDGEFirewallModules": {},
        "EDGEFirewallModulesRequest": {},
        "EDGEFirewallRequest": {},
        "EDGEFirewallRuleEngine": {},
        "EDGEFirewallRuleEngineOrderRequest": {},
        "EDGEFirewallRuleEngineRequest": {},
        "EDGEHMAC": {},
        "EDGEHMACPolymorphic": {},
        "EDGEHMACPolymorphicRequest": {},
        "EDGEHMACRequest": {},
        "EDGEHTTPConnectionOptions": {},
        "EDGEHTTPConnectionOptionsRequest": {},
        "EDGEHTTPModules": {},
        "EDGEHTTPModulesRequest": {},
        "EDGEHttpProtocol": {},
        "EDGEHttpProtocolRequest": {},
        "EDGEHttpVersionPolicyEnum": {},
        "EDGEImageProcessorModule": {},
        "EDGEImageProcessorModuleRequest": {},
        "EDGEInfrastructureEnum": {},
        "EDGEJSONAPIErrorObject": {},
        "EDGEJSONAPIErrorResponse": {},
        "EDGEJSONAPIErrorSource": {},
        "EDGELargeFileCacheModule": {},
        "EDGELargeFileCacheModuleRequest": {},
        "EDGELayerEnum": {},
        "EDGELimitByEnum": {},
        "EDGELoadBalancerModule": {},
        "EDGELoadBalancerModuleConfig": {},
        "EDGELoadBalancerModuleConfigRequest": {},
        "EDGELoadBalancerModuleRequest": {},
        "EDGEMTLS": {},
        "EDGEMTLSRequest": {},
        "EDGEMethodEnum": {},
        "EDGEMinimumVersionEnum": {},
        "EDGEModeEnum": {},
        "EDGENetworkList": {},
        "EDGENetworkListDetail": {},
        "EDGENetworkListDetailRequest": {},
        "EDGENullEnum": {},
        "EDGEOperator565Enum": {},
        "EDGEOriginIPACL": {},
        "EDGEOriginIPACLRequest": {},
        "EDGEOriginShieldConfig": {},
        "EDGEOriginShieldConfigRequest": {},
        "EDGEOriginShieldModule": {},
        "EDGEOriginShieldModuleRequest": {},
        "EDGEPage": {},
        "EDGEPageConnector": {},
        "EDGEPageConnectorAttributes": {},
        "EDGEPageConnectorAttributesRequest": {},
        "EDGEPageConnectorRequest": {},
        "EDGEPagePolymorphic": {},
        "EDGEPagePolymorphicRequest": {},
        "EDGEPageRequest": {},
        "EDGEPaginatedApplicationDeviceGroupsList": {},
        "EDGEPaginatedApplicationFunctionInstanceList": {},
        "EDGEPaginatedApplicationList": {},
        "EDGEPaginatedApplicationRequestPhaseRuleEngineList": {},
        "EDGEPaginatedApplicationResponsePhaseRuleEngineList": {},
        "EDGEPaginatedConnectorPolymorphicList": {},
        "EDGEPaginatedCustomPageList": {},
        "EDGEPaginatedEdgeFunctionsList": {},
        "EDGEPaginatedFirewallFunctionInstanceList": {},
        "EDGEPaginatedFirewallList": {},
        "EDGEPaginatedFirewallRuleEngineList": {},
        "EDGEPaginatedNetworkListList": {},
        "EDGEPaginatedResponseListCacheSettingList": {},
        "EDGEPaginatedWAFList": {},
        "EDGEPaginatedWAFRuleList": {},
        "EDGEPaginatedWorkloadDeploymentList": {},
        "EDGEPaginatedWorkloadList": {},
        "EDGEPatchedApplicationDeviceGroupsRequest": {},
        "EDGEPatchedApplicationFunctionInstanceRequest": {},
        "EDGEPatchedApplicationRequest": {},
        "EDGEPatchedApplicationRequestPhaseRuleEngineRequest": {},
        "EDGEPatchedApplicationResponsePhaseRuleEngineRequest": {},
        "EDGEPatchedCacheSettingRequest": {},
        "EDGEPatchedConnectorHTTPRequest": {},
        "EDGEPatchedConnectorLiveIngestRequest": {},
        "EDGEPatchedConnectorPolymorphicRequest": {},
        "EDGEPatchedConnectorStorageRequest": {},
        "EDGEPatchedCustomPageRequest": {},
        "EDGEPatchedEdgeFunctionsRequest": {},
        "EDGEPatchedFirewallFunctionInstanceRequest": {},
        "EDGEPatchedFirewallRequest": {},
        "EDGEPatchedFirewallRuleEngineRequest": {},
        "EDGEPatchedNetworkListDetailRequest": {},
        "EDGEPatchedWAFRequest": {},
        "EDGEPatchedWAFRuleRequest": {},
        "EDGEPatchedWorkloadDeploymentRequest": {},
        "EDGEPatchedWorkloadRequest": {},
        "EDGEProtocols": {},
        "EDGEProtocolsRequest": {},
        "EDGEPurgeInput": {},
        "EDGEPurgeInputRequest": {},
        "EDGERegionEnum": {},
        "EDGEResponseApplication": {},
        "EDGEResponseApplicationDeviceGroups": {},
        "EDGEResponseApplicationFunctionInstance": {},
        "EDGEResponseApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseApplicationResponsePhaseRuleEngine": {},
        "EDGEResponseAsyncApplication": {},
        "EDGEResponseAsyncApplicationDeviceGroups": {},
        "EDGEResponseAsyncApplicationFunctionInstance": {},
        "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {},
        "EDGEResponseAsyncCacheSetting": {},
        "EDGEResponseAsyncConnectorPolymorphic": {},
        "EDGEResponseAsyncCustomPage": {},
        "EDGEResponseAsyncDeleteApplication": {},
        "EDGEResponseAsyncDeleteApplicationDeviceGroups": {},
        "EDGEResponseAsyncDeleteApplicationFunctionInstance": {},
        "EDGEResponseAsyncDeleteApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseAsyncDeleteApplicationResponsePhaseRuleEngine": {},
        "EDGEResponseAsyncDeleteCacheSetting": {},
        "EDGEResponseAsyncDeleteConnectorPolymorphic": {},
        "EDGEResponseAsyncDeleteCustomPage": {},
        "EDGEResponseAsyncDeleteFirewall": {},
        "EDGEResponseAsyncDeleteFirewallFunctionInstance": {},
        "EDGEResponseAsyncDeleteFirewallRuleEngine": {},
        "EDGEResponseAsyncDeleteFunctionsDoc": {},
        "EDGEResponseAsyncDeleteNetworkListDetail": {},
        "EDGEResponseAsyncDeleteWAF": {},
        "EDGEResponseAsyncDeleteWAFRule": {},
        "EDGEResponseAsyncDeleteWorkload": {},
        "EDGEResponseAsyncDeleteWorkloadDeployment": {},
        "EDGEResponseAsyncFirewall": {},
        "EDGEResponseAsyncFirewallFunctionInstance": {},
        "EDGEResponseAsyncFirewallRuleEngine": {},
        "EDGEResponseAsyncFunctionsDoc": {},
        "EDGEResponseAsyncNetworkListDetail": {},
        "EDGEResponseAsyncPurgeInput": {},
        "EDGEResponseAsyncWAF": {},
        "EDGEResponseAsyncWAFRule": {},
        "EDGEResponseAsyncWorkload": {},
        "EDGEResponseAsyncWorkloadDeployment": {},
        "EDGEResponseBadRequestApplication": {},
        "EDGEResponseBadRequestCacheSetting": {},
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {},
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {},
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {},
        "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {},
        "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {},
        "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {},
        "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {},
        "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {},
        "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {},
        "EDGEResponseBadRequestSerializerMetaclassModulesField": {},
        "EDGEResponseBadRequestSerializerMetaclassStrategyField": {},
        "EDGEResponseBadRequestWorkloadDeployment": {},
        "EDGEResponseConnectorPolymorphic": {},
        "EDGEResponseCustomPage": {},
        "EDGEResponseDeleteApplication": {},
        "EDGEResponseDeleteApplicationFunctionInstance": {},
        "EDGEResponseDeleteApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseDeleteApplicationResponsePhaseRuleEngine": {},
        "EDGEResponseDeleteConnectorPolymorphic": {},
        "EDGEResponseDeleteCustomPage": {},
        "EDGEResponseDeleteFirewall": {},
        "EDGEResponseDeleteFirewallFunctionInstance": {},
        "EDGEResponseDeleteFirewallRuleEngine": {},
        "EDGEResponseDeleteFunctionsDoc": {},
        "EDGEResponseDeleteNetworkListDetail": {},
        "EDGEResponseDeleteWAF": {},
        "EDGEResponseDeleteWAFRule": {},
        "EDGEResponseFirewall": {},
        "EDGEResponseFirewallFunctionInstance": {},
        "EDGEResponseFirewallRuleEngine": {},
        "EDGEResponseFunctionsDoc": {},
        "EDGEResponseListCacheSetting": {},
        "EDGEResponseNetworkListDetail": {},
        "EDGEResponsePurgeInput": {},
        "EDGEResponseRetrieveApplication": {},
        "EDGEResponseRetrieveApplicationDeviceGroups": {},
        "EDGEResponseRetrieveApplicationFunctionInstance": {},
        "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {},
        "EDGEResponseRetrieveCacheSetting": {},
        "EDGEResponseRetrieveConnectorPolymorphic": {},
        "EDGEResponseRetrieveCustomPage": {},
        "EDGEResponseRetrieveFirewall": {},
        "EDGEResponseRetrieveFirewallFunctionInstance": {},
        "EDGEResponseRetrieveFirewallRuleEngine": {},
        "EDGEResponseRetrieveFunctionsDoc": {},
        "EDGEResponseRetrieveNetworkListDetail": {},
        "EDGEResponseRetrieveWAF": {},
        "EDGEResponseRetrieveWAFRule": {},
        "EDGEResponseRetrieveWorkload": {},
        "EDGEResponseRetrieveWorkloadDeployment": {},
        "EDGEResponseWAF": {},
        "EDGEResponseWAFRule": {},
        "EDGEResponseWorkload": {},
        "EDGEResponseWorkloadDeployment": {},
        "EDGERuleIdEnum": {},
        "EDGERulesetsEnum": {},
        "EDGERuntimeEnum": {},
        "EDGESensitivityEnum": {},
        "EDGEServerRoleEnum": {},
        "EDGEStateCacheModule": {},
        "EDGEStateCacheModuleRequest": {},
        "EDGETLSWorkload": {},
        "EDGETLSWorkloadRequest": {},
        "EDGEThreatEnum": {},
        "EDGEThresholdsConfigField": {},
        "EDGEThresholdsConfigFieldRequest": {},
        "EDGETieredCacheModule": {},
        "EDGETieredCacheModuleRequest": {},
        "EDGETopologyEnum": {},
        "EDGETransportPolicyEnum": {},
        "EDGEType15cEnum": {},
        "EDGEType528Enum": {},
        "EDGEType689Enum": {},
        "EDGETypeF11Enum": {},
        "EDGEVerificationEnum": {},
        "EDGEWAF": {},
        "EDGEWAFEngineSettingsAttributesField": {},
        "EDGEWAFEngineSettingsAttributesFieldRequest": {},
        "EDGEWAFEngineSettingsField": {},
        "EDGEWAFEngineSettingsFieldRequest": {},
        "EDGEWAFEngineSettingsFieldTypeEnum": {},
        "EDGEWAFExceptionGenericCondition": {},
        "EDGEWAFExceptionGenericConditionMatchEnum": {},
        "EDGEWAFExceptionGenericConditionRequest": {},
        "EDGEWAFExceptionPolymorphicCondition": {},
        "EDGEWAFExceptionPolymorphicConditionRequest": {},
        "EDGEWAFExceptionSpecificConditionOnName": {},
        "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {},
        "EDGEWAFExceptionSpecificConditionOnNameRequest": {},
        "EDGEWAFExceptionSpecificConditionOnValue": {},
        "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {},
        "EDGEWAFExceptionSpecificConditionOnValueRequest": {},
        "EDGEWAFRequest": {},
        "EDGEWAFRule": {},
        "EDGEWAFRuleOperatorEnum": {},
        "EDGEWAFRuleRequest": {},
        "EDGEWorkload": {},
        "EDGEWorkloadDeployment": {},
        "EDGEWorkloadDeploymentRequest": {},
        "EDGEWorkloadRequest": {},
        "METRICSAggregatedField": {},
        "METRICSAggregatedFieldRequest": {},
        "METRICSAggregationTypeEnum": {},
        "METRICSBaseQuery": {},
        "METRICSBaseQueryRequest": {},
        "METRICSComparisonTypeEnum": {},
        "METRICSDashboard": {},
        "METRICSDashboardRequest": {},
        "METRICSDataUnitEnum": {},
        "METRICSFolder": {},
        "METRICSFolderRequest": {},
        "METRICSJSONAPIErrorObject": {},
        "METRICSJSONAPIErrorResponse": {},
        "METRICSJSONAPIErrorSource": {},
        "METRICSLibraryReportRequest": {},
        "METRICSOrder": {},
        "METRICSOrderDirectionEnum": {},
        "METRICSOrderRequest": {},
        "METRICSPaginatedResponseListDashboardList": {},
        "METRICSPaginatedResponseListFolderList": {},
        "METRICSPaginatedResponseListReportList": {},
        "METRICSPaginatedResponseListRowList": {},
        "METRICSPatchedDashboardRequest": {},
        "METRICSPatchedFolderRequest": {},
        "METRICSRecommendationRequest": {},
        "METRICSReport": {},
        "METRICSReportRequest": {},
        "METRICSResponseAsyncDashboard": {},
        "METRICSResponseAsyncDeleteDashboard": {},
        "METRICSResponseAsyncDeleteFolder": {},
        "METRICSResponseAsyncDeleteReport": {},
        "METRICSResponseAsyncDeleteRow": {},
        "METRICSResponseAsyncFolder": {},
        "METRICSResponseAsyncOrder": {},
        "METRICSResponseAsyncReport": {},
        "METRICSResponseAsyncRow": {},
        "METRICSResponseDashboard": {},
        "METRICSResponseDeleteDashboard": {},
        "METRICSResponseDeleteFolder": {},
        "METRICSResponseDeleteReport": {},
        "METRICSResponseDeleteRow": {},
        "METRICSResponseFolder": {},
        "METRICSResponseListDashboard": {},
        "METRICSResponseListFolder": {},
        "METRICSResponseListReport": {},
        "METRICSResponseListRow": {},
        "METRICSResponseOrder": {},
        "METRICSResponseReport": {},
        "METRICSResponseRetrieveDashboard": {},
        "METRICSResponseRetrieveFolder": {},
        "METRICSResponseRetrieveReport": {},
        "METRICSResponseRetrieveRow": {},
        "METRICSResponseRow": {},
        "METRICSRow": {},
        "METRICSRowRequest": {},
        "METRICSScopeEnum": {},
        "METRICSTypeEnum": {},
        "EDGESQLDatabaseRequest": {},
        "EDGESQLJSONAPIErrorObject": {},
        "EDGESQLJSONAPIErrorResponse": {},
        "EDGESQLJSONAPIErrorSource": {},
        "EDGESQLOpenAPISchema": {},
        "EDGESQLPaginatedOpenAPISchemaList": {},
        "EDGESQLResponseAsyncDeleteOpenAPISchema": {},
        "EDGESQLResponseAsyncOpenAPISchema": {},
        "EDGESQLResponseAsyncSQLResult": {},
        "EDGESQLResponseDeleteOpenAPISchema": {},
        "EDGESQLResponseOpenAPISchema": {},
        "EDGESQLResponseRetrieveOpenAPISchema": {},
        "EDGESQLResponseSQLResult": {},
        "EDGESQLSQLResult": {},
        "EDGESQLSQLStatementsRequest": {},
        "EDGESQLStatusEnum": {},
        "PAYMENTSCredit": {},
        "PAYMENTSCreditRequest": {},
        "PAYMENTSJSONAPIErrorObject": {},
        "PAYMENTSJSONAPIErrorResponse": {},
        "PAYMENTSJSONAPIErrorSource": {},
        "PAYMENTSPaginatedPaymentHistoryList": {},
        "PAYMENTSPaginatedResponsePaymentMethodList": {},
        "PAYMENTSPatchedPartialUpdateRequest": {},
        "PAYMENTSPaymentHistory": {},
        "PAYMENTSPaymentMethod": {},
        "PAYMENTSPaymentMethodRequest": {},
        "PAYMENTSResponseAsyncCredit": {},
        "PAYMENTSResponseAsyncDeletePaymentMethod": {},
        "PAYMENTSResponseAsyncPaymentMethod": {},
        "PAYMENTSResponseCredit": {},
        "PAYMENTSResponseDeletePaymentMethod": {},
        "PAYMENTSResponsePaymentMethod": {},
        "ACCOUNTSAccount": {},
        "ACCOUNTSAccountInfo": {},
        "ACCOUNTSAccountRequest": {},
        "ACCOUNTSBrand": {},
        "ACCOUNTSBrandRequest": {},
        "ACCOUNTSCreateAccountRequest": {},
        "ACCOUNTSCreateBrandRequest": {},
        "ACCOUNTSCreateOrganizationRequest": {},
        "ACCOUNTSCreateResellerRequest": {},
        "ACCOUNTSCreateWorkspaceRequest": {},
        "ACCOUNTSCurrencyIsoCodeEnum": {},
        "ACCOUNTSJSONAPIErrorObject": {},
        "ACCOUNTSJSONAPIErrorResponse": {},
        "ACCOUNTSJSONAPIErrorSource": {},
        "ACCOUNTSOrganization": {},
        "ACCOUNTSOrganizationRequest": {},
        "ACCOUNTSPaginatedResponseListAccountList": {},
        "ACCOUNTSPatchedAccountRequest": {},
        "ACCOUNTSPatchedBrandRequest": {},
        "ACCOUNTSPatchedOrganizationRequest": {},
        "ACCOUNTSPatchedResellerRequest": {},
        "ACCOUNTSPatchedWorkspaceRequest": {},
        "ACCOUNTSReasonEnum": {},
        "ACCOUNTSReseller": {},
        "ACCOUNTSResellerRequest": {},
        "ACCOUNTSResponseAccount": {},
        "ACCOUNTSResponseAccountInfo": {},
        "ACCOUNTSResponseAsyncAccount": {},
        "ACCOUNTSResponseAsyncAccountInfo": {},
        "ACCOUNTSResponseListAccount": {},
        "ACCOUNTSResponseRetrieveAccount": {},
        "ACCOUNTSResponseRetrieveAccountInfo": {},
        "ACCOUNTSStatusEnum": {},
        "ACCOUNTSTypeEnum": {},
        "ACCOUNTSWorkspace": {},
        "ACCOUNTSWorkspaceRequest": {},
        "STORAGEBucket": {},
        "STORAGEBucketCreate": {},
        "STORAGEBucketCreateRequest": {},
        "STORAGEBucketObject": {},
        "STORAGECapabilitiesEnum": {},
        "STORAGECredential": {},
        "STORAGECredentialCreateRequest": {},
        "STORAGEDefaultErrorResponse": {},
        "STORAGEEdgeAccessEnum": {},
        "STORAGEJSONAPIErrorObject": {},
        "STORAGEJSONAPIErrorResponse": {},
        "STORAGEJSONAPIErrorSource": {},
        "STORAGEObjectResponseAsyncData": {},
        "STORAGEObjectResponseData": {},
        "STORAGEPaginatedBucketList": {},
        "STORAGEPaginatedResponseListCredentialList": {},
        "STORAGEPatchedBucketRequest": {},
        "STORAGEResponseAsyncBucketCreate": {},
        "STORAGEResponseAsyncCredential": {},
        "STORAGEResponseAsyncDeleteBucketCreate": {},
        "STORAGEResponseAsyncDeleteBucketObject": {},
        "STORAGEResponseAsyncDeleteCredential": {},
        "STORAGEResponseBadRequestBucket": {},
        "STORAGEResponseBadRequestCredential": {},
        "STORAGEResponseBucketCreate": {},
        "STORAGEResponseBucketObject": {},
        "STORAGEResponseCredential": {},
        "STORAGEResponseDeleteBucketCreate": {},
        "STORAGEResponseDeleteBucketObject": {},
        "STORAGEResponseListCredential": {},
        "STORAGEResponseRetrieveBucket": {},
        "STORAGEResponseRetrieveCredential": {},
        "STORAGESuccessObjectOperation": {},
        "STORAGESuccessObjectOperationAsync": {},
        "DATAAWSKinesisFirehoseEndpoint": {},
        "DATAAWSKinesisFirehoseEndpointRequest": {},
        "DATAAzureBlobStorageEndpoint": {},
        "DATAAzureBlobStorageEndpointRequest": {},
        "DATAAzureMonitorEndpoint": {},
        "DATAAzureMonitorEndpointRequest": {},
        "DATABigQueryEndpoint": {},
        "DATABigQueryEndpointRequest": {},
        "DATAContentTypeEnum": {},
        "DATADataSourceEnum": {},
        "DATADataStream": {},
        "DATADataStreamRequest": {},
        "DATADatadogEndpoint": {},
        "DATADatadogEndpointRequest": {},
        "DATAElasticsearchEndpoint": {},
        "DATAElasticsearchEndpointRequest": {},
        "DATAHttpPostEndpoint": {},
        "DATAHttpPostEndpointRequest": {},
        "DATAInputDataSource": {},
        "DATAInputDataSourceAttributes": {},
        "DATAInputDataSourceAttributesRequest": {},
        "DATAInputDataSourceAttributesTypeEnum": {},
        "DATAInputDataSourceRequest": {},
        "DATAInputPolymorphic": {},
        "DATAInputPolymorphicInputDataSourceAttributes": {},
        "DATAInputPolymorphicInputDataSourceAttributesRequest": {},
        "DATAInputPolymorphicRequest": {},
        "DATAInputPolymorphicShared": {},
        "DATAJSONAPIErrorObject": {},
        "DATAJSONAPIErrorResponse": {},
        "DATAJSONAPIErrorSource": {},
        "DATAKafkaEndpoint": {
          "tls": {
            "toggle": "use_tls",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "DATAKafkaEndpointRequest": {
          "tls": {
            "toggle": "use_tls",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "DATAOutput": {},
        "DATAOutputPolymorphic": {},
        "DATAOutputPolymorphicRequest": {},
        "DATAOutputRequest": {},
        "DATAOutputTypeEnum": {},
        "DATAPaginatedResponseListDataSourceList": {},
        "DATAPaginatedResponseListDataStreamList": {},
        "DATAPaginatedResponseListTemplateList": {},
        "DATAPatchedDataStreamRequest": {},
        "DATAPatchedTemplateRequest": {},
        "DATAQRadarEndpoint": {},
        "DATAQRadarEndpointRequest": {},
        "DATAResponseAsyncDataStream": {},
        "DATAResponseAsyncDeleteDataStream": {},
        "DATAResponseAsyncDeleteTemplate": {},
        "DATAResponseAsyncTemplate": {},
        "DATAResponseDataStream": {},
        "DATAResponseDeleteDataStream": {},
        "DATAResponseDeleteTemplate": {},
        "DATAResponseListDataSource": {},
        "DATAResponseListDataStream": {},
        "DATAResponseListTemplate": {},
        "DATAResponseRetrieveDataStream": {},
        "DATAResponseRetrieveTemplate": {},
        "DATAResponseTemplate": {},
        "DATAS3Endpoint": {},
        "DATAS3EndpointRequest": {},
        "DATASplunkEndpoint": {},
        "DATASplunkEndpointRequest": {},
        "DATATemplate": {},
        "DATATemplateRequest": {},
        "DATATransformFilterWorkloads": {},
        "DATATransformFilterWorkloadsAttributes": {},
        "DATATransformFilterWorkloadsAttributesRequest": {},
        "DATATransformFilterWorkloadsAttributesTypeEnum": {},
        "DATATransformFilterWorkloadsRequest": {},
        "DATATransformPolymorphic": {},
        "DATATransformPolymorphicRequest": {},
        "DATATransformPolymorphicShared": {},
        "DATATransformPolymorphicTransformFilterWorkloadsAttributes": {},
        "DATATransformPolymorphicTransformFilterWorkloadsAttributesRequest": {},
        "DATATransformPolymorphicTransformRenderTemplateAttributes": {},
        "DATATransformPolymorphicTransformRenderTemplateAttributesRequest": {},
        "DATATransformPolymorphicTransformSamplingAttributes": {},
        "DATATransformPolymorphicTransformSamplingAttributesRequest": {},
        "DATATransformRenderTemplate": {},
        "DATATransformRenderTemplateAttributes": {},
        "DATATransformRenderTemplateAttributesRequest": {},
        "DATATransformRenderTemplateAttributesTypeEnum": {},
        "DATATransformRenderTemplateRequest": {},
        "DATATransformSampling": {},
        "DATATransformSamplingAttributes": {},
        "DATATransformSamplingAttributesRequest": {},
        "DATATransformSamplingAttributesTypeEnum": {},
        "DATATransformSamplingRequest": {},
        "DATAType4f5Enum": {},
        "ORCHESTRATORBlankEnum": {},
        "ORCHESTRATORContent": {},
        "ORCHESTRATORContentRequest": {},
        "ORCHESTRATORDefaultErrorResponse": {},
        "ORCHESTRATORNodeGroups": {},
        "ORCHESTRATORNodeGroupsById": {},
        "ORCHESTRATORNodeGroupsByIdRequest": {},
        "ORCHESTRATORNodeGroupsRequest": {},
        "ORCHESTRATORNodeServiceBind": {},
        "ORCHESTRATORNodeServices": {},
        "ORCHESTRATORNodeServicesRequest": {},
        "ORCHESTRATORNodes": {},
        "ORCHESTRATORNodesRequest": {},
        "ORCHESTRATORPaginatedNodeGroupsList": {},
        "ORCHESTRATORPaginatedResponseListNodeGroupsByIdList": {},
        "ORCHESTRATORPaginatedResponseListNodeServicesList": {},
        "ORCHESTRATORPaginatedResponseListNodesList": {},
        "ORCHESTRATORPaginatedResponseListServicesList": {},
        "ORCHESTRATORPaginatedServiceResourceList": {},
        "ORCHESTRATORPatchedNodesRequest": {},
        "ORCHESTRATORPatchedServicesRequest": {},
        "ORCHESTRATORResponseBadRequestNodeGroupsById": {},
        "ORCHESTRATORResponseBadRequestNodeServiceBind": {},
        "ORCHESTRATORResponseBadRequestNodeServices": {},
        "ORCHESTRATORResponseBadRequestNodes": {},
        "ORCHESTRATORResponseBadRequestServices": {},
        "ORCHESTRATORResponseDeleteNodeServiceBind": {},
        "ORCHESTRATORResponseDeleteNodes": {},
        "ORCHESTRATORResponseDeleteServices": {},
        "ORCHESTRATORResponseListNodeGroupsById": {},
        "ORCHESTRATORResponseListNodeServices": {},
        "ORCHESTRATORResponseListNodes": {},
        "ORCHESTRATORResponseListServices": {},
        "ORCHESTRATORResponseNodeGroupsById": {},
        "ORCHESTRATORResponseNodeServices": {},
        "ORCHESTRATORResponseNodes": {},
        "ORCHESTRATORResponseRetrieveNodeServiceBind": {},
        "ORCHESTRATORResponseRetrieveNodes": {},
        "ORCHESTRATORResponseRetrieveServices": {},
        "ORCHESTRATORResponseServices": {},
        "ORCHESTRATORServiceResource": {},
        "ORCHESTRATORServiceResourceId": {},
        "ORCHESTRATORServiceResourceIdRequest": {},
        "ORCHESTRATORServiceResourceRequest": {},
        "ORCHESTRATORServices": {},
        "ORCHESTRATORServicesRequest": {},
        "ORCHESTRATORStateEnum": {},
        "ORCHESTRATORStatusEnum": {},
        "ORCHESTRATORTriggerEnum": {},
        "VCSBuildContextField": {},
        "VCSBuildContextFieldRequest": {},
        "VCSContinuousDeployment": {},
        "VCSContinuousDeploymentRequest": {},
        "VCSExecution": {},
        "VCSExecutionScript": {},
        "VCSExecutionScriptRequest": {},
        "VCSExecutor": {
          "is": {
            "toggle": "is_active",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "VCSIntegration": {},
        "VCSJSONAPIErrorObject": {},
        "VCSJSONAPIErrorResponse": {},
        "VCSJSONAPIErrorSource": {},
        "VCSPaginatedResponseListContinuousDeploymentList": {},
        "VCSPaginatedResponseListExecutionList": {},
        "VCSPaginatedResponseListExecutionScriptList": {},
        "VCSPaginatedResponseListIntegrationList": {},
        "VCSPaginatedResponseListPlatformList": {},
        "VCSPaginatedResponseListRepositoryList": {},
        "VCSPatchedContinuousDeploymentRequest": {},
        "VCSPlatform": {},
        "VCSResponseAsyncContinuousDeployment": {},
        "VCSResponseAsyncDeleteContinuousDeployment": {},
        "VCSResponseAsyncDeleteIntegration": {},
        "VCSResponseAsyncExecution": {},
        "VCSResponseAsyncExecutor": {},
        "VCSResponseContinuousDeployment": {},
        "VCSResponseDeleteContinuousDeployment": {},
        "VCSResponseDeleteIntegration": {},
        "VCSResponseExecution": {},
        "VCSResponseExecutor": {},
        "VCSResponseListContinuousDeployment": {},
        "VCSResponseListExecution": {},
        "VCSResponseListExecutionScript": {},
        "VCSResponseListIntegration": {},
        "VCSResponseListPlatform": {},
        "VCSResponseListRepository": {},
        "VCSResponseRetrieveContinuousDeployment": {},
        "VCSResponseRetrieveExecutionScript": {},
        "VCSResponseRetrieveExecutor": {},
        "VCSResponseRetrieveIntegration": {},
        "DNSAlgType": {},
        "DNSAlgTypeRequest": {},
        "DNSDNSSEC": {},
        "DNSDNSSECRequest": {},
        "DNSDelegationSigner": {},
        "DNSDelegationSignerRequest": {},
        "DNSJSONAPIErrorObject": {},
        "DNSJSONAPIErrorResponse": {},
        "DNSJSONAPIErrorSource": {},
        "DNSPaginatedRecordList": {},
        "DNSPaginatedZoneList": {},
        "DNSPatchedDNSSECRequest": {},
        "DNSPatchedRecordRequest": {},
        "DNSPatchedUpdateZoneRequest": {},
        "DNSPolicyEnum": {},
        "DNSRecord": {},
        "DNSRecordRequest": {},
        "DNSResponseAsyncDNSSEC": {},
        "DNSResponseAsyncDeleteRecord": {},
        "DNSResponseAsyncDeleteZone": {},
        "DNSResponseAsyncRecord": {},
        "DNSResponseAsyncZone": {},
        "DNSResponseDNSSEC": {},
        "DNSResponseDeleteRecord": {},
        "DNSResponseDeleteZone": {},
        "DNSResponseRecord": {},
        "DNSResponseRetrieveDNSSEC": {},
        "DNSResponseRetrieveRecord": {},
        "DNSResponseRetrieveZone": {},
        "DNSResponseZone": {},
        "DNSStatusEnum": {},
        "DNSTypeEnum": {},
        "DNSUpdateZoneRequest": {},
        "DNSZone": {},
        "DNSZoneRequest": {},
        "BILLINGJSONAPIErrorObject": {},
        "BILLINGJSONAPIErrorResponse": {},
        "BILLINGJSONAPIErrorSource": {},
        "TLSAuthorityEnum": {},
        "TLSCertificate": {},
        "TLSCertificateRequest": {},
        "TLSCertificateRequestRequest": {},
        "TLSCertificateRevocationList": {},
        "TLSCertificateRevocationListRequest": {},
        "TLSCertificateSigningRequestRequest": {},
        "TLSChallengeEnum": {},
        "TLSDefaultErrorResponse": {},
        "TLSJSONAPIErrorObject": {},
        "TLSJSONAPIErrorResponse": {},
        "TLSJSONAPIErrorSource": {},
        "TLSKeyAlgorithmEnum": {},
        "TLSNullEnum": {},
        "TLSPaginatedCertificateList": {},
        "TLSPaginatedCertificateRevocationListList": {},
        "TLSPatchedCertificateRequest": {},
        "TLSPatchedCertificateRevocationListRequest": {},
        "TLSResponseAsyncCertificate": {},
        "TLSResponseAsyncCertificateRevocationList": {},
        "TLSResponseAsyncDeleteCertificate": {},
        "TLSResponseAsyncDeleteCertificateRevocationList": {},
        "TLSResponseBadRequestCertificate": {},
        "TLSResponseCertificate": {},
        "TLSResponseCertificateRevocationList": {},
        "TLSResponseDeleteCertificate": {},
        "TLSResponseDeleteCertificateRevocationList": {},
        "TLSResponseRetrieveCertificate": {},
        "TLSResponseRetrieveCertificateRevocationList": {},
        "TLSStatusEnum": {},
        "TLSTypeEnum": {},
        "MARKETPLACEDefaultErrorResponse": {},
        "MARKETPLACEPublisher": {},
        "MARKETPLACEPublisherRequest": {},
        "MARKETPLACEResponseBadRequestPublisher": {},
        "MARKETPLACEResponsePublisher": {},
        "MARKETPLACEResponseRetrievePublisher": {},
        "MARKETPLACEStateEnum": {},
        "IDENTITYDefaultErrorResponse": {},
        "IDENTITYFavorite": {},
        "IDENTITYFavoriteRequest": {},
        "IDENTITYGrant": {},
        "IDENTITYGrantRequest": {},
        "IDENTITYGroup": {},
        "IDENTITYGroupMembers": {},
        "IDENTITYGroupMembersRequest": {},
        "IDENTITYGroupRequest": {},
        "IDENTITYPaginatedResponseListFavoriteList": {},
        "IDENTITYPaginatedResponseListGrantList": {},
        "IDENTITYPaginatedResponseListGroupList": {},
        "IDENTITYPaginatedResponseListServiceTokenList": {},
        "IDENTITYPaginatedResponseListUserList": {},
        "IDENTITYPatchedGrantRequest": {},
        "IDENTITYPatchedGroupRequest": {},
        "IDENTITYPatchedServiceTokenUpdateRequest": {},
        "IDENTITYPatchedUserRequest": {
          "two_factor": {
            "toggle": "two_factor_enabled",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "IDENTITYResponseBadRequestFavorite": {},
        "IDENTITYResponseBadRequestGrant": {},
        "IDENTITYResponseBadRequestGroup": {},
        "IDENTITYResponseBadRequestGroupMembers": {},
        "IDENTITYResponseBadRequestServiceToken": {},
        "IDENTITYResponseBadRequestServiceTokenRenew": {},
        "IDENTITYResponseBadRequestUser": {},
        "IDENTITYResponseBadRequestUserInfo": {},
        "IDENTITYResponseDeleteFavorite": {},
        "IDENTITYResponseDeleteGrant": {},
        "IDENTITYResponseDeleteGroup": {},
        "IDENTITYResponseDeleteServiceToken": {},
        "IDENTITYResponseDeleteUser": {},
        "IDENTITYResponseFavorite": {},
        "IDENTITYResponseGrant": {},
        "IDENTITYResponseGroup": {},
        "IDENTITYResponseGroupMembers": {},
        "IDENTITYResponseListFavorite": {},
        "IDENTITYResponseListGrant": {},
        "IDENTITYResponseListGroup": {},
        "IDENTITYResponseListServiceToken": {},
        "IDENTITYResponseListUser": {
          "two_factor": {
            "toggle": "two_factor_enabled",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "IDENTITYResponseRetrieveGrant": {},
        "IDENTITYResponseRetrieveGroup": {},
        "IDENTITYResponseRetrieveGroupMembers": {},
        "IDENTITYResponseRetrieveServiceToken": {},
        "IDENTITYResponseRetrieveUser": {},
        "IDENTITYResponseRetrieveUserInfo": {},
        "IDENTITYResponseServiceToken": {},
        "IDENTITYResponseServiceTokenCreate": {},
        "IDENTITYResponseServiceTokenRenew": {},
        "IDENTITYResponseUser": {},
        "IDENTITYResponseUserInfo": {},
        "IDENTITYServiceToken": {},
        "IDENTITYServiceTokenCreate": {},
        "IDENTITYServiceTokenCreateRequest": {},
        "IDENTITYServiceTokenRenew": {},
        "IDENTITYServiceTokenRenewRequest": {},
        "IDENTITYServiceTokenUpdateRequest": {},
        "IDENTITYStateEnum": {},
        "IDENTITYUser": {
          "two_factor": {
            "toggle": "two_factor_enabled",
            "dependencies": [],
            "impact_level": "low"
          }
        },
        "IDENTITYUserInfo": {},
        "IDENTITYUserRequest": {
          "two_factor": {
            "toggle": "two_factor_enabled",
            "dependencies": [],
            "impact_level": "low"
          }
        }
      },
      "schema_to_schema": {
        "AUTHPolicyRule": {
          "depends_on": [
            "AUTHEffectEnum",
            "AUTHPolicyRuleCondition"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "AUTHPolicyRuleRequest": {
          "depends_on": [
            "AUTHEffectEnum",
            "AUTHPolicyRuleConditionRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "AUTHResponseAsyncLockoutPolicy": {
          "depends_on": [
            "AUTHLockoutPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseAsyncLogin": {
          "depends_on": [
            "AUTHLoginResponse"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseAsyncPolicy": {
          "depends_on": [
            "AUTHPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseAsyncSessionTimeoutPolicy": {
          "depends_on": [
            "AUTHSessionTimeoutPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseAsyncTOTPDeviceCreate": {
          "depends_on": [
            "AUTHTOTPDeviceCreate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseAsyncToken": {
          "depends_on": [
            "AUTHToken"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseAsyncTokenPair": {
          "depends_on": [
            "AUTHTokenPair"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseLockoutPolicy": {
          "depends_on": [
            "AUTHLockoutPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseLogin": {
          "depends_on": [
            "AUTHLoginResponse"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponsePolicy": {
          "depends_on": [
            "AUTHPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseRetrieveLockoutPolicy": {
          "depends_on": [
            "AUTHLockoutPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseRetrievePolicy": {
          "depends_on": [
            "AUTHPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseRetrieveSessionTimeoutPolicy": {
          "depends_on": [
            "AUTHSessionTimeoutPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseSessionTimeoutPolicy": {
          "depends_on": [
            "AUTHSessionTimeoutPolicy"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseTOTPDeviceCreate": {
          "depends_on": [
            "AUTHTOTPDeviceCreate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseToken": {
          "depends_on": [
            "AUTHToken"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "AUTHResponseTokenPair": {
          "depends_on": [
            "AUTHTokenPair"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEAWS4HMAC": {
          "depends_on": [
            "EDGEAWS4HMACTypeEnum",
            "EDGEAWS4HMACAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEAWS4HMACRequest": {
          "depends_on": [
            "EDGEAWS4HMACTypeEnum",
            "EDGEAWS4HMACAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEAddressModules": {
          "depends_on": [
            "EDGEAddressLoadBalancerModule"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEAddressModulesRequest": {
          "depends_on": [
            "EDGEAddressLoadBalancerModuleRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEApplication": {
          "depends_on": [
            "EDGEApplicationModules"
          ],
          "depended_by": [
            "EDGEResponseApplication",
            "EDGEResponseAsyncApplication",
            "EDGEResponseRetrieveApplication"
          ],
          "coupling_score": 4
        },
        "EDGEApplicationRequest": {
          "depends_on": [
            "EDGEApplicationModulesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineAddHeader": {
          "depends_on": [
            "EDGEApplicationRuleEngineAddHeaderTypeEnum",
            "EDGEApplicationRuleEngineAddHeaderAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddHeaderRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineAddHeaderTypeEnum",
            "EDGEApplicationRuleEngineAddHeaderAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddRequestCookie": {
          "depends_on": [
            "EDGEApplicationRuleEngineAddRequestCookieTypeEnum",
            "EDGEApplicationRuleEngineAddRequestCookieAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddRequestCookieRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineAddRequestCookieTypeEnum",
            "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddResponseHeader": {
          "depends_on": [
            "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum",
            "EDGEApplicationRuleEngineAddResponseHeaderAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddResponseHeaderRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum",
            "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineCaptureMatchGroups": {
          "depends_on": [
            "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum",
            "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineCaptureMatchGroupsRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum",
            "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterHeader": {
          "depends_on": [
            "EDGEApplicationRuleEngineFilterHeaderTypeEnum",
            "EDGEApplicationRuleEngineFilterHeaderAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterHeaderRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineFilterHeaderTypeEnum",
            "EDGEApplicationRuleEngineFilterHeaderAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterRequestCookie": {
          "depends_on": [
            "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum",
            "EDGEApplicationRuleEngineFilterRequestCookieAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterRequestCookieRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum",
            "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterResponseHeader": {
          "depends_on": [
            "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum",
            "EDGEApplicationRuleEngineFilterResponseHeaderAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterResponseHeaderRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum",
            "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineNoArgs": {
          "depends_on": [
            "EDGEApplicationRuleEngineNoArgsTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineNoArgsRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineNoArgsTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineResponseNoArgs": {
          "depends_on": [
            "EDGEApplicationRuleEngineResponseNoArgsTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineResponseNoArgsRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineResponseNoArgsTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineResponseString": {
          "depends_on": [
            "EDGEApplicationRuleEngineResponseStringTypeEnum",
            "EDGEApplicationRuleEngineResponseStringAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineResponseStringRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineResponseStringTypeEnum",
            "EDGEApplicationRuleEngineResponseStringAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRewriteRequest": {
          "depends_on": [
            "EDGETypeF11Enum",
            "EDGEApplicationRuleEngineRewriteRequestAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRewriteRequestRequest": {
          "depends_on": [
            "EDGETypeF11Enum",
            "EDGEApplicationRuleEngineRewriteRequestAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRunFunction": {
          "depends_on": [
            "EDGEType689Enum",
            "EDGEApplicationRuleEngineRunFunctionAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRunFunctionRequest": {
          "depends_on": [
            "EDGEType689Enum",
            "EDGEApplicationRuleEngineRunFunctionAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRunFunctionResponse": {
          "depends_on": [
            "EDGEType689Enum",
            "EDGEApplicationRuleEngineRunFunctionResponseAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRunFunctionResponseRequest": {
          "depends_on": [
            "EDGEType689Enum",
            "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetCachePolicy": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetCachePolicyTypeEnum",
            "EDGEApplicationRuleEngineSetCachePolicyAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetCachePolicyRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetCachePolicyTypeEnum",
            "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetConnector": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetConnectorTypeEnum",
            "EDGEApplicationRuleEngineSetConnectorAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetConnectorRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetConnectorTypeEnum",
            "EDGEApplicationRuleEngineSetConnectorAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetCookie": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetCookieTypeEnum",
            "EDGEApplicationRuleEngineSetCookieAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetCookieRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetCookieTypeEnum",
            "EDGEApplicationRuleEngineSetCookieAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetOrigin": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetOriginTypeEnum",
            "EDGEApplicationRuleEngineSetOriginAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetOriginRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineSetOriginTypeEnum",
            "EDGEApplicationRuleEngineSetOriginAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineString": {
          "depends_on": [
            "EDGEApplicationRuleEngineStringTypeEnum",
            "EDGEApplicationRuleEngineStringAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineStringRequest": {
          "depends_on": [
            "EDGEApplicationRuleEngineStringTypeEnum",
            "EDGEApplicationRuleEngineStringAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGECacheSetting": {
          "depends_on": [
            "EDGEBrowserCacheModule",
            "EDGECacheSettingsModules"
          ],
          "depended_by": [
            "EDGEResponseAsyncCacheSetting",
            "EDGEResponseRetrieveCacheSetting"
          ],
          "coupling_score": 4
        },
        "EDGECacheSettingRequest": {
          "depends_on": [
            "EDGEBrowserCacheModuleRequest",
            "EDGECacheSettingsModulesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGECacheSettingsApplicationAcceleratorModule": {
          "depends_on": [
            "EDGECacheVaryByQuerystringModule",
            "EDGECacheVaryByCookiesModule",
            "EDGECacheVaryByDevicesModule"
          ],
          "depended_by": [
            "EDGECacheSettingsModules"
          ],
          "coupling_score": 4
        },
        "EDGECacheSettingsApplicationAcceleratorModuleRequest": {
          "depends_on": [
            "EDGECacheVaryByQuerystringModuleRequest",
            "EDGECacheVaryByCookiesModuleRequest",
            "EDGECacheVaryByDevicesModuleRequest"
          ],
          "depended_by": [
            "EDGECacheSettingsModulesRequest"
          ],
          "coupling_score": 4
        },
        "EDGECacheSettingsEdgeCacheModule": {
          "depends_on": [
            "EDGEStateCacheModule",
            "EDGELargeFileCacheModule"
          ],
          "depended_by": [
            "EDGECacheSettingsModules"
          ],
          "coupling_score": 3
        },
        "EDGECacheSettingsEdgeCacheModuleRequest": {
          "depends_on": [
            "EDGEStateCacheModuleRequest",
            "EDGELargeFileCacheModuleRequest"
          ],
          "depended_by": [
            "EDGECacheSettingsModulesRequest"
          ],
          "coupling_score": 3
        },
        "EDGECacheSettingsModules": {
          "depends_on": [
            "EDGECacheSettingsEdgeCacheModule",
            "EDGECacheSettingsApplicationAcceleratorModule"
          ],
          "depended_by": [
            "EDGECacheSetting",
            "EDGEResponseListCacheSetting"
          ],
          "coupling_score": 4
        },
        "EDGECacheSettingsModulesRequest": {
          "depends_on": [
            "EDGECacheSettingsEdgeCacheModuleRequest",
            "EDGECacheSettingsApplicationAcceleratorModuleRequest"
          ],
          "depended_by": [
            "EDGECacheSettingRequest",
            "EDGEPatchedCacheSettingRequest"
          ],
          "coupling_score": 4
        },
        "EDGECacheSettingsTieredCacheModule": {
          "depends_on": [
            "EDGETopologyEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGECacheSettingsTieredCacheModuleRequest": {
          "depends_on": [
            "EDGETopologyEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEConnectorHTTP": {
          "depends_on": [
            "EDGEConnectorHTTPAttributes"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEConnectorHTTPRequest": {
          "depends_on": [
            "EDGEConnectorHTTPAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEConnectorLiveIngest": {
          "depends_on": [
            "EDGEConnectorLiveIngestAttributes"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEConnectorLiveIngestAttributes": {
          "depends_on": [
            "EDGERegionEnum"
          ],
          "depended_by": [
            "EDGEConnectorLiveIngest"
          ],
          "coupling_score": 2
        },
        "EDGEConnectorLiveIngestAttributesRequest": {
          "depends_on": [
            "EDGERegionEnum"
          ],
          "depended_by": [
            "EDGEConnectorLiveIngestRequest",
            "EDGEPatchedConnectorLiveIngestRequest"
          ],
          "coupling_score": 3
        },
        "EDGEConnectorLiveIngestRequest": {
          "depends_on": [
            "EDGEConnectorLiveIngestAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEConnectorStorage": {
          "depends_on": [
            "EDGEConnectorStorageAttributes"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEConnectorStorageRequest": {
          "depends_on": [
            "EDGEConnectorStorageAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEDefaultDeploymentStrategy": {
          "depends_on": [
            "EDGEDefaultDeploymentStrategyAttrs"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEDefaultDeploymentStrategyRequest": {
          "depends_on": [
            "EDGEDefaultDeploymentStrategyAttrsRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEEdgeApplicationCriterionField": {
          "depends_on": [
            "EDGEConditionalEnum",
            "EDGEEdgeApplicationCriterionFieldVariableEnum",
            "EDGEOperator565Enum"
          ],
          "depended_by": [],
          "coupling_score": 3
        },
        "EDGEEdgeApplicationCriterionFieldRequest": {
          "depends_on": [
            "EDGEConditionalEnum",
            "EDGEEdgeApplicationCriterionFieldVariableEnum",
            "EDGEOperator565Enum"
          ],
          "depended_by": [],
          "coupling_score": 3
        },
        "EDGEEdgeFirewallCriterionField": {
          "depends_on": [
            "EDGEConditionalEnum",
            "EDGEEdgeFirewallCriterionFieldVariableEnum",
            "EDGEOperator565Enum"
          ],
          "depended_by": [],
          "coupling_score": 3
        },
        "EDGEEdgeFirewallCriterionFieldRequest": {
          "depends_on": [
            "EDGEConditionalEnum",
            "EDGEEdgeFirewallCriterionFieldVariableEnum",
            "EDGEOperator565Enum"
          ],
          "depended_by": [],
          "coupling_score": 3
        },
        "EDGEFirewall": {
          "depends_on": [
            "EDGEFirewallModules"
          ],
          "depended_by": [
            "EDGEResponseAsyncFirewall",
            "EDGEResponseFirewall",
            "EDGEResponseRetrieveFirewall"
          ],
          "coupling_score": 4
        },
        "EDGEFirewallBehaviorNoArguments": {
          "depends_on": [
            "EDGEFirewallBehaviorNoArgumentsTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorNoArgumentsRequest": {
          "depends_on": [
            "EDGEFirewallBehaviorNoArgumentsTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorRunFunction": {
          "depends_on": [
            "EDGEType689Enum",
            "EDGEFirewallBehaviorRunFunctionAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorRunFunctionRequest": {
          "depends_on": [
            "EDGEType689Enum",
            "EDGEFirewallBehaviorRunFunctionAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetCustomResponse": {
          "depends_on": [
            "EDGEFirewallBehaviorSetCustomResponseTypeEnum",
            "EDGEFirewallBehaviorSetCustomResponseAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetCustomResponseRequest": {
          "depends_on": [
            "EDGEFirewallBehaviorSetCustomResponseTypeEnum",
            "EDGEFirewallBehaviorSetCustomResponseAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetRateLimit": {
          "depends_on": [
            "EDGEFirewallBehaviorSetRateLimitTypeEnum",
            "EDGEFirewallBehaviorSetRateLimitAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetRateLimitAttributes": {
          "depends_on": [
            "EDGELimitByEnum"
          ],
          "depended_by": [
            "EDGEFirewallBehaviorSetRateLimit"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetRateLimitAttributesRequest": {
          "depends_on": [
            "EDGELimitByEnum"
          ],
          "depended_by": [
            "EDGEFirewallBehaviorSetRateLimitRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetRateLimitRequest": {
          "depends_on": [
            "EDGEFirewallBehaviorSetRateLimitTypeEnum",
            "EDGEFirewallBehaviorSetRateLimitAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetWaf": {
          "depends_on": [
            "EDGEFirewallBehaviorSetWafTypeEnum",
            "EDGEFirewallBehaviorSetWafAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetWafAttributes": {
          "depends_on": [
            "EDGEModeEnum"
          ],
          "depended_by": [
            "EDGEFirewallBehaviorSetWaf"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetWafAttributesRequest": {
          "depends_on": [
            "EDGEModeEnum"
          ],
          "depended_by": [
            "EDGEFirewallBehaviorSetWafRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetWafRequest": {
          "depends_on": [
            "EDGEFirewallBehaviorSetWafTypeEnum",
            "EDGEFirewallBehaviorSetWafAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorTagEvent": {
          "depends_on": [
            "EDGEFirewallBehaviorTagEventTypeEnum",
            "EDGEFirewallBehaviorTagEventAttributes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorTagEventRequest": {
          "depends_on": [
            "EDGEFirewallBehaviorTagEventTypeEnum",
            "EDGEFirewallBehaviorTagEventAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEFirewallRequest": {
          "depends_on": [
            "EDGEFirewallModulesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGENetworkList": {
          "depends_on": [
            "EDGEType528Enum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGENetworkListDetail": {
          "depends_on": [
            "EDGEType528Enum"
          ],
          "depended_by": [
            "EDGEResponseAsyncNetworkListDetail",
            "EDGEResponseNetworkListDetail",
            "EDGEResponseRetrieveNetworkListDetail"
          ],
          "coupling_score": 4
        },
        "EDGENetworkListDetailRequest": {
          "depends_on": [
            "EDGEType528Enum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEOriginShieldConfig": {
          "depends_on": [
            "EDGEOriginIPACL",
            "EDGEHMAC"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEOriginShieldConfigRequest": {
          "depends_on": [
            "EDGEOriginIPACLRequest",
            "EDGEHMACRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEPage": {
          "depends_on": [
            "EDGECodeEnum",
            "EDGEPagePolymorphic"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEPageConnector": {
          "depends_on": [
            "EDGEPageConnectorAttributes"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPageConnectorRequest": {
          "depends_on": [
            "EDGEPageConnectorAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPageRequest": {
          "depends_on": [
            "EDGECodeEnum",
            "EDGEPagePolymorphicRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEPatchedApplicationRequest": {
          "depends_on": [
            "EDGEApplicationModulesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedCacheSettingRequest": {
          "depends_on": [
            "EDGEBrowserCacheModuleRequest",
            "EDGECacheSettingsModulesRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEPatchedConnectorHTTPRequest": {
          "depends_on": [
            "EDGEConnectorHTTPAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedConnectorLiveIngestRequest": {
          "depends_on": [
            "EDGEConnectorLiveIngestAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedConnectorStorageRequest": {
          "depends_on": [
            "EDGEConnectorStorageAttributesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedFirewallRequest": {
          "depends_on": [
            "EDGEFirewallModulesRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedNetworkListDetailRequest": {
          "depends_on": [
            "EDGEType528Enum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedWAFRequest": {
          "depends_on": [
            "EDGEWAFEngineSettingsFieldRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedWorkloadDeploymentRequest": {
          "depends_on": [
            "EDGEDeploymentStrategyRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEPatchedWorkloadRequest": {
          "depends_on": [
            "EDGEMTLSRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseApplication": {
          "depends_on": [
            "EDGEApplication"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseApplicationDeviceGroups": {
          "depends_on": [
            "EDGEApplicationDeviceGroups"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseApplicationFunctionInstance": {
          "depends_on": [
            "EDGEApplicationFunctionInstance"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseApplicationRequestPhaseRuleEngine": {
          "depends_on": [
            "EDGEApplicationRequestPhaseRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseApplicationResponsePhaseRuleEngine": {
          "depends_on": [
            "EDGEApplicationResponsePhaseRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncApplication": {
          "depends_on": [
            "EDGEApplication"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncApplicationDeviceGroups": {
          "depends_on": [
            "EDGEApplicationDeviceGroups"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncApplicationFunctionInstance": {
          "depends_on": [
            "EDGEApplicationFunctionInstance"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncApplicationRequestPhaseRuleEngine": {
          "depends_on": [
            "EDGEApplicationRequestPhaseRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncApplicationResponsePhaseRuleEngine": {
          "depends_on": [
            "EDGEApplicationResponsePhaseRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncCacheSetting": {
          "depends_on": [
            "EDGECacheSetting"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncConnectorPolymorphic": {
          "depends_on": [
            "EDGEConnectorPolymorphic"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncCustomPage": {
          "depends_on": [
            "EDGECustomPage"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncFirewall": {
          "depends_on": [
            "EDGEFirewall"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncFirewallFunctionInstance": {
          "depends_on": [
            "EDGEFirewallFunctionInstance"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncFirewallRuleEngine": {
          "depends_on": [
            "EDGEFirewallRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncFunctionsDoc": {
          "depends_on": [
            "EDGEEdgeFunctions"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncNetworkListDetail": {
          "depends_on": [
            "EDGENetworkListDetail"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncPurgeInput": {
          "depends_on": [
            "EDGEPurgeInput"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncWAF": {
          "depends_on": [
            "EDGEWAF"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncWAFRule": {
          "depends_on": [
            "EDGEWAFRule"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncWorkload": {
          "depends_on": [
            "EDGEWorkload"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseAsyncWorkloadDeployment": {
          "depends_on": [
            "EDGEWorkloadDeployment"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestApplication": {
          "depends_on": [
            "EDGEResponseBadRequestSerializerMetaclassModulesField"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSetting": {
          "depends_on": [
            "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField",
            "EDGEResponseBadRequestSerializerMetaclassModulesField"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField": {
          "depends_on": [
            "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField",
            "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField",
            "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField"
          ],
          "depended_by": [
            "EDGEResponseBadRequestSerializerMetaclassModulesField"
          ],
          "coupling_score": 4
        },
        "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField": {
          "depends_on": [
            "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField",
            "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField"
          ],
          "depended_by": [
            "EDGEResponseBadRequestSerializerMetaclassModulesField"
          ],
          "coupling_score": 3
        },
        "EDGEResponseBadRequestSerializerMetaclassModulesField": {
          "depends_on": [
            "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField",
            "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField",
            "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField"
          ],
          "depended_by": [
            "EDGEResponseBadRequestApplication",
            "EDGEResponseBadRequestCacheSetting"
          ],
          "coupling_score": 5
        },
        "EDGEResponseBadRequestWorkloadDeployment": {
          "depends_on": [
            "EDGEResponseBadRequestSerializerMetaclassStrategyField"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseConnectorPolymorphic": {
          "depends_on": [
            "EDGEConnectorPolymorphic"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseCustomPage": {
          "depends_on": [
            "EDGECustomPage"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseFirewall": {
          "depends_on": [
            "EDGEFirewall"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseFirewallFunctionInstance": {
          "depends_on": [
            "EDGEFirewallFunctionInstance"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseFirewallRuleEngine": {
          "depends_on": [
            "EDGEFirewallRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseFunctionsDoc": {
          "depends_on": [
            "EDGEEdgeFunctions"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseListCacheSetting": {
          "depends_on": [
            "EDGEBrowserCacheModule",
            "EDGECacheSettingsModules"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "EDGEResponseNetworkListDetail": {
          "depends_on": [
            "EDGENetworkListDetail"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponsePurgeInput": {
          "depends_on": [
            "EDGEPurgeInput"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveApplication": {
          "depends_on": [
            "EDGEApplication"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveApplicationDeviceGroups": {
          "depends_on": [
            "EDGEApplicationDeviceGroups"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveApplicationFunctionInstance": {
          "depends_on": [
            "EDGEApplicationFunctionInstance"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine": {
          "depends_on": [
            "EDGEApplicationRequestPhaseRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveCacheSetting": {
          "depends_on": [
            "EDGECacheSetting"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveConnectorPolymorphic": {
          "depends_on": [
            "EDGEConnectorPolymorphic"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveCustomPage": {
          "depends_on": [
            "EDGECustomPage"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveFirewall": {
          "depends_on": [
            "EDGEFirewall"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveFirewallFunctionInstance": {
          "depends_on": [
            "EDGEFirewallFunctionInstance"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveFirewallRuleEngine": {
          "depends_on": [
            "EDGEFirewallRuleEngine"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveFunctionsDoc": {
          "depends_on": [
            "EDGEEdgeFunctions"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveNetworkListDetail": {
          "depends_on": [
            "EDGENetworkListDetail"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveWAF": {
          "depends_on": [
            "EDGEWAF"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveWAFRule": {
          "depends_on": [
            "EDGEWAFRule"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveWorkload": {
          "depends_on": [
            "EDGEWorkload"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseRetrieveWorkloadDeployment": {
          "depends_on": [
            "EDGEWorkloadDeployment"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseWAF": {
          "depends_on": [
            "EDGEWAF"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseWAFRule": {
          "depends_on": [
            "EDGEWAFRule"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseWorkload": {
          "depends_on": [
            "EDGEWorkload"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEResponseWorkloadDeployment": {
          "depends_on": [
            "EDGEWorkloadDeployment"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEThresholdsConfigField": {
          "depends_on": [
            "EDGEThreatEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEThresholdsConfigFieldRequest": {
          "depends_on": [
            "EDGEThreatEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAF": {
          "depends_on": [
            "EDGEWAFEngineSettingsField"
          ],
          "depended_by": [
            "EDGEResponseAsyncWAF",
            "EDGEResponseRetrieveWAF",
            "EDGEResponseWAF"
          ],
          "coupling_score": 4
        },
        "EDGEWAFEngineSettingsField": {
          "depends_on": [
            "EDGEWAFEngineSettingsAttributesField"
          ],
          "depended_by": [
            "EDGEWAF"
          ],
          "coupling_score": 2
        },
        "EDGEWAFEngineSettingsFieldRequest": {
          "depends_on": [
            "EDGEWAFEngineSettingsAttributesFieldRequest"
          ],
          "depended_by": [
            "EDGEPatchedWAFRequest",
            "EDGEWAFRequest"
          ],
          "coupling_score": 3
        },
        "EDGEWAFExceptionGenericCondition": {
          "depends_on": [
            "EDGEWAFExceptionGenericConditionMatchEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAFExceptionGenericConditionRequest": {
          "depends_on": [
            "EDGEWAFExceptionGenericConditionMatchEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAFExceptionSpecificConditionOnName": {
          "depends_on": [
            "EDGEWAFExceptionSpecificConditionOnNameMatchEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAFExceptionSpecificConditionOnNameRequest": {
          "depends_on": [
            "EDGEWAFExceptionSpecificConditionOnNameMatchEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAFExceptionSpecificConditionOnValue": {
          "depends_on": [
            "EDGEWAFExceptionSpecificConditionOnValueMatchEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAFExceptionSpecificConditionOnValueRequest": {
          "depends_on": [
            "EDGEWAFExceptionSpecificConditionOnValueMatchEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWAFRequest": {
          "depends_on": [
            "EDGEWAFEngineSettingsFieldRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWorkload": {
          "depends_on": [
            "EDGEMTLS"
          ],
          "depended_by": [
            "EDGEResponseAsyncWorkload",
            "EDGEResponseRetrieveWorkload",
            "EDGEResponseWorkload"
          ],
          "coupling_score": 4
        },
        "EDGEWorkloadDeployment": {
          "depends_on": [
            "EDGEDeploymentStrategy"
          ],
          "depended_by": [
            "EDGEResponseAsyncWorkloadDeployment",
            "EDGEResponseRetrieveWorkloadDeployment",
            "EDGEResponseWorkloadDeployment"
          ],
          "coupling_score": 4
        },
        "EDGEWorkloadDeploymentRequest": {
          "depends_on": [
            "EDGEDeploymentStrategyRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGEWorkloadRequest": {
          "depends_on": [
            "EDGEMTLSRequest"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSBaseQuery": {
          "depends_on": [
            "METRICSOrderDirectionEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSBaseQueryRequest": {
          "depends_on": [
            "METRICSOrderDirectionEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSDashboard": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [
            "METRICSResponseAsyncDashboard",
            "METRICSResponseDashboard",
            "METRICSResponseRetrieveDashboard"
          ],
          "coupling_score": 4
        },
        "METRICSDashboardRequest": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSFolder": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [
            "METRICSResponseAsyncFolder",
            "METRICSResponseFolder",
            "METRICSResponseRetrieveFolder"
          ],
          "coupling_score": 4
        },
        "METRICSFolderRequest": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSLibraryReportRequest": {
          "depends_on": [
            "METRICSTypeEnum",
            "METRICSAggregationTypeEnum",
            "METRICSDataUnitEnum",
            "METRICSScopeEnum",
            "METRICSComparisonTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 5
        },
        "METRICSPatchedDashboardRequest": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSPatchedFolderRequest": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSReport": {
          "depends_on": [
            "METRICSTypeEnum",
            "METRICSAggregationTypeEnum",
            "METRICSDataUnitEnum",
            "METRICSComparisonTypeEnum"
          ],
          "depended_by": [
            "METRICSResponseAsyncReport",
            "METRICSResponseReport",
            "METRICSResponseRetrieveReport"
          ],
          "coupling_score": 7
        },
        "METRICSReportRequest": {
          "depends_on": [
            "METRICSTypeEnum",
            "METRICSAggregationTypeEnum",
            "METRICSDataUnitEnum",
            "METRICSComparisonTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 4
        },
        "METRICSResponseAsyncDashboard": {
          "depends_on": [
            "METRICSDashboard"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseAsyncFolder": {
          "depends_on": [
            "METRICSFolder"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseAsyncOrder": {
          "depends_on": [
            "METRICSOrder"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseAsyncReport": {
          "depends_on": [
            "METRICSReport"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseAsyncRow": {
          "depends_on": [
            "METRICSRow"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseDashboard": {
          "depends_on": [
            "METRICSDashboard"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseFolder": {
          "depends_on": [
            "METRICSFolder"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseListDashboard": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseListFolder": {
          "depends_on": [
            "METRICSScopeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseListReport": {
          "depends_on": [
            "METRICSTypeEnum",
            "METRICSAggregationTypeEnum",
            "METRICSDataUnitEnum",
            "METRICSComparisonTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 4
        },
        "METRICSResponseOrder": {
          "depends_on": [
            "METRICSOrder"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseReport": {
          "depends_on": [
            "METRICSReport"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseRetrieveDashboard": {
          "depends_on": [
            "METRICSDashboard"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseRetrieveFolder": {
          "depends_on": [
            "METRICSFolder"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseRetrieveReport": {
          "depends_on": [
            "METRICSReport"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseRetrieveRow": {
          "depends_on": [
            "METRICSRow"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "METRICSResponseRow": {
          "depends_on": [
            "METRICSRow"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGESQLResponseAsyncOpenAPISchema": {
          "depends_on": [
            "EDGESQLOpenAPISchema"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGESQLResponseAsyncSQLResult": {
          "depends_on": [
            "EDGESQLSQLResult"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGESQLResponseOpenAPISchema": {
          "depends_on": [
            "EDGESQLOpenAPISchema"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGESQLResponseRetrieveOpenAPISchema": {
          "depends_on": [
            "EDGESQLOpenAPISchema"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "EDGESQLResponseSQLResult": {
          "depends_on": [
            "EDGESQLSQLResult"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "PAYMENTSResponseAsyncCredit": {
          "depends_on": [
            "PAYMENTSCredit"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "PAYMENTSResponseAsyncPaymentMethod": {
          "depends_on": [
            "PAYMENTSPaymentMethod"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "PAYMENTSResponseCredit": {
          "depends_on": [
            "PAYMENTSCredit"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "PAYMENTSResponsePaymentMethod": {
          "depends_on": [
            "PAYMENTSPaymentMethod"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSBrand": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSBrandRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSCreateBrandRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSCreateOrganizationRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSCreateResellerRequest": {
          "depends_on": [
            "ACCOUNTSCurrencyIsoCodeEnum",
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ACCOUNTSCreateWorkspaceRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSOrganization": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSOrganizationRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSPatchedBrandRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSPatchedOrganizationRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSPatchedResellerRequest": {
          "depends_on": [
            "ACCOUNTSCurrencyIsoCodeEnum",
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ACCOUNTSPatchedWorkspaceRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSReseller": {
          "depends_on": [
            "ACCOUNTSCurrencyIsoCodeEnum",
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ACCOUNTSResellerRequest": {
          "depends_on": [
            "ACCOUNTSCurrencyIsoCodeEnum",
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ACCOUNTSResponseAccount": {
          "depends_on": [
            "ACCOUNTSAccount"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSResponseAccountInfo": {
          "depends_on": [
            "ACCOUNTSAccountInfo"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSResponseAsyncAccount": {
          "depends_on": [
            "ACCOUNTSAccount"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSResponseAsyncAccountInfo": {
          "depends_on": [
            "ACCOUNTSAccountInfo"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSResponseRetrieveAccount": {
          "depends_on": [
            "ACCOUNTSAccount"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSResponseRetrieveAccountInfo": {
          "depends_on": [
            "ACCOUNTSAccountInfo"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSWorkspace": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ACCOUNTSWorkspaceRequest": {
          "depends_on": [
            "ACCOUNTSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEBucket": {
          "depends_on": [
            "STORAGEEdgeAccessEnum"
          ],
          "depended_by": [
            "STORAGEResponseRetrieveBucket"
          ],
          "coupling_score": 2
        },
        "STORAGEBucketCreate": {
          "depends_on": [
            "STORAGEEdgeAccessEnum"
          ],
          "depended_by": [
            "STORAGEResponseAsyncBucketCreate",
            "STORAGEResponseBucketCreate"
          ],
          "coupling_score": 3
        },
        "STORAGEBucketCreateRequest": {
          "depends_on": [
            "STORAGEEdgeAccessEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEPatchedBucketRequest": {
          "depends_on": [
            "STORAGEEdgeAccessEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEResponseAsyncBucketCreate": {
          "depends_on": [
            "STORAGEBucketCreate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEResponseAsyncCredential": {
          "depends_on": [
            "STORAGECredential"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEResponseBucketCreate": {
          "depends_on": [
            "STORAGEBucketCreate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEResponseCredential": {
          "depends_on": [
            "STORAGECredential"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEResponseRetrieveBucket": {
          "depends_on": [
            "STORAGEBucket"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGEResponseRetrieveCredential": {
          "depends_on": [
            "STORAGECredential"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGESuccessObjectOperation": {
          "depends_on": [
            "STORAGEObjectResponseData"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "STORAGESuccessObjectOperationAsync": {
          "depends_on": [
            "STORAGEObjectResponseAsyncData"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAInputDataSource": {
          "depends_on": [
            "DATADataSourceEnum"
          ],
          "depended_by": [
            "DATAInputDataSourceAttributes"
          ],
          "coupling_score": 2
        },
        "DATAInputDataSourceAttributes": {
          "depends_on": [
            "DATAInputDataSourceAttributesTypeEnum",
            "DATAInputDataSource"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATAInputDataSourceAttributesRequest": {
          "depends_on": [
            "DATAInputDataSourceAttributesTypeEnum",
            "DATAInputDataSourceRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATAInputDataSourceRequest": {
          "depends_on": [
            "DATADataSourceEnum"
          ],
          "depended_by": [
            "DATAInputDataSourceAttributesRequest"
          ],
          "coupling_score": 2
        },
        "DATAOutput": {
          "depends_on": [
            "DATAOutputTypeEnum",
            "DATAOutputPolymorphic"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATAOutputRequest": {
          "depends_on": [
            "DATAOutputTypeEnum",
            "DATAOutputPolymorphicRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATAResponseAsyncDataStream": {
          "depends_on": [
            "DATADataStream"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAResponseAsyncTemplate": {
          "depends_on": [
            "DATATemplate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAResponseDataStream": {
          "depends_on": [
            "DATADataStream"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAResponseRetrieveDataStream": {
          "depends_on": [
            "DATADataStream"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAResponseRetrieveTemplate": {
          "depends_on": [
            "DATATemplate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAResponseTemplate": {
          "depends_on": [
            "DATATemplate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAS3Endpoint": {
          "depends_on": [
            "DATAContentTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATAS3EndpointRequest": {
          "depends_on": [
            "DATAContentTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DATATransformFilterWorkloadsAttributes": {
          "depends_on": [
            "DATATransformFilterWorkloadsAttributesTypeEnum",
            "DATATransformFilterWorkloads"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATATransformFilterWorkloadsAttributesRequest": {
          "depends_on": [
            "DATATransformFilterWorkloadsAttributesTypeEnum",
            "DATATransformFilterWorkloadsRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATATransformRenderTemplateAttributes": {
          "depends_on": [
            "DATATransformRenderTemplateAttributesTypeEnum",
            "DATATransformRenderTemplate"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATATransformRenderTemplateAttributesRequest": {
          "depends_on": [
            "DATATransformRenderTemplateAttributesTypeEnum",
            "DATATransformRenderTemplateRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATATransformSamplingAttributes": {
          "depends_on": [
            "DATATransformSamplingAttributesTypeEnum",
            "DATATransformSampling"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DATATransformSamplingAttributesRequest": {
          "depends_on": [
            "DATATransformSamplingAttributesTypeEnum",
            "DATATransformSamplingRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ORCHESTRATORNodes": {
          "depends_on": [
            "ORCHESTRATORStatusEnum"
          ],
          "depended_by": [
            "ORCHESTRATORResponseNodes",
            "ORCHESTRATORResponseRetrieveNodes"
          ],
          "coupling_score": 3
        },
        "ORCHESTRATORNodesRequest": {
          "depends_on": [
            "ORCHESTRATORStatusEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORPatchedNodesRequest": {
          "depends_on": [
            "ORCHESTRATORStatusEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseDeleteNodeServiceBind": {
          "depends_on": [
            "ORCHESTRATORStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseDeleteNodes": {
          "depends_on": [
            "ORCHESTRATORStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseDeleteServices": {
          "depends_on": [
            "ORCHESTRATORStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseListNodes": {
          "depends_on": [
            "ORCHESTRATORStatusEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseNodeGroupsById": {
          "depends_on": [
            "ORCHESTRATORStateEnum",
            "ORCHESTRATORNodeGroupsById"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ORCHESTRATORResponseNodeServices": {
          "depends_on": [
            "ORCHESTRATORStateEnum",
            "ORCHESTRATORNodeServices"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ORCHESTRATORResponseNodes": {
          "depends_on": [
            "ORCHESTRATORStateEnum",
            "ORCHESTRATORNodes"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "ORCHESTRATORResponseRetrieveNodeServiceBind": {
          "depends_on": [
            "ORCHESTRATORNodeServiceBind"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseRetrieveNodes": {
          "depends_on": [
            "ORCHESTRATORNodes"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseRetrieveServices": {
          "depends_on": [
            "ORCHESTRATORServices"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "ORCHESTRATORResponseServices": {
          "depends_on": [
            "ORCHESTRATORStateEnum",
            "ORCHESTRATORServices"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "VCSIntegration": {
          "depends_on": [
            "VCSPlatform"
          ],
          "depended_by": [
            "VCSResponseRetrieveIntegration"
          ],
          "coupling_score": 2
        },
        "VCSResponseAsyncContinuousDeployment": {
          "depends_on": [
            "VCSContinuousDeployment"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseAsyncExecution": {
          "depends_on": [
            "VCSExecution"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseAsyncExecutor": {
          "depends_on": [
            "VCSExecutor"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseContinuousDeployment": {
          "depends_on": [
            "VCSContinuousDeployment"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseExecution": {
          "depends_on": [
            "VCSExecution"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseExecutor": {
          "depends_on": [
            "VCSExecutor"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseListIntegration": {
          "depends_on": [
            "VCSPlatform"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseRetrieveContinuousDeployment": {
          "depends_on": [
            "VCSContinuousDeployment"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseRetrieveExecutionScript": {
          "depends_on": [
            "VCSExecutionScript"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseRetrieveExecutor": {
          "depends_on": [
            "VCSExecutor"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "VCSResponseRetrieveIntegration": {
          "depends_on": [
            "VCSIntegration"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSDelegationSigner": {
          "depends_on": [
            "DNSAlgType",
            "DNSAlgType"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DNSDelegationSignerRequest": {
          "depends_on": [
            "DNSAlgTypeRequest",
            "DNSAlgTypeRequest"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "DNSPatchedRecordRequest": {
          "depends_on": [
            "DNSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSRecord": {
          "depends_on": [
            "DNSTypeEnum"
          ],
          "depended_by": [
            "DNSResponseAsyncRecord",
            "DNSResponseRecord",
            "DNSResponseRetrieveRecord"
          ],
          "coupling_score": 4
        },
        "DNSRecordRequest": {
          "depends_on": [
            "DNSTypeEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseAsyncDNSSEC": {
          "depends_on": [
            "DNSDNSSEC"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseAsyncRecord": {
          "depends_on": [
            "DNSRecord"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseAsyncZone": {
          "depends_on": [
            "DNSZone"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseDNSSEC": {
          "depends_on": [
            "DNSDNSSEC"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseRecord": {
          "depends_on": [
            "DNSRecord"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseRetrieveDNSSEC": {
          "depends_on": [
            "DNSDNSSEC"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseRetrieveRecord": {
          "depends_on": [
            "DNSRecord"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseRetrieveZone": {
          "depends_on": [
            "DNSZone"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "DNSResponseZone": {
          "depends_on": [
            "DNSZone"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "TLSCertificateRequestRequest": {
          "depends_on": [
            "TLSChallengeEnum",
            "TLSAuthorityEnum"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "TLSResponseAsyncCertificate": {
          "depends_on": [
            "TLSCertificate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "TLSResponseAsyncCertificateRevocationList": {
          "depends_on": [
            "TLSCertificateRevocationList"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "TLSResponseCertificate": {
          "depends_on": [
            "TLSCertificate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "TLSResponseCertificateRevocationList": {
          "depends_on": [
            "TLSCertificateRevocationList"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "TLSResponseRetrieveCertificate": {
          "depends_on": [
            "TLSCertificate"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "TLSResponseRetrieveCertificateRevocationList": {
          "depends_on": [
            "TLSCertificateRevocationList"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "MARKETPLACEResponsePublisher": {
          "depends_on": [
            "MARKETPLACEStateEnum",
            "MARKETPLACEPublisher"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "MARKETPLACEResponseRetrievePublisher": {
          "depends_on": [
            "MARKETPLACEPublisher"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseDeleteFavorite": {
          "depends_on": [
            "IDENTITYStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseDeleteGrant": {
          "depends_on": [
            "IDENTITYStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseDeleteGroup": {
          "depends_on": [
            "IDENTITYStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseDeleteServiceToken": {
          "depends_on": [
            "IDENTITYStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseDeleteUser": {
          "depends_on": [
            "IDENTITYStateEnum"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseFavorite": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYFavorite"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseGrant": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYGrant"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseGroup": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYGroup"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseGroupMembers": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYGroupMembers"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseRetrieveGrant": {
          "depends_on": [
            "IDENTITYGrant"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseRetrieveGroup": {
          "depends_on": [
            "IDENTITYGroup"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseRetrieveGroupMembers": {
          "depends_on": [
            "IDENTITYGroupMembers"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseRetrieveServiceToken": {
          "depends_on": [
            "IDENTITYServiceToken"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseRetrieveUser": {
          "depends_on": [
            "IDENTITYUser"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseRetrieveUserInfo": {
          "depends_on": [
            "IDENTITYUserInfo"
          ],
          "depended_by": [],
          "coupling_score": 1
        },
        "IDENTITYResponseServiceToken": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYServiceToken"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseServiceTokenCreate": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYServiceTokenCreate"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseServiceTokenRenew": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYServiceTokenRenew"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseUser": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYUser"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "IDENTITYResponseUserInfo": {
          "depends_on": [
            "IDENTITYStateEnum",
            "IDENTITYUserInfo"
          ],
          "depended_by": [],
          "coupling_score": 2
        },
        "AUTHEffectEnum": {
          "depends_on": [],
          "depended_by": [
            "AUTHPolicyRule",
            "AUTHPolicyRuleRequest"
          ],
          "coupling_score": 2
        },
        "AUTHPolicyRuleCondition": {
          "depends_on": [],
          "depended_by": [
            "AUTHPolicyRule"
          ],
          "coupling_score": 1
        },
        "AUTHPolicyRuleConditionRequest": {
          "depends_on": [],
          "depended_by": [
            "AUTHPolicyRuleRequest"
          ],
          "coupling_score": 1
        },
        "AUTHLockoutPolicy": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncLockoutPolicy",
            "AUTHResponseLockoutPolicy",
            "AUTHResponseRetrieveLockoutPolicy"
          ],
          "coupling_score": 3
        },
        "AUTHLoginResponse": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncLogin",
            "AUTHResponseLogin"
          ],
          "coupling_score": 2
        },
        "AUTHPolicy": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncPolicy",
            "AUTHResponsePolicy",
            "AUTHResponseRetrievePolicy"
          ],
          "coupling_score": 3
        },
        "AUTHSessionTimeoutPolicy": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncSessionTimeoutPolicy",
            "AUTHResponseRetrieveSessionTimeoutPolicy",
            "AUTHResponseSessionTimeoutPolicy"
          ],
          "coupling_score": 3
        },
        "AUTHTOTPDeviceCreate": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncTOTPDeviceCreate",
            "AUTHResponseTOTPDeviceCreate"
          ],
          "coupling_score": 2
        },
        "AUTHToken": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncToken",
            "AUTHResponseToken"
          ],
          "coupling_score": 2
        },
        "AUTHTokenPair": {
          "depends_on": [],
          "depended_by": [
            "AUTHResponseAsyncTokenPair",
            "AUTHResponseTokenPair"
          ],
          "coupling_score": 2
        },
        "EDGEAWS4HMACTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEAWS4HMAC",
            "EDGEAWS4HMACRequest"
          ],
          "coupling_score": 2
        },
        "EDGEAWS4HMACAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEAWS4HMAC"
          ],
          "coupling_score": 1
        },
        "EDGEAWS4HMACAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEAWS4HMACRequest"
          ],
          "coupling_score": 1
        },
        "EDGEAddressLoadBalancerModule": {
          "depends_on": [],
          "depended_by": [
            "EDGEAddressModules"
          ],
          "coupling_score": 1
        },
        "EDGEAddressLoadBalancerModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEAddressModulesRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationModules": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplication"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationModulesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRequest",
            "EDGEPatchedApplicationRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddHeaderTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddHeader",
            "EDGEApplicationRuleEngineAddHeaderRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddHeaderAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddHeader"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineAddHeaderAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddHeaderRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineAddRequestCookieTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddRequestCookie",
            "EDGEApplicationRuleEngineAddRequestCookieRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddRequestCookieAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddRequestCookie"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineAddRequestCookieAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddRequestCookieRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineAddResponseHeaderTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddResponseHeader",
            "EDGEApplicationRuleEngineAddResponseHeaderRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineAddResponseHeaderAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddResponseHeader"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineAddResponseHeaderAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineAddResponseHeaderRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineCaptureMatchGroupsTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineCaptureMatchGroups",
            "EDGEApplicationRuleEngineCaptureMatchGroupsRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineCaptureMatchGroupsAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineCaptureMatchGroups"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineCaptureMatchGroupsAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineCaptureMatchGroupsRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineFilterHeaderTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterHeader",
            "EDGEApplicationRuleEngineFilterHeaderRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterHeaderAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterHeader"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineFilterHeaderAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterHeaderRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineFilterRequestCookieTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterRequestCookie",
            "EDGEApplicationRuleEngineFilterRequestCookieRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterRequestCookieAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterRequestCookie"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineFilterRequestCookieAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterRequestCookieRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineFilterResponseHeaderTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterResponseHeader",
            "EDGEApplicationRuleEngineFilterResponseHeaderRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineFilterResponseHeaderAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterResponseHeader"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineFilterResponseHeaderAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineFilterResponseHeaderRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineNoArgsTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineNoArgs",
            "EDGEApplicationRuleEngineNoArgsRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineResponseNoArgsTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineResponseNoArgs",
            "EDGEApplicationRuleEngineResponseNoArgsRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineResponseStringTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineResponseString",
            "EDGEApplicationRuleEngineResponseStringRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineResponseStringAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineResponseString"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineResponseStringAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineResponseStringRequest"
          ],
          "coupling_score": 1
        },
        "EDGETypeF11Enum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRewriteRequest",
            "EDGEApplicationRuleEngineRewriteRequestRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineRewriteRequestAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRewriteRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineRewriteRequestAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRewriteRequestRequest"
          ],
          "coupling_score": 1
        },
        "EDGEType689Enum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRunFunction",
            "EDGEApplicationRuleEngineRunFunctionRequest",
            "EDGEApplicationRuleEngineRunFunctionResponse",
            "EDGEApplicationRuleEngineRunFunctionResponseRequest",
            "EDGEFirewallBehaviorRunFunction",
            "EDGEFirewallBehaviorRunFunctionRequest"
          ],
          "coupling_score": 6
        },
        "EDGEApplicationRuleEngineRunFunctionAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRunFunction"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineRunFunctionAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRunFunctionRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineRunFunctionResponseAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRunFunctionResponse"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineRunFunctionResponseAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineRunFunctionResponseRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetCachePolicyTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetCachePolicy",
            "EDGEApplicationRuleEngineSetCachePolicyRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetCachePolicyAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetCachePolicy"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetCachePolicyAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetCachePolicyRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetConnectorTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetConnector",
            "EDGEApplicationRuleEngineSetConnectorRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetConnectorAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetConnector"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetConnectorAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetConnectorRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetCookieTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetCookie",
            "EDGEApplicationRuleEngineSetCookieRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetCookieAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetCookie"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetCookieAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetCookieRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetOriginTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetOrigin",
            "EDGEApplicationRuleEngineSetOriginRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineSetOriginAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetOrigin"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineSetOriginAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineSetOriginRequest"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineStringTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineString",
            "EDGEApplicationRuleEngineStringRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationRuleEngineStringAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineString"
          ],
          "coupling_score": 1
        },
        "EDGEApplicationRuleEngineStringAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEApplicationRuleEngineStringRequest"
          ],
          "coupling_score": 1
        },
        "EDGEBrowserCacheModule": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSetting",
            "EDGEResponseListCacheSetting"
          ],
          "coupling_score": 2
        },
        "EDGEBrowserCacheModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingRequest",
            "EDGEPatchedCacheSettingRequest"
          ],
          "coupling_score": 2
        },
        "EDGECacheVaryByQuerystringModule": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsApplicationAcceleratorModule"
          ],
          "coupling_score": 1
        },
        "EDGECacheVaryByCookiesModule": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsApplicationAcceleratorModule"
          ],
          "coupling_score": 1
        },
        "EDGECacheVaryByDevicesModule": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsApplicationAcceleratorModule"
          ],
          "coupling_score": 1
        },
        "EDGECacheVaryByQuerystringModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsApplicationAcceleratorModuleRequest"
          ],
          "coupling_score": 1
        },
        "EDGECacheVaryByCookiesModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsApplicationAcceleratorModuleRequest"
          ],
          "coupling_score": 1
        },
        "EDGECacheVaryByDevicesModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsApplicationAcceleratorModuleRequest"
          ],
          "coupling_score": 1
        },
        "EDGEStateCacheModule": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsEdgeCacheModule"
          ],
          "coupling_score": 1
        },
        "EDGELargeFileCacheModule": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsEdgeCacheModule"
          ],
          "coupling_score": 1
        },
        "EDGEStateCacheModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsEdgeCacheModuleRequest"
          ],
          "coupling_score": 1
        },
        "EDGELargeFileCacheModuleRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsEdgeCacheModuleRequest"
          ],
          "coupling_score": 1
        },
        "EDGETopologyEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGECacheSettingsTieredCacheModule",
            "EDGECacheSettingsTieredCacheModuleRequest"
          ],
          "coupling_score": 2
        },
        "EDGEConnectorHTTPAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEConnectorHTTP"
          ],
          "coupling_score": 1
        },
        "EDGEConnectorHTTPAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEConnectorHTTPRequest",
            "EDGEPatchedConnectorHTTPRequest"
          ],
          "coupling_score": 2
        },
        "EDGERegionEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEConnectorLiveIngestAttributes",
            "EDGEConnectorLiveIngestAttributesRequest"
          ],
          "coupling_score": 2
        },
        "EDGEConnectorStorageAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEConnectorStorage"
          ],
          "coupling_score": 1
        },
        "EDGEConnectorStorageAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEConnectorStorageRequest",
            "EDGEPatchedConnectorStorageRequest"
          ],
          "coupling_score": 2
        },
        "EDGEDefaultDeploymentStrategyAttrs": {
          "depends_on": [],
          "depended_by": [
            "EDGEDefaultDeploymentStrategy"
          ],
          "coupling_score": 1
        },
        "EDGEDefaultDeploymentStrategyAttrsRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEDefaultDeploymentStrategyRequest"
          ],
          "coupling_score": 1
        },
        "EDGEConditionalEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEEdgeApplicationCriterionField",
            "EDGEEdgeApplicationCriterionFieldRequest",
            "EDGEEdgeFirewallCriterionField",
            "EDGEEdgeFirewallCriterionFieldRequest"
          ],
          "coupling_score": 4
        },
        "EDGEEdgeApplicationCriterionFieldVariableEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEEdgeApplicationCriterionField",
            "EDGEEdgeApplicationCriterionFieldRequest"
          ],
          "coupling_score": 2
        },
        "EDGEOperator565Enum": {
          "depends_on": [],
          "depended_by": [
            "EDGEEdgeApplicationCriterionField",
            "EDGEEdgeApplicationCriterionFieldRequest",
            "EDGEEdgeFirewallCriterionField",
            "EDGEEdgeFirewallCriterionFieldRequest"
          ],
          "coupling_score": 4
        },
        "EDGEEdgeFirewallCriterionFieldVariableEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEEdgeFirewallCriterionField",
            "EDGEEdgeFirewallCriterionFieldRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallModules": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewall"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorNoArgumentsTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorNoArguments",
            "EDGEFirewallBehaviorNoArgumentsRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorRunFunctionAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorRunFunction"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorRunFunctionAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorRunFunctionRequest"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorSetCustomResponseTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetCustomResponse",
            "EDGEFirewallBehaviorSetCustomResponseRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetCustomResponseAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetCustomResponse"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorSetCustomResponseAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetCustomResponseRequest"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorSetRateLimitTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetRateLimit",
            "EDGEFirewallBehaviorSetRateLimitRequest"
          ],
          "coupling_score": 2
        },
        "EDGELimitByEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetRateLimitAttributes",
            "EDGEFirewallBehaviorSetRateLimitAttributesRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorSetWafTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetWaf",
            "EDGEFirewallBehaviorSetWafRequest"
          ],
          "coupling_score": 2
        },
        "EDGEModeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorSetWafAttributes",
            "EDGEFirewallBehaviorSetWafAttributesRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorTagEventTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorTagEvent",
            "EDGEFirewallBehaviorTagEventRequest"
          ],
          "coupling_score": 2
        },
        "EDGEFirewallBehaviorTagEventAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorTagEvent"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallBehaviorTagEventAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallBehaviorTagEventRequest"
          ],
          "coupling_score": 1
        },
        "EDGEFirewallModulesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEFirewallRequest",
            "EDGEPatchedFirewallRequest"
          ],
          "coupling_score": 2
        },
        "EDGEType528Enum": {
          "depends_on": [],
          "depended_by": [
            "EDGENetworkList",
            "EDGENetworkListDetail",
            "EDGENetworkListDetailRequest",
            "EDGEPatchedNetworkListDetailRequest"
          ],
          "coupling_score": 4
        },
        "EDGEOriginIPACL": {
          "depends_on": [],
          "depended_by": [
            "EDGEOriginShieldConfig"
          ],
          "coupling_score": 1
        },
        "EDGEHMAC": {
          "depends_on": [],
          "depended_by": [
            "EDGEOriginShieldConfig"
          ],
          "coupling_score": 1
        },
        "EDGEOriginIPACLRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEOriginShieldConfigRequest"
          ],
          "coupling_score": 1
        },
        "EDGEHMACRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEOriginShieldConfigRequest"
          ],
          "coupling_score": 1
        },
        "EDGECodeEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEPage",
            "EDGEPageRequest"
          ],
          "coupling_score": 2
        },
        "EDGEPagePolymorphic": {
          "depends_on": [],
          "depended_by": [
            "EDGEPage"
          ],
          "coupling_score": 1
        },
        "EDGEPageConnectorAttributes": {
          "depends_on": [],
          "depended_by": [
            "EDGEPageConnector"
          ],
          "coupling_score": 1
        },
        "EDGEPageConnectorAttributesRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEPageConnectorRequest"
          ],
          "coupling_score": 1
        },
        "EDGEPagePolymorphicRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEPageRequest"
          ],
          "coupling_score": 1
        },
        "EDGEDeploymentStrategyRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEPatchedWorkloadDeploymentRequest",
            "EDGEWorkloadDeploymentRequest"
          ],
          "coupling_score": 2
        },
        "EDGEMTLSRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEPatchedWorkloadRequest",
            "EDGEWorkloadRequest"
          ],
          "coupling_score": 2
        },
        "EDGEApplicationDeviceGroups": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseApplicationDeviceGroups",
            "EDGEResponseAsyncApplicationDeviceGroups",
            "EDGEResponseRetrieveApplicationDeviceGroups"
          ],
          "coupling_score": 3
        },
        "EDGEApplicationFunctionInstance": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseApplicationFunctionInstance",
            "EDGEResponseAsyncApplicationFunctionInstance",
            "EDGEResponseRetrieveApplicationFunctionInstance"
          ],
          "coupling_score": 3
        },
        "EDGEApplicationRequestPhaseRuleEngine": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseApplicationRequestPhaseRuleEngine",
            "EDGEResponseAsyncApplicationRequestPhaseRuleEngine",
            "EDGEResponseRetrieveApplicationRequestPhaseRuleEngine"
          ],
          "coupling_score": 3
        },
        "EDGEApplicationResponsePhaseRuleEngine": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseApplicationResponsePhaseRuleEngine",
            "EDGEResponseAsyncApplicationResponsePhaseRuleEngine"
          ],
          "coupling_score": 2
        },
        "EDGEConnectorPolymorphic": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncConnectorPolymorphic",
            "EDGEResponseConnectorPolymorphic",
            "EDGEResponseRetrieveConnectorPolymorphic"
          ],
          "coupling_score": 3
        },
        "EDGECustomPage": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncCustomPage",
            "EDGEResponseCustomPage",
            "EDGEResponseRetrieveCustomPage"
          ],
          "coupling_score": 3
        },
        "EDGEFirewallFunctionInstance": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncFirewallFunctionInstance",
            "EDGEResponseFirewallFunctionInstance",
            "EDGEResponseRetrieveFirewallFunctionInstance"
          ],
          "coupling_score": 3
        },
        "EDGEFirewallRuleEngine": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncFirewallRuleEngine",
            "EDGEResponseFirewallRuleEngine",
            "EDGEResponseRetrieveFirewallRuleEngine"
          ],
          "coupling_score": 3
        },
        "EDGEEdgeFunctions": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncFunctionsDoc",
            "EDGEResponseFunctionsDoc",
            "EDGEResponseRetrieveFunctionsDoc"
          ],
          "coupling_score": 3
        },
        "EDGEPurgeInput": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncPurgeInput",
            "EDGEResponsePurgeInput"
          ],
          "coupling_score": 2
        },
        "EDGEWAFRule": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseAsyncWAFRule",
            "EDGEResponseRetrieveWAFRule",
            "EDGEResponseWAFRule"
          ],
          "coupling_score": 3
        },
        "EDGEResponseBadRequestSerializerMetaclassBrowser_cacheField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestCacheSetting"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_querystringField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_cookiesField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSettingsApplicationAcceleratorModuleCache_vary_by_devicesField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestCacheSettingsModulesApplication_acceleratorField"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleStale_cacheField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSettingsEdgeCacheModuleLarge_file_cacheField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestCacheSettingsModulesEdge_cacheField"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestCacheSettingsModulesTiered_cacheField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestSerializerMetaclassModulesField"
          ],
          "coupling_score": 1
        },
        "EDGEResponseBadRequestSerializerMetaclassStrategyField": {
          "depends_on": [],
          "depended_by": [
            "EDGEResponseBadRequestWorkloadDeployment"
          ],
          "coupling_score": 1
        },
        "EDGEThreatEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEThresholdsConfigField",
            "EDGEThresholdsConfigFieldRequest"
          ],
          "coupling_score": 2
        },
        "EDGEWAFEngineSettingsAttributesField": {
          "depends_on": [],
          "depended_by": [
            "EDGEWAFEngineSettingsField"
          ],
          "coupling_score": 1
        },
        "EDGEWAFEngineSettingsAttributesFieldRequest": {
          "depends_on": [],
          "depended_by": [
            "EDGEWAFEngineSettingsFieldRequest"
          ],
          "coupling_score": 1
        },
        "EDGEWAFExceptionGenericConditionMatchEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEWAFExceptionGenericCondition",
            "EDGEWAFExceptionGenericConditionRequest"
          ],
          "coupling_score": 2
        },
        "EDGEWAFExceptionSpecificConditionOnNameMatchEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEWAFExceptionSpecificConditionOnName",
            "EDGEWAFExceptionSpecificConditionOnNameRequest"
          ],
          "coupling_score": 2
        },
        "EDGEWAFExceptionSpecificConditionOnValueMatchEnum": {
          "depends_on": [],
          "depended_by": [
            "EDGEWAFExceptionSpecificConditionOnValue",
            "EDGEWAFExceptionSpecificConditionOnValueRequest"
          ],
          "coupling_score": 2
        },
        "EDGEMTLS": {
          "depends_on": [],
          "depended_by": [
            "EDGEWorkload"
          ],
          "coupling_score": 1
        },
        "EDGEDeploymentStrategy": {
          "depends_on": [],
          "depended_by": [
            "EDGEWorkloadDeployment"
          ],
          "coupling_score": 1
        },
        "METRICSOrderDirectionEnum": {
          "depends_on": [],
          "depended_by": [
            "METRICSBaseQuery",
            "METRICSBaseQueryRequest"
          ],
          "coupling_score": 2
        },
        "METRICSScopeEnum": {
          "depends_on": [],
          "depended_by": [
            "METRICSDashboard",
            "METRICSDashboardRequest",
            "METRICSFolder",
            "METRICSFolderRequest",
            "METRICSLibraryReportRequest",
            "METRICSPatchedDashboardRequest",
            "METRICSPatchedFolderRequest",
            "METRICSResponseListDashboard",
            "METRICSResponseListFolder"
          ],
          "coupling_score": 9
        },
        "METRICSTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "METRICSLibraryReportRequest",
            "METRICSReport",
            "METRICSReportRequest",
            "METRICSResponseListReport"
          ],
          "coupling_score": 4
        },
        "METRICSAggregationTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "METRICSLibraryReportRequest",
            "METRICSReport",
            "METRICSReportRequest",
            "METRICSResponseListReport"
          ],
          "coupling_score": 4
        },
        "METRICSDataUnitEnum": {
          "depends_on": [],
          "depended_by": [
            "METRICSLibraryReportRequest",
            "METRICSReport",
            "METRICSReportRequest",
            "METRICSResponseListReport"
          ],
          "coupling_score": 4
        },
        "METRICSComparisonTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "METRICSLibraryReportRequest",
            "METRICSReport",
            "METRICSReportRequest",
            "METRICSResponseListReport"
          ],
          "coupling_score": 4
        },
        "METRICSOrder": {
          "depends_on": [],
          "depended_by": [
            "METRICSResponseAsyncOrder",
            "METRICSResponseOrder"
          ],
          "coupling_score": 2
        },
        "METRICSRow": {
          "depends_on": [],
          "depended_by": [
            "METRICSResponseAsyncRow",
            "METRICSResponseRetrieveRow",
            "METRICSResponseRow"
          ],
          "coupling_score": 3
        },
        "EDGESQLOpenAPISchema": {
          "depends_on": [],
          "depended_by": [
            "EDGESQLResponseAsyncOpenAPISchema",
            "EDGESQLResponseOpenAPISchema",
            "EDGESQLResponseRetrieveOpenAPISchema"
          ],
          "coupling_score": 3
        },
        "EDGESQLSQLResult": {
          "depends_on": [],
          "depended_by": [
            "EDGESQLResponseAsyncSQLResult",
            "EDGESQLResponseSQLResult"
          ],
          "coupling_score": 2
        },
        "PAYMENTSCredit": {
          "depends_on": [],
          "depended_by": [
            "PAYMENTSResponseAsyncCredit",
            "PAYMENTSResponseCredit"
          ],
          "coupling_score": 2
        },
        "PAYMENTSPaymentMethod": {
          "depends_on": [],
          "depended_by": [
            "PAYMENTSResponseAsyncPaymentMethod",
            "PAYMENTSResponsePaymentMethod"
          ],
          "coupling_score": 2
        },
        "ACCOUNTSTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "ACCOUNTSBrand",
            "ACCOUNTSBrandRequest",
            "ACCOUNTSCreateBrandRequest",
            "ACCOUNTSCreateOrganizationRequest",
            "ACCOUNTSCreateResellerRequest",
            "ACCOUNTSCreateWorkspaceRequest",
            "ACCOUNTSOrganization",
            "ACCOUNTSOrganizationRequest",
            "ACCOUNTSPatchedBrandRequest",
            "ACCOUNTSPatchedOrganizationRequest",
            "ACCOUNTSPatchedResellerRequest",
            "ACCOUNTSPatchedWorkspaceRequest",
            "ACCOUNTSReseller",
            "ACCOUNTSResellerRequest",
            "ACCOUNTSWorkspace",
            "ACCOUNTSWorkspaceRequest"
          ],
          "coupling_score": 16
        },
        "ACCOUNTSCurrencyIsoCodeEnum": {
          "depends_on": [],
          "depended_by": [
            "ACCOUNTSCreateResellerRequest",
            "ACCOUNTSPatchedResellerRequest",
            "ACCOUNTSReseller",
            "ACCOUNTSResellerRequest"
          ],
          "coupling_score": 4
        },
        "ACCOUNTSAccount": {
          "depends_on": [],
          "depended_by": [
            "ACCOUNTSResponseAccount",
            "ACCOUNTSResponseAsyncAccount",
            "ACCOUNTSResponseRetrieveAccount"
          ],
          "coupling_score": 3
        },
        "ACCOUNTSAccountInfo": {
          "depends_on": [],
          "depended_by": [
            "ACCOUNTSResponseAccountInfo",
            "ACCOUNTSResponseAsyncAccountInfo",
            "ACCOUNTSResponseRetrieveAccountInfo"
          ],
          "coupling_score": 3
        },
        "STORAGEEdgeAccessEnum": {
          "depends_on": [],
          "depended_by": [
            "STORAGEBucket",
            "STORAGEBucketCreate",
            "STORAGEBucketCreateRequest",
            "STORAGEPatchedBucketRequest"
          ],
          "coupling_score": 4
        },
        "STORAGECredential": {
          "depends_on": [],
          "depended_by": [
            "STORAGEResponseAsyncCredential",
            "STORAGEResponseCredential",
            "STORAGEResponseRetrieveCredential"
          ],
          "coupling_score": 3
        },
        "STORAGEObjectResponseData": {
          "depends_on": [],
          "depended_by": [
            "STORAGESuccessObjectOperation"
          ],
          "coupling_score": 1
        },
        "STORAGEObjectResponseAsyncData": {
          "depends_on": [],
          "depended_by": [
            "STORAGESuccessObjectOperationAsync"
          ],
          "coupling_score": 1
        },
        "DATADataSourceEnum": {
          "depends_on": [],
          "depended_by": [
            "DATAInputDataSource",
            "DATAInputDataSourceRequest"
          ],
          "coupling_score": 2
        },
        "DATAInputDataSourceAttributesTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DATAInputDataSourceAttributes",
            "DATAInputDataSourceAttributesRequest"
          ],
          "coupling_score": 2
        },
        "DATAOutputTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DATAOutput",
            "DATAOutputRequest"
          ],
          "coupling_score": 2
        },
        "DATAOutputPolymorphic": {
          "depends_on": [],
          "depended_by": [
            "DATAOutput"
          ],
          "coupling_score": 1
        },
        "DATAOutputPolymorphicRequest": {
          "depends_on": [],
          "depended_by": [
            "DATAOutputRequest"
          ],
          "coupling_score": 1
        },
        "DATADataStream": {
          "depends_on": [],
          "depended_by": [
            "DATAResponseAsyncDataStream",
            "DATAResponseDataStream",
            "DATAResponseRetrieveDataStream"
          ],
          "coupling_score": 3
        },
        "DATATemplate": {
          "depends_on": [],
          "depended_by": [
            "DATAResponseAsyncTemplate",
            "DATAResponseRetrieveTemplate",
            "DATAResponseTemplate"
          ],
          "coupling_score": 3
        },
        "DATAContentTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DATAS3Endpoint",
            "DATAS3EndpointRequest"
          ],
          "coupling_score": 2
        },
        "DATATransformFilterWorkloadsAttributesTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DATATransformFilterWorkloadsAttributes",
            "DATATransformFilterWorkloadsAttributesRequest"
          ],
          "coupling_score": 2
        },
        "DATATransformFilterWorkloads": {
          "depends_on": [],
          "depended_by": [
            "DATATransformFilterWorkloadsAttributes"
          ],
          "coupling_score": 1
        },
        "DATATransformFilterWorkloadsRequest": {
          "depends_on": [],
          "depended_by": [
            "DATATransformFilterWorkloadsAttributesRequest"
          ],
          "coupling_score": 1
        },
        "DATATransformRenderTemplateAttributesTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DATATransformRenderTemplateAttributes",
            "DATATransformRenderTemplateAttributesRequest"
          ],
          "coupling_score": 2
        },
        "DATATransformRenderTemplate": {
          "depends_on": [],
          "depended_by": [
            "DATATransformRenderTemplateAttributes"
          ],
          "coupling_score": 1
        },
        "DATATransformRenderTemplateRequest": {
          "depends_on": [],
          "depended_by": [
            "DATATransformRenderTemplateAttributesRequest"
          ],
          "coupling_score": 1
        },
        "DATATransformSamplingAttributesTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DATATransformSamplingAttributes",
            "DATATransformSamplingAttributesRequest"
          ],
          "coupling_score": 2
        },
        "DATATransformSampling": {
          "depends_on": [],
          "depended_by": [
            "DATATransformSamplingAttributes"
          ],
          "coupling_score": 1
        },
        "DATATransformSamplingRequest": {
          "depends_on": [],
          "depended_by": [
            "DATATransformSamplingAttributesRequest"
          ],
          "coupling_score": 1
        },
        "ORCHESTRATORStatusEnum": {
          "depends_on": [],
          "depended_by": [
            "ORCHESTRATORNodes",
            "ORCHESTRATORNodesRequest",
            "ORCHESTRATORPatchedNodesRequest",
            "ORCHESTRATORResponseListNodes"
          ],
          "coupling_score": 4
        },
        "ORCHESTRATORStateEnum": {
          "depends_on": [],
          "depended_by": [
            "ORCHESTRATORResponseDeleteNodeServiceBind",
            "ORCHESTRATORResponseDeleteNodes",
            "ORCHESTRATORResponseDeleteServices",
            "ORCHESTRATORResponseNodeGroupsById",
            "ORCHESTRATORResponseNodeServices",
            "ORCHESTRATORResponseNodes",
            "ORCHESTRATORResponseServices"
          ],
          "coupling_score": 7
        },
        "ORCHESTRATORNodeGroupsById": {
          "depends_on": [],
          "depended_by": [
            "ORCHESTRATORResponseNodeGroupsById"
          ],
          "coupling_score": 1
        },
        "ORCHESTRATORNodeServices": {
          "depends_on": [],
          "depended_by": [
            "ORCHESTRATORResponseNodeServices"
          ],
          "coupling_score": 1
        },
        "ORCHESTRATORNodeServiceBind": {
          "depends_on": [],
          "depended_by": [
            "ORCHESTRATORResponseRetrieveNodeServiceBind"
          ],
          "coupling_score": 1
        },
        "ORCHESTRATORServices": {
          "depends_on": [],
          "depended_by": [
            "ORCHESTRATORResponseRetrieveServices",
            "ORCHESTRATORResponseServices"
          ],
          "coupling_score": 2
        },
        "VCSPlatform": {
          "depends_on": [],
          "depended_by": [
            "VCSIntegration",
            "VCSResponseListIntegration"
          ],
          "coupling_score": 2
        },
        "VCSContinuousDeployment": {
          "depends_on": [],
          "depended_by": [
            "VCSResponseAsyncContinuousDeployment",
            "VCSResponseContinuousDeployment",
            "VCSResponseRetrieveContinuousDeployment"
          ],
          "coupling_score": 3
        },
        "VCSExecution": {
          "depends_on": [],
          "depended_by": [
            "VCSResponseAsyncExecution",
            "VCSResponseExecution"
          ],
          "coupling_score": 2
        },
        "VCSExecutor": {
          "depends_on": [],
          "depended_by": [
            "VCSResponseAsyncExecutor",
            "VCSResponseExecutor",
            "VCSResponseRetrieveExecutor"
          ],
          "coupling_score": 3
        },
        "VCSExecutionScript": {
          "depends_on": [],
          "depended_by": [
            "VCSResponseRetrieveExecutionScript"
          ],
          "coupling_score": 1
        },
        "DNSAlgType": {
          "depends_on": [],
          "depended_by": [
            "DNSDelegationSigner",
            "DNSDelegationSigner"
          ],
          "coupling_score": 2
        },
        "DNSAlgTypeRequest": {
          "depends_on": [],
          "depended_by": [
            "DNSDelegationSignerRequest",
            "DNSDelegationSignerRequest"
          ],
          "coupling_score": 2
        },
        "DNSTypeEnum": {
          "depends_on": [],
          "depended_by": [
            "DNSPatchedRecordRequest",
            "DNSRecord",
            "DNSRecordRequest"
          ],
          "coupling_score": 3
        },
        "DNSDNSSEC": {
          "depends_on": [],
          "depended_by": [
            "DNSResponseAsyncDNSSEC",
            "DNSResponseDNSSEC",
            "DNSResponseRetrieveDNSSEC"
          ],
          "coupling_score": 3
        },
        "DNSZone": {
          "depends_on": [],
          "depended_by": [
            "DNSResponseAsyncZone",
            "DNSResponseRetrieveZone",
            "DNSResponseZone"
          ],
          "coupling_score": 3
        },
        "TLSChallengeEnum": {
          "depends_on": [],
          "depended_by": [
            "TLSCertificateRequestRequest"
          ],
          "coupling_score": 1
        },
        "TLSAuthorityEnum": {
          "depends_on": [],
          "depended_by": [
            "TLSCertificateRequestRequest"
          ],
          "coupling_score": 1
        },
        "TLSCertificate": {
          "depends_on": [],
          "depended_by": [
            "TLSResponseAsyncCertificate",
            "TLSResponseCertificate",
            "TLSResponseRetrieveCertificate"
          ],
          "coupling_score": 3
        },
        "TLSCertificateRevocationList": {
          "depends_on": [],
          "depended_by": [
            "TLSResponseAsyncCertificateRevocationList",
            "TLSResponseCertificateRevocationList",
            "TLSResponseRetrieveCertificateRevocationList"
          ],
          "coupling_score": 3
        },
        "MARKETPLACEStateEnum": {
          "depends_on": [],
          "depended_by": [
            "MARKETPLACEResponsePublisher"
          ],
          "coupling_score": 1
        },
        "MARKETPLACEPublisher": {
          "depends_on": [],
          "depended_by": [
            "MARKETPLACEResponsePublisher",
            "MARKETPLACEResponseRetrievePublisher"
          ],
          "coupling_score": 2
        },
        "IDENTITYStateEnum": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseDeleteFavorite",
            "IDENTITYResponseDeleteGrant",
            "IDENTITYResponseDeleteGroup",
            "IDENTITYResponseDeleteServiceToken",
            "IDENTITYResponseDeleteUser",
            "IDENTITYResponseFavorite",
            "IDENTITYResponseGrant",
            "IDENTITYResponseGroup",
            "IDENTITYResponseGroupMembers",
            "IDENTITYResponseServiceToken",
            "IDENTITYResponseServiceTokenCreate",
            "IDENTITYResponseServiceTokenRenew",
            "IDENTITYResponseUser",
            "IDENTITYResponseUserInfo"
          ],
          "coupling_score": 14
        },
        "IDENTITYFavorite": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseFavorite"
          ],
          "coupling_score": 1
        },
        "IDENTITYGrant": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseGrant",
            "IDENTITYResponseRetrieveGrant"
          ],
          "coupling_score": 2
        },
        "IDENTITYGroup": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseGroup",
            "IDENTITYResponseRetrieveGroup"
          ],
          "coupling_score": 2
        },
        "IDENTITYGroupMembers": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseGroupMembers",
            "IDENTITYResponseRetrieveGroupMembers"
          ],
          "coupling_score": 2
        },
        "IDENTITYServiceToken": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseRetrieveServiceToken",
            "IDENTITYResponseServiceToken"
          ],
          "coupling_score": 2
        },
        "IDENTITYUser": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseRetrieveUser",
            "IDENTITYResponseUser"
          ],
          "coupling_score": 2
        },
        "IDENTITYUserInfo": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseRetrieveUserInfo",
            "IDENTITYResponseUserInfo"
          ],
          "coupling_score": 2
        },
        "IDENTITYServiceTokenCreate": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseServiceTokenCreate"
          ],
          "coupling_score": 1
        },
        "IDENTITYServiceTokenRenew": {
          "depends_on": [],
          "depended_by": [
            "IDENTITYResponseServiceTokenRenew"
          ],
          "coupling_score": 1
        }
      },
      "critical_paths": [
        {
          "type": "high_coupling",
          "schema": "ACCOUNTSTypeEnum",
          "score": 16,
          "description": "ACCOUNTSTypeEnum has high coupling (16 dependencies)"
        },
        {
          "type": "high_coupling",
          "schema": "IDENTITYStateEnum",
          "score": 14,
          "description": "IDENTITYStateEnum has high coupling (14 dependencies)"
        }
      ]
    }
  },
  "summary": {
    "field_dependencies": 1045,
    "conditional_logic_patterns": 1045,
    "business_rules": 1045,
    "module_toggles": 1045,
    "cross_schema_relations": 569,
    "critical_paths": 2
  }
}