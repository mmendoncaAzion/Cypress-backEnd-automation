{
  "timestamp": "2025-09-22T21:40:12.196Z",
  "postmanTotal": 238,
  "cypressTotal": 201,
  "covered": 19,
  "missingInCypress": 219,
  "extraInCypress": 182,
  "coveragePercentage": 8,
  "details": {
    "covered": [
      "GET /workspace/applications",
      "GET /workspace/custom_pages",
      "GET /workspace/dns/zones",
      "GET /workspace/firewalls",
      "GET /workspace/network_lists",
      "GET /workspace/storage/buckets",
      "GET /workspace/storage/credentials",
      "GET /workspace/wafs",
      "GET /workspace/workloads",
      "POST /workspace/applications",
      "POST /workspace/custom_pages",
      "POST /workspace/dns/zones",
      "POST /workspace/firewalls",
      "POST /workspace/functions",
      "POST /workspace/network_lists",
      "POST /workspace/storage/buckets",
      "POST /workspace/storage/credentials",
      "POST /workspace/wafs",
      "POST /workspace/workloads"
    ],
    "missingInCypress": [
      "DELETE /auth/mfa/totp/:id",
      "DELETE /auth/policies/:id",
      "DELETE /data_stream/data_sets/{{dataSetId}}",
      "DELETE /data_stream/streams/{{dataStreamingId}}",
      "DELETE /digital_certificates/certificates/{{certificateId}}",
      "DELETE /digital_certificates/crls/{{crlsId}}",
      "DELETE /edge_connector/connectors/{{connector_id}}",
      "DELETE /edge_firewall/wafs/{{wafId}}",
      "DELETE /edge_functions/functions/{{functionId}}",
      "DELETE /edge_orchestrator/edge_nodes/groups/{{groupId}}",
      "DELETE /edge_orchestrator/edge_services/{{serviceId}}",
      "DELETE /edge_sql/databases/{{databaseId}}",
      "DELETE /identity/users/{{userId}}",
      "DELETE /identity/users/{{userId}}/lockout",
      "DELETE /orchestrator/edge_nodes/:nodeId",
      "DELETE /orchestrator/edge_nodes/:nodeId/services/:bindId",
      "DELETE /orchestrator/edge_services/:serviceId/resources/:resourceId",
      "DELETE /payments/credit_cards/:id",
      "DELETE /worksapce/storage/buckets/{{bucketName}}",
      "DELETE /workspace/applications/{{edgeApplicationId}}",
      "DELETE /workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
      "DELETE /workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
      "DELETE /workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
      "DELETE /workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
      "DELETE /workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
      "DELETE /workspace/custom_pages/{{deleteId}}",
      "DELETE /workspace/dns/zones/{{zoneId}}",
      "DELETE /workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
      "DELETE /workspace/firewalls/{{edgeFirewallId}}",
      "DELETE /workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
      "DELETE /workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
      "DELETE /workspace/network_lists/{{networkId}}",
      "DELETE /workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
      "DELETE /workspace/storage/credentials/{{credentialId}}",
      "DELETE /workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
      "DELETE /workspace/workloads/{{workloadId}}",
      "GET /account/account",
      "GET /account/accounts",
      "GET /account/accounts/{{accountId}}",
      "GET /account/accounts/{{accountId}}/info",
      "GET /auth/login/method",
      "GET /auth/mfa/totp",
      "GET /auth/policies",
      "GET /auth/policies/:id?fields=<string>",
      "GET /auth/policies/lockout?fields=<string>",
      "GET /auth/policies/session?fields=<string>",
      "GET /data_stream/data_sources",
      "GET /data_stream/streams",
      "GET /data_stream/streams/{{dataStreamingId}}",
      "GET /data_stream/templates",
      "GET /data_stream/templates/{{templateId}}",
      "GET /digital_certificates/certificates",
      "GET /digital_certificates/certificates/{{certificateId}}",
      "GET /digital_certificates/crls",
      "GET /digital_certificates/crls/{{crlsId}}",
      "GET /edge_connector/connectors",
      "GET /edge_connector/connectors/{{connector_id}}",
      "GET /edge_firewall/wafs/{{wafId}}/exceptions",
      "GET /edge_functions/functions",
      "GET /edge_functions/functions/{{functionId}}",
      "GET /edge_orchestrator/edge_nodes",
      "GET /edge_orchestrator/edge_nodes/:nodeId/",
      "GET /edge_orchestrator/edge_nodes/groups",
      "GET /edge_orchestrator/edge_services",
      "GET /edge_orchestrator/edge_services/{{serviceId}}",
      "GET /edge_orchestrator/edge_services/{{serviceId}}/resources",
      "GET /edge_orchestrator/edge_services/{{serviceId}}/resources/{{resourceId}}/content",
      "GET /edge_sql/databases",
      "GET /edge_sql/databases/{{databaseId}}",
      "GET /identity/users",
      "GET /identity/users/{{userId}}",
      "GET /orchestrator/edge_nodes/:nodeId/groups?fields=<string>&ordering=<string>&page=<integer>&page_size=<integer>&search=<string>",
      "GET /orchestrator/edge_nodes/:nodeId/services/:bindId?fields=<string>",
      "GET /orchestrator/edge_nodes/:nodeId/services?fields=<string>&ordering=<string>&page=<integer>&page_size=<integer>&search=<string>",
      "GET /orchestrator/edge_services/:serviceId/resources/:resourceId?fields=<string>",
      "GET /payments/credit_cards",
      "GET /payments/credit_cards/{{creditCardId}}",
      "GET /payments/history",
      "GET /workspace/applications/{{edgeApplicationId}}",
      "GET /workspace/applications/{{edgeApplicationId}}/cache_settings",
      "GET /workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
      "GET /workspace/applications/{{edgeApplicationId}}/device_groups",
      "GET /workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
      "GET /workspace/applications/{{edgeApplicationId}}/functions",
      "GET /workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
      "GET /workspace/applications/{{edgeApplicationId}}/request_rules",
      "GET /workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
      "GET /workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
      "GET /workspace/applications/{{edgeApplicationId}}/rules",
      "GET /workspace/custom_pages/{{customPageId}}",
      "GET /workspace/dns/zones/{{zoneId}}",
      "GET /workspace/dns/zones/{{zoneId}}/dnssec",
      "GET /workspace/dns/zones/{{zoneId}}/records",
      "GET /workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
      "GET /workspace/firewalls/{{edgeFirewallId}}",
      "GET /workspace/firewalls/{{edgeFirewallId}}/functions",
      "GET /workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
      "GET /workspace/firewalls/{{edgeFirewallId}}/request_rules",
      "GET /workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
      "GET /workspace/network_lists/{{networkId}}",
      "GET /workspace/storage/buckets/{{bucketName}}/objects",
      "GET /workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
      "GET /workspace/storage/credentials/{{credentialId}}",
      "GET /workspace/wafs/{{wafId}}",
      "GET /workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
      "GET /workspace/workloads/{{workloadId}}",
      "GET /workspace/workloads/{{workloadId}}/deployments",
      "GET /workspace/workloads/{{workloadId}}/deployments/{{workloadDeploymentsId}}",
      "PATCH /account/account",
      "PATCH /account/accounts/:id",
      "PATCH /auth/policies/:id",
      "PATCH /data_stream/streams/{{dataStreamingId}}",
      "PATCH /data_stream/templates/{{dataSetId}}",
      "PATCH /digital_certificates/certificates/{{certificateId}}",
      "PATCH /digital_certificates/crls/{{crlsId}}",
      "PATCH /edge_connector/connectors/{{connector_id}}",
      "PATCH /edge_functions/functions/{{functionId}}",
      "PATCH /edge_orchestrator/edge_services/{{serviceId}}",
      "PATCH /identity/users/{{userId}}",
      "PATCH /orchestrator/edge_nodes/:nodeId/",
      "PATCH /payments/credit_cards/:id",
      "PATCH /workspace/applications/{{edgeApplicationId}}",
      "PATCH /workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
      "PATCH /workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
      "PATCH /workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
      "PATCH /workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
      "PATCH /workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
      "PATCH /workspace/custom_pages/{{customPageId}}",
      "PATCH /workspace/dns/zones/{{zoneId}}",
      "PATCH /workspace/dns/zones/{{zoneId}}/dnssec",
      "PATCH /workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
      "PATCH /workspace/firewalls/{{edgeFirewallId}}",
      "PATCH /workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
      "PATCH /workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
      "PATCH /workspace/network_lists/{{networkId}}",
      "PATCH /workspace/wafs/{{wafId}}",
      "PATCH /workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
      "PATCH /workspace/workloads/{{workloadId}}",
      "PATCH /workspace/workloads/{{workloadId}}/deployments/{{workloadDeploymentsId}}",
      "PATCH /wrokspace/storage/buckets/{{bucketName}}",
      "POST /account/accounts",
      "POST /auth/login",
      "POST /auth/mfa/totp",
      "POST /auth/policies",
      "POST /auth/revoke",
      "POST /auth/token",
      "POST /auth/verify",
      "POST /data_stream/streams",
      "POST /data_stream/templates",
      "POST /digital_certificates/certificates",
      "POST /digital_certificates/certificates/request",
      "POST /digital_certificates/crls",
      "POST /digital_certificates/csr",
      "POST /edge_connector/connectors",
      "POST /edge_firewall/wafs/{{wafId}}/clone",
      "POST /edge_orchestrator/edge_nodes/:nodeId/services",
      "POST /edge_orchestrator/edge_nodes/groups",
      "POST /edge_orchestrator/edge_services",
      "POST /edge_orchestrator/edge_services/{{serviceId}}/resources",
      "POST /edge_sql/databases",
      "POST /edge_sql/databases/{{databaseId}}/query",
      "POST /iam/accounts",
      "POST /iam/mfa/totp",
      "POST /iam/users",
      "POST /identity/users",
      "POST /orchestrator/edge_nodes/:nodeId/groups",
      "POST /payments/credit_cards",
      "POST /payments/credits",
      "POST /workspace/applications/{{edgeApplicationId}}/cache_settings",
      "POST /workspace/applications/{{edgeApplicationId}}/clone",
      "POST /workspace/applications/{{edgeApplicationId}}/device_groups",
      "POST /workspace/applications/{{edgeApplicationId}}/functions",
      "POST /workspace/applications/{{edgeApplicationId}}/request_rules",
      "POST /workspace/applications/{{edgeApplicationId}}/response_rules",
      "POST /workspace/dns/zones/{{zoneId}}/records",
      "POST /workspace/firewalls/{{edgeFirewallId}}/clone",
      "POST /workspace/firewalls/{{edgeFirewallId}}/functions",
      "POST /workspace/firewalls/{{edgeFirewallId}}/request_rules",
      "POST /workspace/purge/url",
      "POST /workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
      "POST /workspace/wafs/{{wafId}}/exceptions",
      "PUT /account/account",
      "PUT /account/accounts/:id",
      "PUT /account/accounts/{{accountId}}/info",
      "PUT /auth/policies/:id",
      "PUT /auth/policies/lockout",
      "PUT /auth/policies/session",
      "PUT /data_stream/streams/{{dataStreamingId}}",
      "PUT /data_stream/templates/{{dataSetId}}",
      "PUT /digital_certificates/certificates/{{certificateId}}",
      "PUT /digital_certificates/crls/{{crlsId}}",
      "PUT /edge_connector/connectors/{{connector_id}}",
      "PUT /edge_functions/functions/{{functionId}}",
      "PUT /edge_orchestrator/edge_services/{{serviceId}}",
      "PUT /identity/users/{{userId}}",
      "PUT /orchestrator/edge_nodes/:nodeId/",
      "PUT /orchestrator/edge_services/:serviceId/resources/:resourceId",
      "PUT /orchestrator/edge_services/:serviceId/resources/:resourceId/content",
      "PUT /workspace/applications/{{edgeApplicationId}}",
      "PUT /workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
      "PUT /workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
      "PUT /workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
      "PUT /workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
      "PUT /workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
      "PUT /workspace/applications/{{edgeApplicationId}}/rules/order",
      "PUT /workspace/custom_pages/{{customPageId}}",
      "PUT /workspace/dns/zones/{{zoneId}}",
      "PUT /workspace/dns/zones/{{zoneId}}/dnssec",
      "PUT /workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
      "PUT /workspace/firewalls/{{edgeFirewallId}}",
      "PUT /workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
      "PUT /workspace/firewalls/{{edgeFirewallId}}/rules/order",
      "PUT /workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
      "PUT /workspace/network_lists/{{networkId}}",
      "PUT /workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
      "PUT /workspace/wafs/{{wafId}}",
      "PUT /workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
      "PUT /workspace/workloads/{{workloadId}}",
      "PUT /workspace/workloads/{{workloadId}}/deployments/{{workloadDeploymentsId}}"
    ],
    "extraInCypress": [
      "DELETE /account/auth/mfa/totp/{totp_id}",
      "DELETE /workspace/applications/999999",
      "DELETE /workspace/applications/{application_id}",
      "DELETE /workspace/applications/{application_id}/cache_settings/{id}",
      "DELETE /workspace/applications/{application_id}/device_groups/{id}",
      "DELETE /workspace/applications/{application_id}/functions/{function_id}",
      "DELETE /workspace/applications/{application_id}/request_rules/{id}",
      "DELETE /workspace/applications/{application_id}/response_rules/{id}",
      "DELETE /workspace/applications/{id}",
      "DELETE /workspace/connectors/{connector_id}",
      "DELETE /workspace/custom_pages/{id}",
      "DELETE /workspace/dns/zones/{zone_id}",
      "DELETE /workspace/dns/zones/{zone_id}/records/{record_id}",
      "DELETE /workspace/firewalls/{edge_firewall_id}/functions/{id}",
      "DELETE /workspace/firewalls/{edge_firewall_id}/request_rules/{id}",
      "DELETE /workspace/firewalls/{id}",
      "DELETE /workspace/functions/{function_id}",
      "DELETE /workspace/network_lists/{id}",
      "DELETE /workspace/sql/databases/{id}",
      "DELETE /workspace/storage/buckets/{bucketName}/objects/{objectKey}",
      "DELETE /workspace/storage/buckets/{name}",
      "DELETE /workspace/storage/credentials/{id}",
      "DELETE /workspace/stream/streams/{stream_id}",
      "DELETE /workspace/stream/templates/{template_id}",
      "DELETE /workspace/tls/certificates/{certificate_id}",
      "DELETE /workspace/tls/crls/{crl_id}",
      "DELETE /workspace/wafs/{waf_id}",
      "DELETE /workspace/wafs/{waf_id}/exceptions/{exception_id}",
      "DELETE /workspace/workloads/{workload_id}",
      "DELETE /workspace/workloads/{workload_id}/deployments/{deployment_id}",
      "DELETE /workspace/workspace/domains/999999",
      "DELETE /workspace/workspace/domains/{id}",
      "GET /account/accounts/${Cypress.env(",
      "GET /account/accounts/999999/info",
      "GET /account/accounts/invalid/info",
      "GET /account/accounts/{accountId}/info",
      "GET /account/auth/login/method",
      "GET /account/auth/mfa/totp",
      "GET /workspace/applications/999999",
      "GET /workspace/applications/{application_id}",
      "GET /workspace/applications/{application_id}/cache_settings",
      "GET /workspace/applications/{application_id}/cache_settings/{id}",
      "GET /workspace/applications/{application_id}/device_groups",
      "GET /workspace/applications/{application_id}/device_groups/{id}",
      "GET /workspace/applications/{application_id}/functions",
      "GET /workspace/applications/{application_id}/functions/{function_id}",
      "GET /workspace/applications/{application_id}/request_rules",
      "GET /workspace/applications/{application_id}/request_rules/{id}",
      "GET /workspace/applications/{application_id}/response_rules",
      "GET /workspace/applications/{application_id}/response_rules/{id}",
      "GET /workspace/applications/{id}",
      "GET /workspace/connectors",
      "GET /workspace/connectors/{connector_id}",
      "GET /workspace/custom_pages/{id}",
      "GET /workspace/dns/zones/{zone_id}",
      "GET /workspace/dns/zones/{zone_id}/dnssec",
      "GET /workspace/dns/zones/{zone_id}/records",
      "GET /workspace/dns/zones/{zone_id}/records/{record_id}",
      "GET /workspace/firewalls/{edge_firewall_id}/functions",
      "GET /workspace/firewalls/{edge_firewall_id}/functions/{id}",
      "GET /workspace/firewalls/{edge_firewall_id}/request_rules",
      "GET /workspace/firewalls/{edge_firewall_id}/request_rules/{id}",
      "GET /workspace/firewalls/{id}",
      "GET /workspace/functions",
      "GET /workspace/functions/{function_id}",
      "GET /workspace/network_lists/{id}",
      "GET /workspace/sql/databases",
      "GET /workspace/sql/databases/{id}",
      "GET /workspace/storage/buckets/{bucketName}/objects",
      "GET /workspace/storage/buckets/{bucketName}/objects/{objectKey}",
      "GET /workspace/storage/buckets/{name}",
      "GET /workspace/storage/credentials/{id}",
      "GET /workspace/stream/data_sources",
      "GET /workspace/stream/streams",
      "GET /workspace/stream/streams/{stream_id}",
      "GET /workspace/stream/templates",
      "GET /workspace/stream/templates/{template_id}",
      "GET /workspace/tls/certificates",
      "GET /workspace/tls/certificates/{certificate_id}",
      "GET /workspace/tls/crls",
      "GET /workspace/tls/crls/{crl_id}",
      "GET /workspace/wafs/{waf_id}",
      "GET /workspace/wafs/{waf_id}/exceptions",
      "GET /workspace/wafs/{waf_id}/exceptions/{exception_id}",
      "GET /workspace/workloads/{workload_id}",
      "GET /workspace/workloads/{workload_id}/deployments",
      "GET /workspace/workloads/{workload_id}/deployments/{deployment_id}",
      "GET /workspace/workspace/domains",
      "GET /workspace/workspace/domains/999999",
      "GET /workspace/workspace/domains/{id}",
      "PATCH /workspace/applications/{application_id}",
      "PATCH /workspace/applications/{application_id}/cache_settings/{id}",
      "PATCH /workspace/applications/{application_id}/device_groups/{id}",
      "PATCH /workspace/applications/{application_id}/functions/{function_id}",
      "PATCH /workspace/applications/{application_id}/request_rules/{id}",
      "PATCH /workspace/applications/{application_id}/response_rules/{id}",
      "PATCH /workspace/connectors/{connector_id}",
      "PATCH /workspace/custom_pages/{id}",
      "PATCH /workspace/dns/zones/{zone_id}",
      "PATCH /workspace/dns/zones/{zone_id}/dnssec",
      "PATCH /workspace/dns/zones/{zone_id}/records/{record_id}",
      "PATCH /workspace/firewalls/{edge_firewall_id}/functions/{id}",
      "PATCH /workspace/firewalls/{edge_firewall_id}/request_rules/{id}",
      "PATCH /workspace/firewalls/{id}",
      "PATCH /workspace/functions/{function_id}",
      "PATCH /workspace/network_lists/{id}",
      "PATCH /workspace/storage/buckets/{name}",
      "PATCH /workspace/stream/streams/{stream_id}",
      "PATCH /workspace/stream/templates/{template_id}",
      "PATCH /workspace/tls/certificates/{certificate_id}",
      "PATCH /workspace/tls/crls/{crl_id}",
      "PATCH /workspace/wafs/{waf_id}",
      "PATCH /workspace/wafs/{waf_id}/exceptions/{exception_id}",
      "PATCH /workspace/workloads/{workload_id}",
      "PATCH /workspace/workloads/{workload_id}/deployments/{deployment_id}",
      "PATCH /workspace/workspace/domains",
      "POST /account/accounts/${Cypress.env(",
      "POST /account/accounts/{accountId}/info",
      "POST /account/auth/login",
      "POST /account/auth/mfa/totp",
      "POST /account/auth/revoke",
      "POST /account/auth/token",
      "POST /purge/cachekey",
      "POST /purge/url",
      "POST /purge/wildcard",
      "POST /workspace/applications/{application_id}/cache_settings",
      "POST /workspace/applications/{application_id}/clone",
      "POST /workspace/applications/{application_id}/device_groups",
      "POST /workspace/applications/{application_id}/functions",
      "POST /workspace/applications/{application_id}/request_rules",
      "POST /workspace/applications/{application_id}/response_rules",
      "POST /workspace/connectors",
      "POST /workspace/dns/zones/{zone_id}/records",
      "POST /workspace/domains",
      "POST /workspace/firewalls/{edge_firewall_id}/functions",
      "POST /workspace/firewalls/{edge_firewall_id}/request_rules",
      "POST /workspace/firewalls/{id}/clone",
      "POST /workspace/purge/{purge_type}",
      "POST /workspace/sql/databases",
      "POST /workspace/sql/databases/{id}/query",
      "POST /workspace/storage/buckets/{bucketName}/objects/{objectKey}",
      "POST /workspace/stream/streams",
      "POST /workspace/stream/templates",
      "POST /workspace/tls/certificates",
      "POST /workspace/tls/certificates/request",
      "POST /workspace/tls/crls",
      "POST /workspace/tls/csr",
      "POST /workspace/wafs/{waf_id}/clone",
      "POST /workspace/wafs/{waf_id}/exceptions",
      "POST /workspace/workloads/{workload_id}/deployments",
      "POST /workspace/workspace/domains",
      "PUT /account/accounts/{accountId}/info",
      "PUT /workspace/applications/{application_id}",
      "PUT /workspace/applications/{application_id}/cache_settings/{id}",
      "PUT /workspace/applications/{application_id}/device_groups/{id}",
      "PUT /workspace/applications/{application_id}/functions/{function_id}",
      "PUT /workspace/applications/{application_id}/request_rules/order",
      "PUT /workspace/applications/{application_id}/request_rules/{id}",
      "PUT /workspace/applications/{application_id}/response_rules/order",
      "PUT /workspace/applications/{application_id}/response_rules/{id}",
      "PUT /workspace/applications/{id}",
      "PUT /workspace/connectors/{connector_id}",
      "PUT /workspace/custom_pages/{id}",
      "PUT /workspace/dns/zones/{zone_id}",
      "PUT /workspace/dns/zones/{zone_id}/dnssec",
      "PUT /workspace/dns/zones/{zone_id}/records/{record_id}",
      "PUT /workspace/firewalls/{edge_firewall_id}/functions/{id}",
      "PUT /workspace/firewalls/{edge_firewall_id}/request_rules/order",
      "PUT /workspace/firewalls/{edge_firewall_id}/request_rules/{id}",
      "PUT /workspace/firewalls/{id}",
      "PUT /workspace/functions/{function_id}",
      "PUT /workspace/network_lists/{id}",
      "PUT /workspace/storage/buckets/{bucketName}/objects/{objectKey}",
      "PUT /workspace/stream/streams/{stream_id}",
      "PUT /workspace/stream/templates/{template_id}",
      "PUT /workspace/tls/certificates/{certificate_id}",
      "PUT /workspace/tls/crls/{crl_id}",
      "PUT /workspace/wafs/{waf_id}",
      "PUT /workspace/wafs/{waf_id}/exceptions/{exception_id}",
      "PUT /workspace/workloads/{workload_id}",
      "PUT /workspace/workloads/{workload_id}/deployments/{deployment_id}",
      "PUT /workspace/workspace/domains/{id}"
    ]
  },
  "gaps": {
    "auth": [
      {
        "method": "DELETE",
        "url": "/auth/mfa/totp/:id",
        "name": "Destroy a TOTP device",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/auth/policies/:id",
        "name": "Destroy a policy",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/auth/login/method",
        "name": "Retrieve user login method",
        "hasAuth": false,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "email",
            "value": "<email>",
            "description": "Email address of the user"
          },
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/auth/mfa/totp",
        "name": "List of TOTP devices",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/auth/policies",
        "name": "List of account policies",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, name, active)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/auth/policies/:id?fields=<string>",
        "name": "Retrieve details from a policy",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "id"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/auth/policies/lockout?fields=<string>",
        "name": "Get Lockout Policy",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/auth/policies/session?fields=<string>",
        "name": "Get Session Timeout Policy",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/auth/policies/:id",
        "name": "Partially update a policy",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/auth/login",
        "name": "Retrieve user JWT tokens",
        "hasAuth": false,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/auth/mfa/totp",
        "name": "Create a TOTP device",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/auth/policies",
        "name": "Create a new policy",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/auth/revoke",
        "name": "Revoke user JWT refresh token",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/auth/token",
        "name": "Refresh user JWT access token",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/auth/verify",
        "name": "Retrieve user JWT tokens by MFA auth",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/auth/policies/:id",
        "name": "Update a policy",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/auth/policies/lockout",
        "name": "Put Lockout Policy",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/auth/policies/session",
        "name": "Put Session Timeout Policy",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      }
    ],
    "data_stream": [
      {
        "method": "DELETE",
        "url": "/data_stream/data_sets/{{dataSetId}}",
        "name": "Destroy a template",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "dataSetId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/data_stream/streams/{{dataStreamingId}}",
        "name": "Destroy a Data Stream",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "dataStreamingId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/data_stream/data_sources",
        "name": "List of Data Sources",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "active",
            "value": "<boolean>",
            "description": ""
          },
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "name",
            "value": "<string>",
            "description": ""
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          },
          {
            "key": "slug",
            "value": "<string>",
            "description": ""
          }
        ]
      },
      {
        "method": "GET",
        "url": "/data_stream/streams",
        "name": "List Data Streams",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/data_stream/streams/{{dataStreamingId}}",
        "name": "Retrieve details of a Data Stream",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "dataStreamingId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/data_stream/templates",
        "name": "List Template",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/data_stream/templates/{{templateId}}",
        "name": "Retrieve details of a template",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "templateId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/data_stream/streams/{{dataStreamingId}}",
        "name": "Partially update a Data Stream",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "dataStreamingId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/data_stream/templates/{{dataSetId}}",
        "name": "Partially update a template",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "dataSetId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/data_stream/streams",
        "name": "Create a Data Stream",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/data_stream/templates",
        "name": "Create a Template",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/data_stream/streams/{{dataStreamingId}}",
        "name": "Update a Data Stream",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "dataStreamingId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/data_stream/templates/{{dataSetId}}",
        "name": "Update a template",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "dataSetId"
        ],
        "queryParams": []
      }
    ],
    "digital_certificates": [
      {
        "method": "DELETE",
        "url": "/digital_certificates/certificates/{{certificateId}}",
        "name": "Destroy a certificate",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "certificateId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/digital_certificates/crls/{{crlsId}}",
        "name": "Destroy a certificate revocation lists (CRL)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "crlsId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/digital_certificates/certificates",
        "name": "List certificates",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, name, certificate, issuer, subject_name, validity, status, type, managed, status_detail, csr, key_algorithm, challenge, authority, active, product_version, last_editor, last_modified)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/digital_certificates/certificates/{{certificateId}}",
        "name": "Retrieve details from a certificate",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "certificateId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/digital_certificates/crls",
        "name": "List certificate revocation lists (CRL)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: name, active, last_editor, last_modified, product_version, issuer, last_update, next_update, crl)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/digital_certificates/crls/{{crlsId}}",
        "name": "Retrieve details from a certificate revocation lists (CRL)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "crlsId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/digital_certificates/certificates/{{certificateId}}",
        "name": "Partially update a certificate",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "certificateId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/digital_certificates/crls/{{crlsId}}",
        "name": "Update a certificate revocation lists (CRL)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "crlsId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/digital_certificates/certificates",
        "name": "Create a certificate",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/digital_certificates/certificates/request",
        "name": "Create a certificate request (CR)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/digital_certificates/crls",
        "name": "Create a certificate revocation lists (CRL)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/digital_certificates/csr",
        "name": "Create a certificate signing request (CSR)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/digital_certificates/certificates/{{certificateId}}",
        "name": "Update a certificate",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "certificateId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/digital_certificates/crls/{{crlsId}}",
        "name": "Update a certificate revocation lists (CRL)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "crlsId"
        ],
        "queryParams": []
      }
    ],
    "edge_connector": [
      {
        "method": "DELETE",
        "url": "/edge_connector/connectors/{{connector_id}}",
        "name": "Destroy an Edge Connector",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "connector_id"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/edge_connector/connectors",
        "name": "List Edge Connectors",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: )"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_connector/connectors/{{connector_id}}",
        "name": "Retrieve details of an Edge Connector",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "connector_id"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/edge_connector/connectors/{{connector_id}}",
        "name": "Partially update an Edge Connector",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "connector_id"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_connector/connectors",
        "name": "Create an Edge Connector",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/edge_connector/connectors/{{connector_id}}",
        "name": "Update an Edge Connector",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "connector_id"
        ],
        "queryParams": []
      }
    ],
    "edge_firewall": [
      {
        "method": "DELETE",
        "url": "/edge_firewall/wafs/{{wafId}}",
        "name": "Destroy a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "wafId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/firewalls/{{edgeFirewallId}}",
        "name": "Destroy an Edge Firewall",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
        "name": "Destroy an Edge Firewall Function",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId",
          "edgeFirewallFunctionId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
        "name": "Destroy an Edge Firewall Rule",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
        "name": "Destroy an Exception from a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "wafId",
          "exceptionWafId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/edge_firewall/wafs/{{wafId}}/exceptions",
        "name": "List Exceptions for a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "wafId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: rule_id, name, path, match_zones, use_regex, active, last_editor, last_modified)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/firewalls/{{edgeFirewallId}}",
        "name": "Retrieve details from an Edge Firewall",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/functions",
        "name": "List Edge Firewall Function",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, last_editor, last_modified, name, json_args, edge_function, active)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
        "name": "Retrieve details of an Edge Firewall Function",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId",
          "edgeFirewallFunctionId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/request_rules",
        "name": "List Edge Firewall Rules",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: name, last_editor, last_modified, active, description, order, behaviors, criteria)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
        "name": "Retrieve details of an Edge Firewall Rule",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeFirewallId",
          "ruleId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/wafs/{{wafId}}",
        "name": "Retrieve details from a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "wafId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
        "name": "Retrieve details of an Exception from a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "wafId",
          "exceptionWafId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/workspace/firewalls/{{edgeFirewallId}}",
        "name": "Partially update an Edge Firewall",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
        "name": "Partially update an Edge Firewall Function",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId",
          "edgeFirewallFunctionId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
        "name": "Partially update an Edge Firewall Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/wafs/{{wafId}}",
        "name": "Partially update a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "wafId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
        "name": "Partially update an Exception for a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "wafId",
          "exceptionWafId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_firewall/wafs/{{wafId}}/clone",
        "name": "Clone a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "wafId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/clone",
        "name": "Clone an Edge Firewall",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/functions",
        "name": "Create an Edge Firewall Function",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/request_rules",
        "name": "Create an Edge Firewall Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/wafs/{{wafId}}/exceptions",
        "name": "Create an Exception for a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "wafId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/firewalls/{{edgeFirewallId}}",
        "name": "Update an Edge Firewall",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/functions/{{edgeFirewallFunctionId}}",
        "name": "Update an Edge Firewall Function",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId",
          "edgeFirewallFunctionId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/rules/order",
        "name": "Ordering Edge Firewall Rules",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/firewalls/{{edgeFirewallId}}/rules/{{ruleId}}",
        "name": "Update an Edge Firewall Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeFirewallId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/wafs/{{wafId}}",
        "name": "Update a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "wafId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/wafs/{{wafId}}/exceptions/{{exceptionWafId}}",
        "name": "Update an Exception for a Web Application Firewall (WAF)",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "wafId",
          "exceptionWafId"
        ],
        "queryParams": []
      }
    ],
    "edge_functions": [
      {
        "method": "DELETE",
        "url": "/edge_functions/functions/{{functionId}}",
        "name": "Destroy an Edge Function",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "functionId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/edge_functions/functions",
        "name": "List Edge Functions",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "vendor",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "last_modified",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, name, language, json_args, initiator_type, active, last_editor, last_modified, product_version)"
          },
          {
            "key": "page",
            "value": "",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "40",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "vendor",
            "description": "A search term."
          },
          {
            "key": "initiator_type",
            "value": "edge_application",
            "description": ""
          },
          {
            "key": "vendor",
            "value": "support@azion.com",
            "description": ""
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_functions/functions/{{functionId}}",
        "name": "Retrieve details of an Edge Function",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "functionId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/edge_functions/functions/{{functionId}}",
        "name": "Partially update an Edge Function",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "functionId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/edge_functions/functions/{{functionId}}",
        "name": "Update an Edge Function",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "functionId"
        ],
        "queryParams": []
      }
    ],
    "orchestrator": [
      {
        "method": "DELETE",
        "url": "/edge_orchestrator/edge_nodes/groups/{{groupId}}",
        "name": "Remove Node Group",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "groupId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}",
        "name": "Destroy an Edge Service",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "serviceId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/orchestrator/edge_nodes/:nodeId",
        "name": "Delete an Edge Node",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/orchestrator/edge_nodes/:nodeId/services/:bindId",
        "name": "Unbind Node Service",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "nodeId",
          "bindId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/orchestrator/edge_services/:serviceId/resources/:resourceId",
        "name": "Delete Resource",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "serviceId",
          "resourceId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_nodes",
        "name": "List Edge Nodes",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "hash_id",
            "value": "<string>",
            "description": "Search by hash_id"
          },
          {
            "key": "name",
            "value": "<string>",
            "description": "Search by name"
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_nodes/:nodeId/",
        "name": "Retrieve details of an Edge Node",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_nodes/groups",
        "name": "List Edge Node Groups",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "Number of results to return per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_services",
        "name": "List Edge Services",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "name",
            "value": "<string>",
            "description": "Search by name"
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Field to order by, use '-' for descending"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "Page number for pagination"
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}",
        "name": "Retrieve details of an Edge Service",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "serviceId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}/resources",
        "name": "List Service Resources",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "serviceId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "Number of results to return per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}/resources/{{resourceId}}/content",
        "name": "Retrieve content of a Resource",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "serviceId",
          "resourceId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/orchestrator/edge_nodes/:nodeId/groups?fields=<string>&ordering=<string>&page=<integer>&page_size=<integer>&search=<string>",
        "name": "List Edge Node Groups by id",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/orchestrator/edge_nodes/:nodeId/services/:bindId?fields=<string>",
        "name": "Retrieve details of an Edge Node Service Bind",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "nodeId",
          "bindId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/orchestrator/edge_nodes/:nodeId/services?fields=<string>&ordering=<string>&page=<integer>&page_size=<integer>&search=<string>",
        "name": "List Node Services",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/orchestrator/edge_services/:serviceId/resources/:resourceId?fields=<string>",
        "name": "Retrieve details of a Resource",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "serviceId",
          "resourceId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}",
        "name": "Partially update an Edge Service",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "serviceId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/orchestrator/edge_nodes/:nodeId/",
        "name": "Partially update an Edge Node",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_orchestrator/edge_nodes/:nodeId/services",
        "name": "Bind Node Service",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_orchestrator/edge_nodes/groups",
        "name": "Create Edge Node Group",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_orchestrator/edge_services",
        "name": "Create Edge Service",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}/resources",
        "name": "Create Service Resource",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "serviceId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/orchestrator/edge_nodes/:nodeId/groups",
        "name": "Bind Node Group",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/edge_orchestrator/edge_services/{{serviceId}}",
        "name": "Update an Edge Service",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "serviceId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/orchestrator/edge_nodes/:nodeId/",
        "name": "Update an Edge Node",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "nodeId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/orchestrator/edge_services/:serviceId/resources/:resourceId",
        "name": "Update Resource",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "serviceId",
          "resourceId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/orchestrator/edge_services/:serviceId/resources/:resourceId/content",
        "name": "Upload content of a Resource",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "serviceId",
          "resourceId"
        ],
        "queryParams": []
      }
    ],
    "edge_sql": [
      {
        "method": "DELETE",
        "url": "/edge_sql/databases/{{databaseId}}",
        "name": "Destroy a database",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "databaseId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/edge_sql/databases",
        "name": "List databases",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/edge_sql/databases/{{databaseId}}",
        "name": "Retrieve details from a database",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "databaseId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "POST",
        "url": "/edge_sql/databases",
        "name": "Create a database",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/edge_sql/databases/{{databaseId}}/query",
        "name": "Execute a query into a database",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "databaseId"
        ],
        "queryParams": []
      }
    ],
    "identity": [
      {
        "method": "DELETE",
        "url": "/identity/users/{{userId}}",
        "name": "Destroy a user",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "userId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/identity/users/{{userId}}/lockout",
        "name": "Unlock user",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "userId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/identity/users",
        "name": "List of the account users",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "locked",
            "value": "%*!",
            "description": "Filters users by locked status.\n - `true`: Returns only locked users.\n - `false`: Returns only unlocked users.\n - (not provided): Returns all users."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, last_login, first_name, last_name, email, country_call_code, mobile, date_joined, timezone, language)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/identity/users/{{userId}}",
        "name": "Retrieve details from a user",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "userId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/identity/users/{{userId}}",
        "name": "Partially update a user",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "userId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/identity/users",
        "name": "Create a new user",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/identity/users/{{userId}}",
        "name": "Update a user",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "userId"
        ],
        "queryParams": []
      }
    ],
    "payments": [
      {
        "method": "DELETE",
        "url": "/payments/credit_cards/:id",
        "name": "Destroy a credit card",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/payments/credit_cards",
        "name": "List of the credit cards",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/payments/credit_cards/{{creditCardId}}",
        "name": "Retrieve details from a credit card",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "creditCardId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/payments/history",
        "name": "List of the payment history",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "#",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "payment_due",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "2",
            "description": "Number of results to return per page."
          },
          {
            "key": "search",
            "value": "payment_method_details",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/payments/credit_cards/:id",
        "name": "Partially update a credit card",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/payments/credit_cards",
        "name": "Create a new credit card",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/payments/credits",
        "name": "Add credits using the default credit card",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      }
    ],
    "edge_storage": [
      {
        "method": "DELETE",
        "url": "/worksapce/storage/buckets/{{bucketName}}",
        "name": "Delete a bucket",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "bucketName"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
        "name": "Delete object key",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "bucketName",
          "objectKey"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/storage/credentials/{{credentialId}}",
        "name": "Delete a Credential",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "credentialId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/workspace/storage/buckets/{{bucketName}}/objects",
        "name": "List buckets objects",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "bucketName"
        ],
        "queryParams": [
          {
            "key": "continuation_token",
            "value": "<string>",
            "description": "A continuation token for the next page of records."
          },
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "max_object_count",
            "value": "<integer>",
            "description": "Number of results to be returned on the page. Limited to 1000 objects."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
        "name": "Download object",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "bucketName",
          "objectKey"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/storage/credentials/{{credentialId}}",
        "name": "Retrieve details from a credential",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "credentialId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/wrokspace/storage/buckets/{{bucketName}}",
        "name": "Update bucket info",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "bucketName"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
        "name": "Create new object key",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "bucketName",
          "objectKey"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/storage/buckets/{{bucketName}}/objects/{{objectKey}}",
        "name": "Update the object key",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "bucketName",
          "objectKey"
        ],
        "queryParams": []
      }
    ],
    "edge_application": [
      {
        "method": "DELETE",
        "url": "/workspace/applications/{{edgeApplicationId}}",
        "name": "Destroy an Edge Application",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
        "name": "Destroy an Edge Applications Cache Setting",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "edgeCacheSettingsId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
        "name": "Destroy an Edge Applications Device Group",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "deviceGroupId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
        "name": "Destroy an Edge Application Function Instance",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "edgeApplicationFunctionId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
        "name": "Destroy an Edge Application Rule",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
        "name": "Destroy an Edge Application Response Rule",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}",
        "name": "Retrieve details of an Edge Application",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/cache_settings",
        "name": "List all Edge Applications Cache Settings",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, name)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
        "name": "Retrieve details of an Edge Applications Cache Setting",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "edgeCacheSettingsId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/device_groups",
        "name": "List Edge Applications Device Groups",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: name, id, user_agent)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
        "name": "Retrieve details of a Device Group",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "deviceGroupId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/functions",
        "name": "List Function Instances",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, name, json_args, edge_function, active, last_editor, last_modified)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
        "name": "Retrieve details of an Edge Application Function Instance",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "edgeApplicationFunctionId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/request_rules",
        "name": "List Edge Application Request Rules",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: name, phase, active, description, order, behaviors, criteria, last_editor, last_modified)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
        "name": "Retrieve details of an Edge Application Rule",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
        "name": "Retrieve details of an Edge Application Response Rule",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/applications/{{edgeApplicationId}}/rules",
        "name": "List Edge Application Response Rules",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: name, phase, active, description, order, behaviors, criteria, last_editor, last_modified)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/workspace/applications/{{edgeApplicationId}}",
        "name": "Partially update an Edge Application",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
        "name": "Partially update an Edge Applications Cache Setting",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "edgeCacheSettingsId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
        "name": "Partially update an Edge Applications Device Group",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "deviceGroupId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
        "name": "Partially update an Edge Application Function Instance",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "edgeApplicationFunctionId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
        "name": "Partially update an Edge Application Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
        "name": "Partially update an Edge Application Response Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/applications/{{edgeApplicationId}}/cache_settings",
        "name": "Create an Edge Applications Cache Setting",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/applications/{{edgeApplicationId}}/clone",
        "name": "Clone an Edge Application",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/applications/{{edgeApplicationId}}/device_groups",
        "name": "Create an Edge Applications Device Group",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/applications/{{edgeApplicationId}}/functions",
        "name": "Create an Edge Application Function Instance",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/applications/{{edgeApplicationId}}/request_rules",
        "name": "Create an Edge Application Request Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/applications/{{edgeApplicationId}}/response_rules",
        "name": "Create an Edge Application Response Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}",
        "name": "Update an Edge Application",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}/cache_settings/{{edgeCacheSettingsId}}",
        "name": "Update an Edge Applications Cache Setting",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "edgeCacheSettingsId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}/device_groups/{{deviceGroupId}}",
        "name": "Update an Edge Applications Device Group",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "deviceGroupId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}/functions/{{edgeApplicationFunctionId}}",
        "name": "Update an Edge Application Function Instance",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "edgeApplicationFunctionId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}/request_rules/{{ruleId}}",
        "name": "Update an Edge Application Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}/response_rules/{{ruleId}}",
        "name": "Update an Edge Application Response Rule",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId",
          "ruleId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/applications/{{edgeApplicationId}}/rules/order",
        "name": "Ordering Edge Application Request Rules",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "edgeApplicationId"
        ],
        "queryParams": []
      }
    ],
    "workspace": [
      {
        "method": "DELETE",
        "url": "/workspace/custom_pages/{{deleteId}}",
        "name": "Destroy a Custom Page",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "deleteId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/network_lists/{{networkId}}",
        "name": "Destroy a Network List",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "networkId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/workloads/{{workloadId}}",
        "name": "Destroy an Workload",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "workloadId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/workspace/custom_pages/{{customPageId}}",
        "name": "Retrieve details of a Custom Page",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "customPageId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "****",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/network_lists/{{networkId}}",
        "name": "Retrieve details of a Network List",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "networkId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/workloads/{{workloadId}}",
        "name": "Retrieve details of an Workload",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "workloadId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/workloads/{{workloadId}}/deployments",
        "name": "List Workload Deployments",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "workloadId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results.\n(Valid fields: id, tag, current)"
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/workloads/{{workloadId}}/deployments/{{workloadDeploymentsId}}",
        "name": "Retrieve details of a Workload Deployment",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "workloadId",
          "workloadDeploymentsId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/workspace/custom_pages/{{customPageId}}",
        "name": "Partially update a Custom Page",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "customPageId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/network_lists/{{networkId}}",
        "name": "Partially update a Network List",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "networkId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/workloads/{{workloadId}}",
        "name": "Partially update an Workload",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "workloadId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/workloads/{{workloadId}}/deployments/{{workloadDeploymentsId}}",
        "name": "Partially update a Workload Deployment",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "workloadId",
          "workloadDeploymentsId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/purge/url",
        "name": "Create a Purge Request",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/custom_pages/{{customPageId}}",
        "name": "Update a Custom Page",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "customPageId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/network_lists/{{networkId}}",
        "name": "Update a Network List",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "networkId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/workloads/{{workloadId}}",
        "name": "Update an Workload",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "workloadId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/workloads/{{workloadId}}/deployments/{{workloadDeploymentsId}}",
        "name": "Update a Workload Deployment",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "workloadId",
          "workloadDeploymentsId"
        ],
        "queryParams": []
      }
    ],
    "dns": [
      {
        "method": "DELETE",
        "url": "/workspace/dns/zones/{{zoneId}}",
        "name": "Destroy a DNS Zone",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": []
      },
      {
        "method": "DELETE",
        "url": "/workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
        "name": "Destroy a DNS Record",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "zoneId",
          "recordId"
        ],
        "queryParams": []
      },
      {
        "method": "GET",
        "url": "/workspace/dns/zones/{{zoneId}}",
        "name": "Retrieve details of a DNS Zone",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/dns/zones/{{zoneId}}/dnssec",
        "name": "Retrieve details of a DNSSEC",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/dns/zones/{{zoneId}}/records",
        "name": "List DNS Records",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
        "name": "Retrieve details of a DNS Record",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [
          "zoneId",
          "recordId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/dns/zones/{{zoneId}}",
        "name": "Partially update a DNS Zone",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/dns/zones/{{zoneId}}/dnssec",
        "name": "Partially update a DNSSEC",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
        "name": "Partially update a DNS Record",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId",
          "recordId"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/workspace/dns/zones/{{zoneId}}/records",
        "name": "Create a DNS Record",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/dns/zones/{{zoneId}}",
        "name": "Update a DNS Zone",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/dns/zones/{{zoneId}}/dnssec",
        "name": "Update a DNSSEC",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/workspace/dns/zones/{{zoneId}}/records/{{recordId}}",
        "name": "Update a DNS Record",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "zoneId",
          "recordId"
        ],
        "queryParams": []
      }
    ],
    "account": [
      {
        "method": "GET",
        "url": "/account/account",
        "name": "Retrieve logged account details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/account/accounts",
        "name": "List accounts",
        "hasAuth": true,
        "hasBody": false,
        "pathParams": [],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          },
          {
            "key": "ordering",
            "value": "<string>",
            "description": "Which field to use when ordering the results."
          },
          {
            "key": "page",
            "value": "<integer>",
            "description": "A page number within the paginated result set."
          },
          {
            "key": "page_size",
            "value": "<integer>",
            "description": "A numeric value that indicates the number of items per page."
          },
          {
            "key": "search",
            "value": "<string>",
            "description": "A search term."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/account/accounts/{{accountId}}",
        "name": "Retrieve account details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "accountId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "GET",
        "url": "/account/accounts/{{accountId}}/info",
        "name": "Retrieve account information details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "accountId"
        ],
        "queryParams": [
          {
            "key": "fields",
            "value": "<string>",
            "description": "Comma-separated list of field names to include in the response."
          }
        ]
      },
      {
        "method": "PATCH",
        "url": "/account/account",
        "name": "Partially update logged account details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PATCH",
        "url": "/account/accounts/:id",
        "name": "Partially update account details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/account/accounts",
        "name": "Create a new account",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/account/account",
        "name": "Update logged account details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/account/accounts/:id",
        "name": "Update account details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "id"
        ],
        "queryParams": []
      },
      {
        "method": "PUT",
        "url": "/account/accounts/{{accountId}}/info",
        "name": "Update account information details",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [
          "accountId"
        ],
        "queryParams": []
      }
    ],
    "iam": [
      {
        "method": "POST",
        "url": "/iam/accounts",
        "name": "Create new account",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/iam/mfa/totp",
        "name": "Create a TOTP device",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      },
      {
        "method": "POST",
        "url": "/iam/users",
        "name": "Create User",
        "hasAuth": true,
        "hasBody": true,
        "pathParams": [],
        "queryParams": []
      }
    ]
  }
}