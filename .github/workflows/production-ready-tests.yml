name: 🚀 Production Ready API Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'stage'
        type: choice
        options:
          - dev
          - stage
          - prod
      parallel:
        description: 'Run tests in parallel'
        required: false
        default: true
        type: boolean
      record:
        description: 'Record to Cypress Cloud'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'

env:
  NODE_VERSION: '18'

jobs:
  cypress-core-tests:
    name: 🧪 Core API Tests - ${{ matrix.test-group }}
    runs-on: ubuntu-latest
    continue-on-error: false  # Fail fast for core tests
    
    strategy:
      fail-fast: false
      matrix:
        test-group: 
          - 'account-management'
          - 'domains-api'
          - 'real-time-purge'
          - 'framework-validation'

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Environment Variables
        run: |
          echo "Setting up environment for: ${{ github.event.inputs.environment || 'stage' }}"
          
          # Set environment-specific base URL
          case "${{ github.event.inputs.environment || 'stage' }}" in
            "dev")
              echo "CYPRESS_baseUrl=https://api-dev.azionapi.net" >> $GITHUB_ENV
              ;;
            "stage")
              echo "CYPRESS_baseUrl=https://api-stage.azionapi.net" >> $GITHUB_ENV
              ;;
            "prod")
              echo "CYPRESS_baseUrl=https://api.azionapi.net" >> $GITHUB_ENV
              ;;
          esac
          
          # Set test spec pattern based on matrix group
          case "${{ matrix.test-group }}" in
            "account-management")
              echo "SPEC_PATTERN=cypress/e2e/api/account-management-v2.cy.js" >> $GITHUB_ENV
              ;;
            "domains-api")
              echo "SPEC_PATTERN=cypress/e2e/api/domains-api-v2.cy.js" >> $GITHUB_ENV
              ;;
            "real-time-purge")
              echo "SPEC_PATTERN=cypress/e2e/api/real-time-purge-v2.cy.js" >> $GITHUB_ENV
              ;;
            "framework-validation")
              echo "SPEC_PATTERN=cypress/e2e/api/enhanced/{integrated-framework-demo,simple-test-validation}.cy.js" >> $GITHUB_ENV
              ;;
          esac

      - name: 🧪 Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          spec: ${{ env.SPEC_PATTERN }}
          browser: electron
          headless: true
          install: true
          start: ""
          wait-on: ""
          parallel: ${{ github.event.inputs.parallel || 'true' }}
          record: ${{ github.event.inputs.record || 'false' }}
          config: |
            video=true,
            screenshotOnRunFailure=true,
            videosFolder=cypress/videos,
            screenshotsFolder=cypress/screenshots,
            requestTimeout=60000,
            responseTimeout=60000,
            defaultCommandTimeout=10000
            
        env:
          CYPRESS_token: ${{ secrets.AZION_TOKEN }}
          CYPRESS_accountId: ${{ vars.ACCOUNT_ID }}
          CYPRESS_environment: ${{ github.event.inputs.environment || 'stage' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: 📊 Generate Test Metrics
        if: always()
        run: |
          echo "📈 Generating test metrics for ${{ matrix.test-group }}..."
          
          mkdir -p reports/metrics
          
          # Create metrics file
          cat > reports/metrics/${{ matrix.test-group }}-metrics.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)",
            "testGroup": "${{ matrix.test-group }}",
            "environment": "${{ github.event.inputs.environment || 'stage' }}",
            "runId": "${{ github.run_id }}",
            "runNumber": ${{ github.run_number }},
            "actor": "${{ github.actor }}",
            "ref": "${{ github.ref }}",
            "sha": "${{ github.sha }}",
            "workflow": "production-ready-tests"
          }
          EOF
          
          echo "✅ Metrics generated for ${{ matrix.test-group }}"

      - name: 📤 Upload Test Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-${{ matrix.test-group }}-${{ github.run_number }}
          path: |
            cypress/videos/
            cypress/screenshots/
            reports/
          retention-days: 30

  test-summary:
    name: 📋 Test Summary Report
    runs-on: ubuntu-latest
    needs: cypress-core-tests
    if: always()
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📊 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          
      - name: 📈 Generate Summary Report
        run: |
          echo "# 🧪 Production Ready Tests Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "**Environment:** ${{ github.event.inputs.environment || 'stage' }}" >> test-summary.md
          echo "**Timestamp:** $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)" >> test-summary.md
          echo "**Run ID:** ${{ github.run_id }}" >> test-summary.md
          echo "**Triggered by:** ${{ github.actor }}" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Test Groups Results" >> test-summary.md
          echo "" >> test-summary.md
          
          # Check job results
          echo "| Test Group | Status | Artifacts |" >> test-summary.md
          echo "|------------|--------|-----------|" >> test-summary.md
          
          for group in account-management domains-api real-time-purge framework-validation; do
            if [ -d "artifacts/cypress-results-${group}-${{ github.run_number }}" ]; then
              echo "| ${group} | ✅ Completed | 📁 Available |" >> test-summary.md
            else
              echo "| ${group} | ❌ Failed | ❌ Missing |" >> test-summary.md
            fi
          done
          
          echo "" >> test-summary.md
          echo "## Core Test Coverage" >> test-summary.md
          echo "" >> test-summary.md
          echo "- ✅ Account Management API (CRUD, Validation, Pagination)" >> test-summary.md
          echo "- ✅ Domains API (Lifecycle, Certificates, Rate Limiting)" >> test-summary.md
          echo "- ✅ Real-time Purge API (URL, Cache Key, Wildcard)" >> test-summary.md
          echo "- ✅ Framework Validation (Integration, Basic Functionality)" >> test-summary.md
          echo "" >> test-summary.md
          echo "**Total Core Tests:** 54 tests across 5 validated suites" >> test-summary.md
          
          cat test-summary.md

      - name: 💬 Comment PR Results
        uses: actions/github-script@v7
        if: always() && github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('test-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: 📤 Upload Summary Report
        uses: actions/upload-artifact@v4
        with:
          name: test-summary-report-${{ github.run_number }}
          path: test-summary.md
          retention-days: 90

  notify-results:
    name: 📢 Notify Results
    runs-on: ubuntu-latest
    needs: [cypress-core-tests, test-summary]
    if: always()
    
    steps:
      - name: 📊 Determine Overall Status
        id: status
        run: |
          if [[ "${{ needs.cypress-core-tests.result }}" == "success" ]]; then
            echo "status=✅ SUCCESS" >> $GITHUB_OUTPUT
            echo "color=28a745" >> $GITHUB_OUTPUT
            echo "message=All core API tests passed successfully!" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.cypress-core-tests.result }}" == "failure" ]]; then
            echo "status=❌ FAILURE" >> $GITHUB_OUTPUT
            echo "color=d73a49" >> $GITHUB_OUTPUT
            echo "message=Some core API tests failed. Check the logs for details." >> $GITHUB_OUTPUT
          else
            echo "status=⚠️ PARTIAL" >> $GITHUB_OUTPUT
            echo "color=ffc107" >> $GITHUB_OUTPUT
            echo "message=Tests completed with mixed results." >> $GITHUB_OUTPUT
          fi

      - name: 📝 Create Status Badge
        run: |
          echo "Test Status: ${{ steps.status.outputs.status }}"
          echo "Message: ${{ steps.status.outputs.message }}"
          
          # Create a simple status file
          mkdir -p status
          echo "${{ steps.status.outputs.status }}" > status/latest.txt
          echo "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)" > status/timestamp.txt

      - name: 📤 Upload Status
        uses: actions/upload-artifact@v4
        with:
          name: test-status-${{ github.run_number }}
          path: status/
          retention-days: 30
