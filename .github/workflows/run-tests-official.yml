name: 🧪 Cypress API Tests (Official Action)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'stage'
        type: choice
        options:
          - dev
          - stage
          - prod
      test_suite:
        description: 'Test suite to run'
        required: true
        default: 'smoke'
        type: choice
        options:
          - smoke
          - account
          - auth
          - all
          - regression
      browser:
        description: 'Browser to use'
        required: true
        default: 'electron'
        type: choice
        options:
          - electron
          - chrome
          - firefox
          - edge
      parallel:
        description: 'Run tests in parallel'
        required: false
        default: false
        type: boolean
      record:
        description: 'Record to Cypress Cloud'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'

jobs:
  cypress-run:
    name: 🚀 Cypress Tests - ${{ github.event.inputs.environment }}
    runs-on: ubuntu-latest
    continue-on-error: true  # Allow workflow to continue even if tests fail
    
    strategy:
      fail-fast: false  # Don't stop other jobs if one fails
      matrix:
        containers: [1]  # Can be expanded for parallel execution

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Environment Variables
        run: |
          echo "Setting up environment for: ${{ github.event.inputs.environment }}"
          
          # Set environment-specific base URL
          case "${{ github.event.inputs.environment }}" in
            "dev")
              echo "CYPRESS_baseUrl=https://api-dev.azionapi.net" >> $GITHUB_ENV
              ;;
            "stage")
              echo "CYPRESS_baseUrl=https://api-stage.azionapi.net" >> $GITHUB_ENV
              ;;
            "prod")
              echo "CYPRESS_baseUrl=https://api.azionapi.net" >> $GITHUB_ENV
              ;;
          esac
          
          # Set test spec pattern based on suite
          case "${{ github.event.inputs.test_suite }}" in
            "smoke")
              echo "SPEC_PATTERN=cypress/e2e/api/account.cy.js" >> $GITHUB_ENV
              ;;
            "account")
              echo "SPEC_PATTERN=cypress/e2e/api/account*.cy.js" >> $GITHUB_ENV
              ;;
            "auth")
              echo "SPEC_PATTERN=cypress/e2e/api/auth*.cy.js" >> $GITHUB_ENV
              ;;
            "all"|"regression")
              echo "SPEC_PATTERN=cypress/e2e/api/**/*.cy.js" >> $GITHUB_ENV
              ;;
            *)
              echo "SPEC_PATTERN=cypress/e2e/api/${{ github.event.inputs.test_suite }}*.cy.js" >> $GITHUB_ENV
              ;;
          esac

      - name: 🧪 Run Cypress Tests
        uses: cypress-io/github-action@v6
        with:
          # Specify which tests to run
          spec: ${{ env.SPEC_PATTERN }}
          
          # Browser configuration
          browser: ${{ github.event.inputs.browser }}
          
          # Headless mode for CI
          headless: true
          
          # Install dependencies
          install: true
          
          # Build command (if needed)
          # build: npm run build
          
          # Don't start a server (API tests don't need local server)
          start: ""
          
          # Wait for server (not needed for API tests)
          wait-on: ""
          
          # Parallel execution
          parallel: ${{ github.event.inputs.parallel }}
          
          # Recording to Cypress Cloud
          record: ${{ github.event.inputs.record }}
          
          # Configuration overrides
          config: |
            video=true,
            screenshotOnRunFailure=true,
            videosFolder=cypress/videos,
            screenshotsFolder=cypress/screenshots,
            reporter=mochawesome,
            reporterOptions="reportDir=cypress/reports,overwrite=false,html=true,json=true,reportFilename=api-test-report"
            
        env:
          # Cypress environment variables
          CYPRESS_token: ${{ secrets.AZION_TOKEN }}
          CYPRESS_accountId: ${{ vars.ACCOUNT_ID }}
          CYPRESS_environment: ${{ github.event.inputs.environment }}
          
          # GitHub token for proper build identification
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
          # Cypress Cloud recording key (if using)
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}

      - name: 📊 Generate Test Summary
        if: always()
        run: |
          echo "📈 Generating test summary..."
          
          # Create summary report
          mkdir -p reports/test-results
          
          cat > reports/test-results/summary.json << EOF
          {
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)",
            "environment": "${{ github.event.inputs.environment }}",
            "testSuite": "${{ github.event.inputs.test_suite }}",
            "testType": "api-backend",
            "browser": "${{ github.event.inputs.browser }}",
            "parallel": ${{ github.event.inputs.parallel }},
            "runId": "${{ github.run_id }}",
            "runNumber": ${{ github.run_number }},
            "approach": "official-cypress-action"
          }
          EOF
          
          # Show test results if available
          if [ -f "cypress/reports/api-test-report.json" ]; then
            echo "📊 Test Results Found:"
            cat cypress/reports/api-test-report.json | jq '.stats // empty'
          else
            echo "⚠️ No test report found"
          fi

      - name: 📤 Upload Test Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: cypress-results-official-${{ github.event.inputs.environment }}-${{ github.run_number }}
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/reports/
            reports/
          retention-days: 30

      - name: 💬 Comment Test Results
        uses: actions/github-script@v7
        if: always() && github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            let comment = `## 🧪 Cypress API Test Results (Official Action)\n\n`;
            comment += `**Environment:** ${{ github.event.inputs.environment }}\n`;
            comment += `**Test Suite:** ${{ github.event.inputs.test_suite }}\n`;
            comment += `**Browser:** ${{ github.event.inputs.browser }}\n`;
            comment += `**Run ID:** ${{ github.run_id }}\n\n`;
            
            try {
              const report = JSON.parse(fs.readFileSync('cypress/reports/api-test-report.json', 'utf8'));
              if (report.stats) {
                comment += `**Results:**\n`;
                comment += `- ✅ Passed: ${report.stats.passes || 0}\n`;
                comment += `- ❌ Failed: ${report.stats.failures || 0}\n`;
                comment += `- ⏭️ Skipped: ${report.stats.skipped || 0}\n`;
                comment += `- 📊 Total: ${report.stats.tests || 0}\n`;
              }
            } catch (error) {
              comment += `⚠️ Could not parse test results\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
