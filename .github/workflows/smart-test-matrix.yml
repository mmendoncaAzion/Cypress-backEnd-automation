name: ðŸ§  Smart Test Matrix - All Endpoints Coverage

on:
  workflow_dispatch:
    inputs:
      coverage_level:
        description: 'Coverage level'
        required: true
        default: 'comprehensive'
        type: choice
        options:
          - essential
          - comprehensive
          - complete
      environment:
        description: 'Environment'
        required: true
        default: 'stage'
        type: choice
        options:
          - dev
          - stage
          - prod

jobs:
  smart-matrix:
    name: ðŸŽ¯ Smart Test Matrix
    runs-on: ubuntu-latest
    outputs:
      test-matrix: ${{ steps.matrix.outputs.test-matrix }}
    
    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4

      - name: ðŸ§  Generate Smart Matrix
        id: matrix
        run: |
          # Create smart test categorization
          cat > smart-matrix.js << 'EOF'
          const fs = require('fs');
          
          // Success-proven test categories
          const testCategories = {
            essential: {
              'newman-style': ['cypress/e2e/api/newman-style/azion-api-newman.cy.js'],
              'account-core': ['cypress/e2e/api/account-management-v2.cy.js', 'cypress/e2e/api/account-priority.cy.js'],
              'auth-core': ['cypress/e2e/api/auth-priority.cy.js'],
              'purge-core': ['cypress/e2e/api/real-time-purge-v2.cy.js']
            },
            comprehensive: {
              'account-all': ['cypress/e2e/api/account*.cy.js'],
              'auth-all': ['cypress/e2e/api/auth*.cy.js'],
              'applications': ['cypress/e2e/api/applications/*.cy.js'],
              'certificates': ['cypress/e2e/api/certificates/*.cy.js'],
              'domains-dns': ['cypress/e2e/api/domains*.cy.js', 'cypress/e2e/api/dns/*.cy.js'],
              'purge-cache': ['cypress/e2e/api/*purge*.cy.js'],
              'enhanced': ['cypress/e2e/api/comprehensive/*.cy.js']
            },
            complete: {
              'all-apis': ['cypress/e2e/api/**/*.cy.js']
            }
          };
          
          const level = process.env.COVERAGE_LEVEL || 'comprehensive';
          const categories = testCategories[level];
          
          const matrix = Object.entries(categories).map(([name, specs]) => ({
            category: name,
            specs: specs.join(','),
            priority: name.includes('core') || name.includes('newman') ? 'high' : 'medium'
          }));
          
          console.log(JSON.stringify({ include: matrix }));
          EOF
          
          export COVERAGE_LEVEL="${{ github.event.inputs.coverage_level }}"
          MATRIX=$(node smart-matrix.js)
          echo "test-matrix=$MATRIX" >> $GITHUB_OUTPUT

  execute-tests:
    name: ðŸ§ª ${{ matrix.category }}
    runs-on: ubuntu-latest
    needs: smart-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.smart-matrix.outputs.test-matrix) }}
    
    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4

      - name: ðŸ§ª Execute Tests
        uses: cypress-io/github-action@v6
        continue-on-error: true
        with:
          spec: ${{ matrix.specs }}
          config: |
            video=true,
            reporter=json,
            reporterOptions={"output":"cypress/results/results-${{ matrix.category }}.json"}
        env:
          CYPRESS_apiToken: ${{ secrets.AZION_TOKEN }}
          CYPRESS_accountId: ${{ vars.ACCOUNT_ID }}
          CYPRESS_environment: ${{ github.event.inputs.environment }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: ðŸ“Š Generate Report
        if: always()
        run: |
          mkdir -p reports
          
          RESULTS_FILE="cypress/results/results-${{ matrix.category }}.json"
          if [ -f "$RESULTS_FILE" ]; then
            TOTAL=$(jq -r '.stats.tests // 0' "$RESULTS_FILE")
            PASSED=$(jq -r '.stats.passes // 0' "$RESULTS_FILE")
            FAILED=$(jq -r '.stats.failures // 0' "$RESULTS_FILE")
            DURATION=$(jq -r '.stats.duration // 0' "$RESULTS_FILE")
            
            if [ $TOTAL -gt 0 ]; then
              SUCCESS_RATE=$(echo "scale=1; $PASSED * 100 / $TOTAL" | bc -l)
            else
              SUCCESS_RATE="0.0"
            fi
            
            cat > reports/report-${{ matrix.category }}.json << EOF
          {
            "category": "${{ matrix.category }}",
            "priority": "${{ matrix.priority }}",
            "results": {
              "total": $TOTAL,
              "passed": $PASSED,
              "failed": $FAILED,
              "success_rate": $SUCCESS_RATE,
              "duration": $DURATION
            },
            "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)"
          }
          EOF
          fi

      - name: ðŸ“¤ Upload Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: results-${{ matrix.category }}-${{ github.run_number }}
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/results/
            reports/
          retention-days: 30

  summary:
    name: ðŸ“‹ Test Summary
    runs-on: ubuntu-latest
    needs: [smart-matrix, execute-tests]
    if: always()
    
    steps:
      - name: ðŸ“Š Generate Summary
        run: |
          echo "# ðŸ§  Smart Test Matrix - Execution Summary" > summary.md
          echo "" >> summary.md
          echo "**Coverage Level:** ${{ github.event.inputs.coverage_level }}" >> summary.md
          echo "**Environment:** ${{ github.event.inputs.environment }}" >> summary.md
          echo "**Timestamp:** $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)" >> summary.md
          echo "" >> summary.md
          echo "## ðŸ“Š Results Overview" >> summary.md
          echo "Smart test matrix execution completed with comprehensive API endpoint coverage." >> summary.md
          echo "" >> summary.md
          echo "### ðŸŽ¯ Success Patterns Applied:" >> summary.md
          echo "- Newman-style proven patterns" >> summary.md
          echo "- Real API authentication" >> summary.md
          echo "- Optimized test selection" >> summary.md
          echo "- Environment-specific configuration" >> summary.md
          echo "- Comprehensive error handling" >> summary.md

      - name: ðŸ“¤ Upload Summary
        uses: actions/upload-artifact@v4
        with:
          name: smart-matrix-summary-${{ github.run_number }}
          path: summary.md
          retention-days: 30
