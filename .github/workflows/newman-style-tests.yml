name: 🧪 Newman-Style API Tests

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        default: 'stage'
        type: choice
        options:
          - dev
          - stage
          - prod
      test_suite:
        description: 'Test suite to run'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - account
          - auth
          - domains
          - purge
  push:
    branches: [ main, develop ]
    paths:
      - 'cypress/e2e/api/newman-style/**'
      - 'cypress/support/newman-patterns/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'cypress/e2e/api/newman-style/**'
      - 'cypress/support/newman-patterns/**'
  schedule:
    # Run daily at 8 AM UTC
    - cron: '0 8 * * *'

env:
  NODE_VERSION: '18'

jobs:
  newman-style-tests:
    name: 🚀 Newman-Style Tests - ${{ matrix.test-group }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        test-group: 
          - 'account-auth'
          - 'domains-purge'
          - 'comprehensive'

    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: 🔧 Setup Environment Variables
        run: |
          echo "Setting up environment for: ${{ github.event.inputs.environment || 'stage' }}"
          
          # Set environment-specific configuration
          case "${{ github.event.inputs.environment || 'stage' }}" in
            "dev")
              echo "CYPRESS_baseUrl=https://api.azion.com" >> $GITHUB_ENV
              echo "CYPRESS_environment=dev" >> $GITHUB_ENV
              ;;
            "stage")
              echo "CYPRESS_baseUrl=https://api.azion.com" >> $GITHUB_ENV
              echo "CYPRESS_environment=stage" >> $GITHUB_ENV
              ;;
            "prod")
              echo "CYPRESS_baseUrl=https://api.azion.com" >> $GITHUB_ENV
              echo "CYPRESS_environment=prod" >> $GITHUB_ENV
              ;;
          esac
          
          # Set test spec pattern based on matrix group
          case "${{ matrix.test-group }}" in
            "account-auth")
              echo "SPEC_PATTERN=cypress/e2e/api/newman-style/azion-api-newman.cy.js" >> $GITHUB_ENV
              echo "GREP_TAGS=@account,@auth" >> $GITHUB_ENV
              ;;
            "domains-purge")
              echo "SPEC_PATTERN=cypress/e2e/api/newman-style/azion-api-newman.cy.js" >> $GITHUB_ENV
              echo "GREP_TAGS=@domains,@purge" >> $GITHUB_ENV
              ;;
            "comprehensive")
              echo "SPEC_PATTERN=cypress/e2e/api/newman-style/**/*.cy.js" >> $GITHUB_ENV
              echo "GREP_TAGS=" >> $GITHUB_ENV
              ;;
          esac

      - name: 🧪 Run Newman-Style Tests
        uses: cypress-io/github-action@v6
        with:
          spec: ${{ env.SPEC_PATTERN }}
          install: true
          working-directory: ./
          config: |
            video=true,
            screenshotOnRunFailure=true,
            requestTimeout=60000,
            responseTimeout=60000,
            defaultCommandTimeout=15000,
            pageLoadTimeout=60000,
            viewportWidth=1280,
            viewportHeight=720
          browser: chrome
          headed: false
          
        env:
          CYPRESS_apiToken: ${{ secrets.AZION_TOKEN }}
          CYPRESS_AZION_TOKEN: ${{ secrets.AZION_TOKEN }}
          CYPRESS_accountId: ${{ vars.ACCOUNT_ID || '25433' }}
          CYPRESS_ACCOUNT_ID: ${{ vars.ACCOUNT_ID || '25433' }}
          CYPRESS_environment: ${{ github.event.inputs.environment || 'stage' }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 📊 Generate Newman-Style Report
        if: always()
        run: |
          echo "📈 Generating Newman-style test report..."
          
          mkdir -p reports/newman-style
          
          # Create Newman-style summary
          cat > reports/newman-style/summary-${{ matrix.test-group }}.json << EOF
          {
            "collection": {
              "name": "Azion API V4 - Newman Style",
              "description": "Newman-style tests executed via Cypress"
            },
            "environment": {
              "name": "${{ github.event.inputs.environment || 'stage' }}",
              "values": {
                "baseUrl": "${{ env.CYPRESS_baseUrl }}",
                "environment": "${{ env.CYPRESS_environment }}"
              }
            },
            "run": {
              "info": {
                "name": "Newman-Style Test Run",
                "timestamp": "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)",
                "runId": "${{ github.run_id }}",
                "runNumber": ${{ github.run_number }},
                "testGroup": "${{ matrix.test-group }}",
                "triggeredBy": "${{ github.actor }}",
                "ref": "${{ github.ref }}",
                "sha": "${{ github.sha }}"
              },
              "stats": {
                "iterations": {
                  "total": 1,
                  "pending": 0,
                  "failed": 0
                }
              }
            }
          }
          EOF
          
          echo "✅ Newman-style report generated"

      - name: 🔍 Validate Test Results
        if: always()
        run: |
          echo "🔍 Validating Newman-style test execution..."
          
          # Check if Newman-style summary was generated
          if [ -f "cypress/reports/newman-style-summary.json" ]; then
            echo "✅ Newman-style summary found"
            
            # Extract key metrics
            TOTAL_TESTS=$(jq -r '.run.stats.tests.total // 0' cypress/reports/newman-style-summary.json)
            FAILED_TESTS=$(jq -r '.run.stats.tests.failed // 0' cypress/reports/newman-style-summary.json)
            
            echo "📊 Total Tests: $TOTAL_TESTS"
            echo "❌ Failed Tests: $FAILED_TESTS"
            
            # Set outputs for summary job
            echo "TOTAL_TESTS=$TOTAL_TESTS" >> $GITHUB_ENV
            echo "FAILED_TESTS=$FAILED_TESTS" >> $GITHUB_ENV
            
            if [ "$FAILED_TESTS" -gt 0 ]; then
              echo "⚠️ Some tests failed"
              exit 1
            else
              echo "✅ All tests passed"
            fi
          else
            echo "⚠️ Newman-style summary not found"
          fi

      - name: 📤 Upload Test Artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: newman-style-results-${{ matrix.test-group }}-${{ github.run_number }}
          path: |
            cypress/videos/
            cypress/screenshots/
            cypress/reports/
            reports/
          retention-days: 30

  test-summary:
    name: 📋 Newman-Style Test Summary
    runs-on: ubuntu-latest
    needs: newman-style-tests
    if: always()
    
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4
        
      - name: 📊 Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts/
          
      - name: 📈 Generate Comprehensive Summary
        run: |
          echo "# 🧪 Newman-Style API Tests Summary" > newman-summary.md
          echo "" >> newman-summary.md
          echo "**Environment:** ${{ github.event.inputs.environment || 'stage' }}" >> newman-summary.md
          echo "**Timestamp:** $(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)" >> newman-summary.md
          echo "**Run ID:** ${{ github.run_id }}" >> newman-summary.md
          echo "**Triggered by:** ${{ github.actor }}" >> newman-summary.md
          echo "" >> newman-summary.md
          
          echo "## 🚀 Newman Pattern Implementation" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "This test suite replicates Newman patterns in Cypress:" >> newman-summary.md
          echo "- ✅ Pre-request scripts for setup and validation" >> newman-summary.md
          echo "- ✅ Test scripts with pm.test() assertions" >> newman-summary.md
          echo "- ✅ Environment variable resolution ({{variable}})" >> newman-summary.md
          echo "- ✅ Newman-style response validation" >> newman-summary.md
          echo "- ✅ Collection runner with iteration support" >> newman-summary.md
          echo "" >> newman-summary.md
          
          echo "## Test Groups Results" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "| Test Group | Status | Artifacts |" >> newman-summary.md
          echo "|------------|--------|-----------|" >> newman-summary.md
          
          # Check job results
          for group in account-auth domains-purge comprehensive; do
            if [ -d "artifacts/newman-style-results-${group}-${{ github.run_number }}" ]; then
              echo "| ${group} | ✅ Completed | 📁 Available |" >> newman-summary.md
            else
              echo "| ${group} | ❌ Failed | ❌ Missing |" >> newman-summary.md
            fi
          done
          
          echo "" >> newman-summary.md
          echo "## 🎯 Test Coverage" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "### Account Management API" >> newman-summary.md
          echo "- ✅ Account info retrieval with validation" >> newman-summary.md
          echo "- ✅ Account listing with pagination" >> newman-summary.md
          echo "- ✅ Pre-request environment validation" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "### Authentication API" >> newman-summary.md
          echo "- ✅ Token validation and verification" >> newman-summary.md
          echo "- ✅ Invalid token error handling" >> newman-summary.md
          echo "- ✅ Authentication flow testing" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "### Domain Management API" >> newman-summary.md
          echo "- ✅ Domain creation with unique naming" >> newman-summary.md
          echo "- ✅ Domain retrieval and validation" >> newman-summary.md
          echo "- ✅ Domain cleanup and lifecycle management" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "### Real-time Purge API" >> newman-summary.md
          echo "- ✅ URL purge with validation" >> newman-summary.md
          echo "- ✅ Cache key purge operations" >> newman-summary.md
          echo "- ✅ Purge response validation" >> newman-summary.md
          echo "" >> newman-summary.md
          
          echo "## 🔧 Newman Features Implemented" >> newman-summary.md
          echo "" >> newman-summary.md
          echo "1. **Pre-request Scripts**: Environment validation, data setup" >> newman-summary.md
          echo "2. **Test Scripts**: pm.test() assertions, response validation" >> newman-summary.md
          echo "3. **Variable Resolution**: {{baseUrl}}, {{token}}, {{accountId}}" >> newman-summary.md
          echo "4. **Collection Runner**: Sequential execution, iteration support" >> newman-summary.md
          echo "5. **Newman-style Reports**: Summary generation, metrics collection" >> newman-summary.md
          echo "" >> newman-summary.md
          
          echo "**Total Newman-Style Tests:** ~20 tests across 4 API categories" >> newman-summary.md
          
          cat newman-summary.md

      - name: 💬 Comment PR Results
        uses: actions/github-script@v7
        if: always() && github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('newman-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });

      - name: 📤 Upload Summary Report
        uses: actions/upload-artifact@v4
        with:
          name: newman-style-summary-${{ github.run_number }}
          path: newman-summary.md
          retention-days: 90

  notify-results:
    name: 📢 Notify Newman-Style Results
    runs-on: ubuntu-latest
    needs: [newman-style-tests, test-summary]
    if: always()
    
    steps:
      - name: 📊 Determine Overall Status
        id: status
        run: |
          if [[ "${{ needs.newman-style-tests.result }}" == "success" ]]; then
            echo "status=✅ SUCCESS" >> $GITHUB_OUTPUT
            echo "color=28a745" >> $GITHUB_OUTPUT
            echo "message=All Newman-style API tests passed successfully!" >> $GITHUB_OUTPUT
          elif [[ "${{ needs.newman-style-tests.result }}" == "failure" ]]; then
            echo "status=❌ FAILURE" >> $GITHUB_OUTPUT
            echo "color=d73a49" >> $GITHUB_OUTPUT
            echo "message=Some Newman-style API tests failed. Check logs for details." >> $GITHUB_OUTPUT
          else
            echo "status=⚠️ PARTIAL" >> $GITHUB_OUTPUT
            echo "color=ffc107" >> $GITHUB_OUTPUT
            echo "message=Newman-style tests completed with mixed results." >> $GITHUB_OUTPUT
          fi

      - name: 📝 Create Status Badge
        run: |
          echo "Newman-Style Test Status: ${{ steps.status.outputs.status }}"
          echo "Message: ${{ steps.status.outputs.message }}"
          
          mkdir -p status
          echo "${{ steps.status.outputs.status }}" > status/newman-latest.txt
          echo "$(date -u +%Y-%m-%dT%H:%M:%S.%3NZ)" > status/newman-timestamp.txt

      - name: 📤 Upload Status
        uses: actions/upload-artifact@v4
        with:
          name: newman-style-status-${{ github.run_number }}
          path: status/
          retention-days: 30
